{"id":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/package.json","includedInParent":true,"mtime":1612441929414},{"name":"elliptic","loc":{"line":3,"column":19},"parent":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","resolved":"/Users/michaljach/Sites/golf/node_modules/elliptic/lib/elliptic.js"}],"generated":{"js":"'use strict'\n\nconst EC = require('elliptic').ec\nconst ec = new EC('secp256k1')\n\nmodule.exports = {\n  verify: async (signature, publicKey, data) => {\n    if (!signature) {\n      throw new Error('No signature given')\n    }\n    if (!publicKey) {\n      throw new Error('Given publicKey was undefined')\n    }\n    if (!data) {\n      throw new Error('Given input data was undefined')\n    }\n    let res = false\n    const key = ec.keyPair({\n      pub: publicKey,\n      pubEnc: 'hex'\n    })\n    try {\n      res = ec.verify(data, signature, key)\n    } catch (e) {\n      // Catches 'Error: Signature without r or s'\n    }\n    return Promise.resolve(res)\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"../node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js":"'use strict'\n\nconst EC = require('elliptic').ec\nconst ec = new EC('secp256k1')\n\nmodule.exports = {\n  verify: async (signature, publicKey, data) => {\n    if (!signature) {\n      throw new Error('No signature given')\n    }\n    if (!publicKey) {\n      throw new Error('Given publicKey was undefined')\n    }\n    if (!data) {\n      throw new Error('Given input data was undefined')\n    }\n    let res = false\n    const key = ec.keyPair({\n      pub: publicKey,\n      pubEnc: 'hex'\n    })\n    try {\n      res = ec.verify(data, signature, key)\n    } catch (e) {\n      // Catches 'Error: Signature without r or s'\n    }\n    return Promise.resolve(res)\n  }\n}\n"},"lineCount":30}},"error":null,"hash":"23e15af94112108d6b89e6333e109619","cacheData":{"env":{}}}