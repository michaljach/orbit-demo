{"id":"../node_modules/ipfs-core/src/components/config.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"../runtime/config-nodejs.js","loc":{"line":3,"column":33},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/config.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/runtime/config-browser.js"},{"name":"ipfs-core-utils/src/with-timeout-option","loc":{"line":4,"column":34},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/config.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core-utils/src/with-timeout-option.js"},{"name":"debug","loc":{"line":5,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/config.js","resolved":"/Users/michaljach/Sites/golf/node_modules/debug/src/browser.js"}],"generated":{"js":"'use strict'\n\nconst getDefaultConfig = require('../runtime/config-nodejs.js')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst log = require('debug')('ipfs:core:config')\n\n/**\n * @param {Object} config\n * @param {import('.').Repo} config.repo\n */\nmodule.exports = ({ repo }) => {\n  return {\n    getAll: withTimeoutOption(getAll),\n    get: withTimeoutOption(get),\n    set: withTimeoutOption(set),\n    replace: withTimeoutOption(replace),\n    profiles: {\n      apply: withTimeoutOption(applyProfile),\n      list: withTimeoutOption(listProfiles)\n    }\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   */\n  async function getAll (options = {}) { // eslint-disable-line require-await\n    return repo.config.getAll(options)\n  }\n\n  /**\n   *\n   * @param {string} key\n   * @param {AbortOptions} [options]\n   */\n  async function get (key, options) { // eslint-disable-line require-await\n    if (!key) {\n      return Promise.reject(new Error('key argument is required'))\n    }\n\n    return repo.config.get(key, options)\n  }\n\n  /**\n   *\n   * @param {string} key\n   * @param {ToJSON} value\n   * @param {AbortOptions} [options]\n   */\n  async function set (key, value, options) { // eslint-disable-line require-await\n    return repo.config.set(key, value, options)\n  }\n\n  /**\n   * @param {IPFSConfig} value\n   * @param {AbortOptions} [options]\n   */\n  async function replace (value, options) { // eslint-disable-line require-await\n    return repo.config.replace(value, options)\n  }\n\n  /**\n   * @param {string} profileName\n   * @param {*} options\n   * @returns {Promise<{original: IPFSConfig, updated: IPFSConfig}>}\n   */\n  async function applyProfile (profileName, options = {}) {\n    const { dryRun } = options\n\n    const profile = profiles[profileName]\n\n    if (!profile) {\n      throw new Error(`No profile with name '${profileName}' exists`)\n    }\n\n    try {\n      const oldCfg = await repo.config.getAll(options)\n      let newCfg = JSON.parse(JSON.stringify(oldCfg)) // clone\n      newCfg = profile.transform(newCfg)\n\n      if (!dryRun) {\n        await repo.config.replace(newCfg, options)\n      }\n\n      // Scrub private key from output\n      // @ts-ignore `oldCfg.Identity` maybe undefined\n      delete oldCfg.Identity.PrivKey\n      delete newCfg.Identity.PrivKey\n\n      return { original: oldCfg, updated: newCfg }\n    } catch (err) {\n      log(err)\n\n      throw new Error(`Could not apply profile '${profileName}' to config: ${err.message}`)\n    }\n  }\n}\n\n/**\n * @param {any} _options\n * @returns {Promise<{name:string, description:string}[]>}\n */\nasync function listProfiles (_options) { // eslint-disable-line require-await\n  return Object.keys(profiles).map(name => ({\n    name,\n    description: profiles[name].description\n  }))\n}\n\nconst profiles = {\n  server: {\n    description: 'Recommended for nodes with public IPv4 address (servers, VPSes, etc.), disables host and content discovery and UPnP in local networks.',\n    /**\n     * @param {IPFSConfig} config\n     * @returns {IPFSConfig}\n     */\n    transform: (config) => {\n      config.Discovery.MDNS.Enabled = false\n      config.Discovery.webRTCStar.Enabled = false\n      config.Swarm = {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: true\n      }\n\n      return config\n    }\n  },\n  'local-discovery': {\n    description: 'Sets default values to fields affected by `server` profile, enables discovery and UPnP in local networks.',\n    /**\n     * @param {IPFSConfig} config\n     * @returns {IPFSConfig}\n     */\n    transform: (config) => {\n      config.Discovery.MDNS.Enabled = true\n      config.Discovery.webRTCStar.Enabled = true\n      config.Swarm = {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: false\n      }\n\n      return config\n    }\n  },\n  test: {\n    description: 'Reduces external interference, useful for running ipfs in test environments. Note that with these settings node won\\'t be able to talk to the rest of the network without manual bootstrap.',\n    /**\n     * @param {IPFSConfig} config\n     * @returns {IPFSConfig}\n     */\n    transform: (config) => {\n      const defaultConfig = getDefaultConfig()\n\n      config.Addresses.API = defaultConfig.Addresses.API ? '/ip4/127.0.0.1/tcp/0' : ''\n      config.Addresses.Gateway = defaultConfig.Addresses.Gateway ? '/ip4/127.0.0.1/tcp/0' : ''\n      config.Addresses.Swarm = defaultConfig.Addresses.Swarm.length ? ['/ip4/127.0.0.1/tcp/0'] : []\n      config.Addresses.Delegates = []\n      config.Bootstrap = []\n      config.Discovery.MDNS.Enabled = false\n      config.Discovery.webRTCStar.Enabled = false\n      config.Swarm = {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: true\n      }\n\n      return config\n    }\n  },\n  'default-networking': {\n    description: 'Restores default network settings. Inverse profile of the `test` profile.',\n    /**\n     * @param {IPFSConfig} config\n     * @returns {IPFSConfig}\n     */\n    transform: (config) => {\n      const defaultConfig = getDefaultConfig()\n\n      config.Addresses.API = defaultConfig.Addresses.API\n      config.Addresses.Gateway = defaultConfig.Addresses.Gateway\n      config.Addresses.Swarm = defaultConfig.Addresses.Swarm\n      config.Addresses.Delegates = defaultConfig.Addresses.Delegates\n      config.Bootstrap = defaultConfig.Bootstrap\n      config.Discovery.MDNS.Enabled = defaultConfig.Discovery.MDNS.Enabled\n      config.Discovery.webRTCStar.Enabled = defaultConfig.Discovery.webRTCStar.Enabled\n      config.Swarm = {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: false\n      }\n\n      return config\n    }\n  },\n  lowpower: {\n    description: 'Reduces daemon overhead on the system. May affect node functionality,performance of content discovery and data fetching may be degraded. Recommended for low power systems.',\n    /**\n     * @param {IPFSConfig} config\n     * @returns {IPFSConfig}\n     */\n    transform: (config) => {\n      const Swarm = config.Swarm || {}\n      const ConnMgr = Swarm.ConnMgr || {}\n      ConnMgr.LowWater = 20\n      ConnMgr.HighWater = 40\n\n      Swarm.ConnMgr = ConnMgr\n      config.Swarm = Swarm\n\n      return config\n    }\n  },\n  'default-power': {\n    description: 'Inverse of \"lowpower\" profile.',\n    /**\n     * @param {IPFSConfig} config\n     * @returns {IPFSConfig}\n     */\n    transform: (config) => {\n      const defaultConfig = getDefaultConfig()\n\n      config.Swarm = defaultConfig.Swarm\n\n      return config\n    }\n  }\n\n}\n\nmodule.exports.profiles = profiles\n\n/**\n * @typedef {Object} Config\n * @property {Get} get\n * @property {GetAll} getAll\n * @property {Set} set\n * @property {Replace} replace\n * @property {Profiles} profiles\n *\n * @callback Get\n * Returns the currently being used config. If the daemon is off, it returns\n * the stored config.\n *\n * @param {string} key - The key of the value that should be fetched from the\n * config file. If no key is passed, then the whole config will be returned.\n * @param {AbortOptions} [options]\n * @returns {Promise<ToJSON>} - An object containing the configuration of the IPFS node\n * @example\n * const config = await ipfs.config.get('Addresses.Swarm')\n * console.log(config)\n *\n *\n * @callback GetAll\n * Returns the full config been used. If the daemon is off, it returns the\n * stored config.\n *\n * @param {AbortOptions} [options]\n * @returns {Promise<IPFSConfig>}\n * @example\n * const config = await ipfs.config.getAll()\n * console.log(config)\n *\n * @callback Set\n * Adds or replaces a config value. Note that this operation will not spark the\n * restart of any service, i.e: if a config.replace changes the multiaddrs of\n * the Swarm, Swarm will have to be restarted manually for the changes to take\n * an effect.\n *\n * @param {string} key - The key of the value that should be added or replaced.\n * @param {ToJSON} value - The value to be set.\n * @param {AbortOptions} [options]\n * @returns {Promise<void>} - Promise succeeds if config change succeeded,\n * otherwise fails with error.\n * @example\n * // Disable MDNS Discovery\n * await ipfs.config.set('Discovery.MDNS.Enabled', false)\n *\n * @callback Replace\n * Adds or replaces a config file.\n *\n * Note that this operation will not spark the restart of any service,\n * i.e: if a config.replace changes the multiaddrs of the Swarm, Swarm will\n * have to be restarted manually for the changes to take an effect.\n *\n * @param {IPFSConfig} value - A new configuration.\n * @param {AbortOptions} [options]\n * @returns {Promise<void>}\n * @example\n * const newConfig = {\n *   Bootstrap: []\n * }\n * await ipfs.config.replace(newConfig)\n *\n * @typedef {Object} Profiles\n * @property {ListProfiles} list\n * @property {ApplyProfile} apply\n *\n * @callback ListProfiles\n * List available config profiles\n * @param {AbortOptions} [options]\n * @returns {Promise<Profile[]>} - An array with all the available config profiles\n * @example\n * const profiles = await ipfs.config.profiles.list()\n * profiles.forEach(profile => {\n *   console.info(profile.name, profile.description)\n * })\n *\n * @typedef {Object} Profile\n * @property {string} description\n * @property {string} name\n *\n *\n * @callback ApplyProfile\n * List available config profiles\n * @param {string} name\n * @param {ApplyOptions & AbortOptions} [options]\n * @returns {Promise<{original: IPFSConfig, updated: IPFSConfig}>}\n *\n * @typedef {Object} ApplyOptions\n * @property {boolean} [dryRun=false] - If true does not apply the profile\n *\n *\n * @typedef {Object} IPFSConfig\n * @property {AddressConfig} Addresses\n * @property {string} [Profiles]\n * @property {string[]} [Bootstrap]\n * @property {DiscoveryConfig} Discovery\n * @property {DatastoreConfig} [Datastore]\n * @property {IdentityConfig} [Identity]\n * @property {KeychainConfig} [Keychain]\n * @property {PubsubConfig} [Pubsub]\n * @property {SwarmConfig} [Swarm]\n * @property {RoutingConfig} [Routing]\n *\n * @typedef {Object} AddressConfig\n * Contains information about various listener addresses to be used by this node.\n * @property {APIAddress} [API='/ip4/127.0.0.1/tcp/5002']\n * @property {DelegateAddress} [Delegates=[]]\n * @property {GatewayAddress} [Gateway='/ip4/127.0.0.1/tcp/9090']\n * @property {SwarmAddress} [Swarm=['/ip4/0.0.0.0/tcp/4002', '/ip4/127.0.0.1/tcp/4003/ws']]\n * *\n * @typedef {string} Multiaddr\n * Composable and future-proof network address following [Multiaddr][]\n * specification.\n *\n * [Multiaddr]:https://github.com/multiformats/multiaddr/\n *\n * @typedef {Multiaddr|Multiaddr[]} APIAddress\n * The IPFS daemon exposes an [HTTP API][] that allows to control the node and\n * run the same commands as you can do from the command line. It is defined on\n * the [HTTP API][] Spec.\n *\n * [Multiaddr][] or array of [Multiaddr][] describing the address(es) to serve the\n * [HTTP API][] on.\n *\n * [Multiaddr]:https://github.com/multiformats/multiaddr/\n * [HTTP API]:https://docs.ipfs.io/reference/api/http\n *\n * @typedef {Multiaddr[]} DelegateAddress\n * Delegate peers are used to find peers and retrieve content from the network\n * on your behalf.\n *\n * Array of [Multiaddr][] describing which addresses to use as delegate nodes.\n *\n * [Multiaddr]:https://github.com/multiformats/multiaddr/\n *\n * @typedef {Multiaddr|Multiaddr[]} GatewayAddress\n * A gateway is exposed by the IPFS daemon, which allows an easy way to access\n * content from IPFS, using an IPFS path.\n *\n * [Multiaddr][] or array of [Multiaddr][] describing the address(es) to serve\n * the gateway on.\n *\n * [Multiaddr]:https://github.com/multiformats/multiaddr/\n *\n * @typedef {Multiaddr[]} SwarmAddress\n * Array of [Multiaddr][] describing which addresses to listen on for p2p swarm\n * connections.\n *\n * [Multiaddr]:https://github.com/multiformats/multiaddr/\n *\n *\n * @typedef {Multiaddr[]} BootstrapConfig\n * Bootstrap is an array of [Multiaddr][] of trusted nodes to connect to in order\n * to initiate a connection to the network.\n *\n * [Multiaddr]:https://github.com/multiformats/multiaddr/\n *\n * @typedef {Object} DatastoreConfig\n * Contains information related to the construction and operation of the on-disk\n * storage system.\n * @property {DatastoreSpec} [Spec]\n *\n * @typedef {Object} DatastoreSpec\n * Spec defines the structure of the IPFS datastore. It is a composable\n * structure, where each datastore is represented by a JSON object. Datastores\n * can wrap other datastores to provide extra functionality (e.g. metrics,\n * logging, or caching).\n *\n * This can be changed manually, however, if you make any changes that require\n * a different on-disk structure, you will need to run the [ipfs-ds-convert][]\n * tool to migrate data into the new structures.\n *\n * [ipfs-ds-convert]:https://github.com/ipfs/ipfs-ds-convert\n *\n * Default:\n * ```json\n * {\n *   \"mounts\": [\n *     {\n *       \"child\": {\n *         \"path\": \"blocks\",\n *        \"shardFunc\": \"/repo/flatfs/shard/v1/next-to-last/2\",\n *        \"sync\": true,\n *        \"type\": \"flatfs\"\n *      },\n *      \"mountpoint\": \"/blocks\",\n *      \"prefix\": \"flatfs.datastore\",\n *      \"type\": \"measure\"\n *    },\n *    {\n *      \"child\": {\n *        \"compression\": \"none\",\n *        \"path\": \"datastore\",\n *        \"type\": \"levelds\"\n *      },\n *      \"mountpoint\": \"/\",\n *      \"prefix\": \"leveldb.datastore\",\n *      \"type\": \"measure\"\n *    }\n *  ],\n *  \"type\": \"mount\"\n * }\n * ```\n *\n * @typedef {Object} DiscoveryConfig\n * Contains options for configuring IPFS node discovery mechanisms.\n * @property {MDNSDiscovery} MDNS\n * @property {WebRTCStarDiscovery} webRTCStar\n *\n * @typedef {Object} MDNSDiscovery\n * Multicast DNS is a discovery protocol that is able to find other peers on the local network.\n * @property {boolean} [Enabled=true] - A boolean value for whether or not MDNS\n * should be active.\n * @property {number} [Interval=10] - A number of seconds to wait between\n * discovery checks.\n *\n * @typedef {Object} WebRTCStarDiscovery\n * WebRTCStar is a discovery mechanism prvided by a signalling-star that allows\n * peer-to-peer communications in the browser.\n * @property {boolean} [Enabled=true] - A boolean value for whether or not\n * webRTCStar should be active.\n *\n * @typedef {Object} IdentityConfig\n * @property {PeerID} [PeerID]\n * @property {PrivateKey} [PrivKey]\n *\n * @typedef {string} PeerID\n * The unique PKI identity label for this configs peer. Set on init and never\n * read, its merely here for convenience. IPFS will always generate the peerID\n * from its keypair at runtime.\n *\n * @typedef {string} PrivateKey\n * The base64 encoded protobuf describing (and containing) the nodes private key.\n *\n * @typedef {Object} KeychainConfig\n * We can customize the key management and criptographically protected messages\n * by changing the Keychain options. Those options are used for generating the\n * derived encryption key (DEK).\n *\n * The DEK object, along with the passPhrase, is the input to a PBKDF2 function.\n *\n * You can check the [parameter choice for pbkdf2](https://cryptosense.com/parameter-choice-for-pbkdf2/)\n * for more information.\n * @property {DEK} DEK\n *\n * @typedef {Object} DEK\n * @property {number} keyLength\n * @property {number} iterationCount\n * @property {string} salt\n * @property {string} hash\n *\n * @typedef {Object} PubsubConfig\n * Options for configuring the pubsub subsystem. It is important pointing out\n * that this is not supported in the browser. If you want to configure a\n * different pubsub router in the browser you must configure\n * `libp2p.modules.pubsub` options instead.\n *\n * @property {PubSubRouter} [Router='gossipsub']\n * @property {boolean} [Enabled=true]\n *\n * @typedef {'gossipsub'|'floodsub'} PubSubRouter\n * A string value for specifying which pubsub routing protocol to use. You can\n * either use `'gossipsub'` in order to use the [ChainSafe/gossipsub-js]\n * (https://github.com/ChainSafe/gossipsub-js) implementation, or `'floodsub'`\n * to use the [libp2p/js-libp2p-floodsub](https://github.com/libp2p/js-libp2p-floodsub)\n * implementation.\n *\n * You can read more about these implementations on the [libp2p/specs/pubsub]\n * (https://github.com/libp2p/specs/tree/master/pubsub) document.\n *\n * @typedef {Object} SwarmConfig\n * Options for configuring the swarm.\n * @property {ConnMgrConfig} [ConnMgr]\n * @property {boolean} [DisableNatPortMap]\n *\n * @typedef {Object} ConnMgrConfig\n * The connection manager determines which and how many connections to keep and\n * can be configured to keep.\n *\n * The \"basic\" connection manager tries to keep between `LowWater` and\n * `HighWater` connections. It works by:\n *\n * 1. Keeping all connections until `HighWater` connections is reached.\n * 2. Once `HighWater` is reached, it closes connections until `LowWater` is\n * reached.\n *\n * @property {number} [LowWater=200] - The minimum number of connections to\n * maintain.\n * @property {number} [HighWater=500] - The number of connections that, when\n * exceeded, will trigger a connection GC operation.\n *\n * {{LowWater?:number, HighWater?:number}} ConnMgr\n *\n * @typedef {Object} RoutingConfig\n * @property {string} [Type]\n *\n * @typedef {import('ipfs-core-types/src/basic').ToJSON} ToJSON\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/ipfs-core/src/components/config.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/config.js":"'use strict'\n\nconst getDefaultConfig = require('../runtime/config-nodejs.js')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst log = require('debug')('ipfs:core:config')\n\n/**\n * @param {Object} config\n * @param {import('.').Repo} config.repo\n */\nmodule.exports = ({ repo }) => {\n  return {\n    getAll: withTimeoutOption(getAll),\n    get: withTimeoutOption(get),\n    set: withTimeoutOption(set),\n    replace: withTimeoutOption(replace),\n    profiles: {\n      apply: withTimeoutOption(applyProfile),\n      list: withTimeoutOption(listProfiles)\n    }\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   */\n  async function getAll (options = {}) { // eslint-disable-line require-await\n    return repo.config.getAll(options)\n  }\n\n  /**\n   *\n   * @param {string} key\n   * @param {AbortOptions} [options]\n   */\n  async function get (key, options) { // eslint-disable-line require-await\n    if (!key) {\n      return Promise.reject(new Error('key argument is required'))\n    }\n\n    return repo.config.get(key, options)\n  }\n\n  /**\n   *\n   * @param {string} key\n   * @param {ToJSON} value\n   * @param {AbortOptions} [options]\n   */\n  async function set (key, value, options) { // eslint-disable-line require-await\n    return repo.config.set(key, value, options)\n  }\n\n  /**\n   * @param {IPFSConfig} value\n   * @param {AbortOptions} [options]\n   */\n  async function replace (value, options) { // eslint-disable-line require-await\n    return repo.config.replace(value, options)\n  }\n\n  /**\n   * @param {string} profileName\n   * @param {*} options\n   * @returns {Promise<{original: IPFSConfig, updated: IPFSConfig}>}\n   */\n  async function applyProfile (profileName, options = {}) {\n    const { dryRun } = options\n\n    const profile = profiles[profileName]\n\n    if (!profile) {\n      throw new Error(`No profile with name '${profileName}' exists`)\n    }\n\n    try {\n      const oldCfg = await repo.config.getAll(options)\n      let newCfg = JSON.parse(JSON.stringify(oldCfg)) // clone\n      newCfg = profile.transform(newCfg)\n\n      if (!dryRun) {\n        await repo.config.replace(newCfg, options)\n      }\n\n      // Scrub private key from output\n      // @ts-ignore `oldCfg.Identity` maybe undefined\n      delete oldCfg.Identity.PrivKey\n      delete newCfg.Identity.PrivKey\n\n      return { original: oldCfg, updated: newCfg }\n    } catch (err) {\n      log(err)\n\n      throw new Error(`Could not apply profile '${profileName}' to config: ${err.message}`)\n    }\n  }\n}\n\n/**\n * @param {any} _options\n * @returns {Promise<{name:string, description:string}[]>}\n */\nasync function listProfiles (_options) { // eslint-disable-line require-await\n  return Object.keys(profiles).map(name => ({\n    name,\n    description: profiles[name].description\n  }))\n}\n\nconst profiles = {\n  server: {\n    description: 'Recommended for nodes with public IPv4 address (servers, VPSes, etc.), disables host and content discovery and UPnP in local networks.',\n    /**\n     * @param {IPFSConfig} config\n     * @returns {IPFSConfig}\n     */\n    transform: (config) => {\n      config.Discovery.MDNS.Enabled = false\n      config.Discovery.webRTCStar.Enabled = false\n      config.Swarm = {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: true\n      }\n\n      return config\n    }\n  },\n  'local-discovery': {\n    description: 'Sets default values to fields affected by `server` profile, enables discovery and UPnP in local networks.',\n    /**\n     * @param {IPFSConfig} config\n     * @returns {IPFSConfig}\n     */\n    transform: (config) => {\n      config.Discovery.MDNS.Enabled = true\n      config.Discovery.webRTCStar.Enabled = true\n      config.Swarm = {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: false\n      }\n\n      return config\n    }\n  },\n  test: {\n    description: 'Reduces external interference, useful for running ipfs in test environments. Note that with these settings node won\\'t be able to talk to the rest of the network without manual bootstrap.',\n    /**\n     * @param {IPFSConfig} config\n     * @returns {IPFSConfig}\n     */\n    transform: (config) => {\n      const defaultConfig = getDefaultConfig()\n\n      config.Addresses.API = defaultConfig.Addresses.API ? '/ip4/127.0.0.1/tcp/0' : ''\n      config.Addresses.Gateway = defaultConfig.Addresses.Gateway ? '/ip4/127.0.0.1/tcp/0' : ''\n      config.Addresses.Swarm = defaultConfig.Addresses.Swarm.length ? ['/ip4/127.0.0.1/tcp/0'] : []\n      config.Addresses.Delegates = []\n      config.Bootstrap = []\n      config.Discovery.MDNS.Enabled = false\n      config.Discovery.webRTCStar.Enabled = false\n      config.Swarm = {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: true\n      }\n\n      return config\n    }\n  },\n  'default-networking': {\n    description: 'Restores default network settings. Inverse profile of the `test` profile.',\n    /**\n     * @param {IPFSConfig} config\n     * @returns {IPFSConfig}\n     */\n    transform: (config) => {\n      const defaultConfig = getDefaultConfig()\n\n      config.Addresses.API = defaultConfig.Addresses.API\n      config.Addresses.Gateway = defaultConfig.Addresses.Gateway\n      config.Addresses.Swarm = defaultConfig.Addresses.Swarm\n      config.Addresses.Delegates = defaultConfig.Addresses.Delegates\n      config.Bootstrap = defaultConfig.Bootstrap\n      config.Discovery.MDNS.Enabled = defaultConfig.Discovery.MDNS.Enabled\n      config.Discovery.webRTCStar.Enabled = defaultConfig.Discovery.webRTCStar.Enabled\n      config.Swarm = {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: false\n      }\n\n      return config\n    }\n  },\n  lowpower: {\n    description: 'Reduces daemon overhead on the system. May affect node functionality,performance of content discovery and data fetching may be degraded. Recommended for low power systems.',\n    /**\n     * @param {IPFSConfig} config\n     * @returns {IPFSConfig}\n     */\n    transform: (config) => {\n      const Swarm = config.Swarm || {}\n      const ConnMgr = Swarm.ConnMgr || {}\n      ConnMgr.LowWater = 20\n      ConnMgr.HighWater = 40\n\n      Swarm.ConnMgr = ConnMgr\n      config.Swarm = Swarm\n\n      return config\n    }\n  },\n  'default-power': {\n    description: 'Inverse of \"lowpower\" profile.',\n    /**\n     * @param {IPFSConfig} config\n     * @returns {IPFSConfig}\n     */\n    transform: (config) => {\n      const defaultConfig = getDefaultConfig()\n\n      config.Swarm = defaultConfig.Swarm\n\n      return config\n    }\n  }\n\n}\n\nmodule.exports.profiles = profiles\n\n/**\n * @typedef {Object} Config\n * @property {Get} get\n * @property {GetAll} getAll\n * @property {Set} set\n * @property {Replace} replace\n * @property {Profiles} profiles\n *\n * @callback Get\n * Returns the currently being used config. If the daemon is off, it returns\n * the stored config.\n *\n * @param {string} key - The key of the value that should be fetched from the\n * config file. If no key is passed, then the whole config will be returned.\n * @param {AbortOptions} [options]\n * @returns {Promise<ToJSON>} - An object containing the configuration of the IPFS node\n * @example\n * const config = await ipfs.config.get('Addresses.Swarm')\n * console.log(config)\n *\n *\n * @callback GetAll\n * Returns the full config been used. If the daemon is off, it returns the\n * stored config.\n *\n * @param {AbortOptions} [options]\n * @returns {Promise<IPFSConfig>}\n * @example\n * const config = await ipfs.config.getAll()\n * console.log(config)\n *\n * @callback Set\n * Adds or replaces a config value. Note that this operation will not spark the\n * restart of any service, i.e: if a config.replace changes the multiaddrs of\n * the Swarm, Swarm will have to be restarted manually for the changes to take\n * an effect.\n *\n * @param {string} key - The key of the value that should be added or replaced.\n * @param {ToJSON} value - The value to be set.\n * @param {AbortOptions} [options]\n * @returns {Promise<void>} - Promise succeeds if config change succeeded,\n * otherwise fails with error.\n * @example\n * // Disable MDNS Discovery\n * await ipfs.config.set('Discovery.MDNS.Enabled', false)\n *\n * @callback Replace\n * Adds or replaces a config file.\n *\n * Note that this operation will not spark the restart of any service,\n * i.e: if a config.replace changes the multiaddrs of the Swarm, Swarm will\n * have to be restarted manually for the changes to take an effect.\n *\n * @param {IPFSConfig} value - A new configuration.\n * @param {AbortOptions} [options]\n * @returns {Promise<void>}\n * @example\n * const newConfig = {\n *   Bootstrap: []\n * }\n * await ipfs.config.replace(newConfig)\n *\n * @typedef {Object} Profiles\n * @property {ListProfiles} list\n * @property {ApplyProfile} apply\n *\n * @callback ListProfiles\n * List available config profiles\n * @param {AbortOptions} [options]\n * @returns {Promise<Profile[]>} - An array with all the available config profiles\n * @example\n * const profiles = await ipfs.config.profiles.list()\n * profiles.forEach(profile => {\n *   console.info(profile.name, profile.description)\n * })\n *\n * @typedef {Object} Profile\n * @property {string} description\n * @property {string} name\n *\n *\n * @callback ApplyProfile\n * List available config profiles\n * @param {string} name\n * @param {ApplyOptions & AbortOptions} [options]\n * @returns {Promise<{original: IPFSConfig, updated: IPFSConfig}>}\n *\n * @typedef {Object} ApplyOptions\n * @property {boolean} [dryRun=false] - If true does not apply the profile\n *\n *\n * @typedef {Object} IPFSConfig\n * @property {AddressConfig} Addresses\n * @property {string} [Profiles]\n * @property {string[]} [Bootstrap]\n * @property {DiscoveryConfig} Discovery\n * @property {DatastoreConfig} [Datastore]\n * @property {IdentityConfig} [Identity]\n * @property {KeychainConfig} [Keychain]\n * @property {PubsubConfig} [Pubsub]\n * @property {SwarmConfig} [Swarm]\n * @property {RoutingConfig} [Routing]\n *\n * @typedef {Object} AddressConfig\n * Contains information about various listener addresses to be used by this node.\n * @property {APIAddress} [API='/ip4/127.0.0.1/tcp/5002']\n * @property {DelegateAddress} [Delegates=[]]\n * @property {GatewayAddress} [Gateway='/ip4/127.0.0.1/tcp/9090']\n * @property {SwarmAddress} [Swarm=['/ip4/0.0.0.0/tcp/4002', '/ip4/127.0.0.1/tcp/4003/ws']]\n * *\n * @typedef {string} Multiaddr\n * Composable and future-proof network address following [Multiaddr][]\n * specification.\n *\n * [Multiaddr]:https://github.com/multiformats/multiaddr/\n *\n * @typedef {Multiaddr|Multiaddr[]} APIAddress\n * The IPFS daemon exposes an [HTTP API][] that allows to control the node and\n * run the same commands as you can do from the command line. It is defined on\n * the [HTTP API][] Spec.\n *\n * [Multiaddr][] or array of [Multiaddr][] describing the address(es) to serve the\n * [HTTP API][] on.\n *\n * [Multiaddr]:https://github.com/multiformats/multiaddr/\n * [HTTP API]:https://docs.ipfs.io/reference/api/http\n *\n * @typedef {Multiaddr[]} DelegateAddress\n * Delegate peers are used to find peers and retrieve content from the network\n * on your behalf.\n *\n * Array of [Multiaddr][] describing which addresses to use as delegate nodes.\n *\n * [Multiaddr]:https://github.com/multiformats/multiaddr/\n *\n * @typedef {Multiaddr|Multiaddr[]} GatewayAddress\n * A gateway is exposed by the IPFS daemon, which allows an easy way to access\n * content from IPFS, using an IPFS path.\n *\n * [Multiaddr][] or array of [Multiaddr][] describing the address(es) to serve\n * the gateway on.\n *\n * [Multiaddr]:https://github.com/multiformats/multiaddr/\n *\n * @typedef {Multiaddr[]} SwarmAddress\n * Array of [Multiaddr][] describing which addresses to listen on for p2p swarm\n * connections.\n *\n * [Multiaddr]:https://github.com/multiformats/multiaddr/\n *\n *\n * @typedef {Multiaddr[]} BootstrapConfig\n * Bootstrap is an array of [Multiaddr][] of trusted nodes to connect to in order\n * to initiate a connection to the network.\n *\n * [Multiaddr]:https://github.com/multiformats/multiaddr/\n *\n * @typedef {Object} DatastoreConfig\n * Contains information related to the construction and operation of the on-disk\n * storage system.\n * @property {DatastoreSpec} [Spec]\n *\n * @typedef {Object} DatastoreSpec\n * Spec defines the structure of the IPFS datastore. It is a composable\n * structure, where each datastore is represented by a JSON object. Datastores\n * can wrap other datastores to provide extra functionality (e.g. metrics,\n * logging, or caching).\n *\n * This can be changed manually, however, if you make any changes that require\n * a different on-disk structure, you will need to run the [ipfs-ds-convert][]\n * tool to migrate data into the new structures.\n *\n * [ipfs-ds-convert]:https://github.com/ipfs/ipfs-ds-convert\n *\n * Default:\n * ```json\n * {\n *   \"mounts\": [\n *     {\n *       \"child\": {\n *         \"path\": \"blocks\",\n *        \"shardFunc\": \"/repo/flatfs/shard/v1/next-to-last/2\",\n *        \"sync\": true,\n *        \"type\": \"flatfs\"\n *      },\n *      \"mountpoint\": \"/blocks\",\n *      \"prefix\": \"flatfs.datastore\",\n *      \"type\": \"measure\"\n *    },\n *    {\n *      \"child\": {\n *        \"compression\": \"none\",\n *        \"path\": \"datastore\",\n *        \"type\": \"levelds\"\n *      },\n *      \"mountpoint\": \"/\",\n *      \"prefix\": \"leveldb.datastore\",\n *      \"type\": \"measure\"\n *    }\n *  ],\n *  \"type\": \"mount\"\n * }\n * ```\n *\n * @typedef {Object} DiscoveryConfig\n * Contains options for configuring IPFS node discovery mechanisms.\n * @property {MDNSDiscovery} MDNS\n * @property {WebRTCStarDiscovery} webRTCStar\n *\n * @typedef {Object} MDNSDiscovery\n * Multicast DNS is a discovery protocol that is able to find other peers on the local network.\n * @property {boolean} [Enabled=true] - A boolean value for whether or not MDNS\n * should be active.\n * @property {number} [Interval=10] - A number of seconds to wait between\n * discovery checks.\n *\n * @typedef {Object} WebRTCStarDiscovery\n * WebRTCStar is a discovery mechanism prvided by a signalling-star that allows\n * peer-to-peer communications in the browser.\n * @property {boolean} [Enabled=true] - A boolean value for whether or not\n * webRTCStar should be active.\n *\n * @typedef {Object} IdentityConfig\n * @property {PeerID} [PeerID]\n * @property {PrivateKey} [PrivKey]\n *\n * @typedef {string} PeerID\n * The unique PKI identity label for this configs peer. Set on init and never\n * read, its merely here for convenience. IPFS will always generate the peerID\n * from its keypair at runtime.\n *\n * @typedef {string} PrivateKey\n * The base64 encoded protobuf describing (and containing) the nodes private key.\n *\n * @typedef {Object} KeychainConfig\n * We can customize the key management and criptographically protected messages\n * by changing the Keychain options. Those options are used for generating the\n * derived encryption key (DEK).\n *\n * The DEK object, along with the passPhrase, is the input to a PBKDF2 function.\n *\n * You can check the [parameter choice for pbkdf2](https://cryptosense.com/parameter-choice-for-pbkdf2/)\n * for more information.\n * @property {DEK} DEK\n *\n * @typedef {Object} DEK\n * @property {number} keyLength\n * @property {number} iterationCount\n * @property {string} salt\n * @property {string} hash\n *\n * @typedef {Object} PubsubConfig\n * Options for configuring the pubsub subsystem. It is important pointing out\n * that this is not supported in the browser. If you want to configure a\n * different pubsub router in the browser you must configure\n * `libp2p.modules.pubsub` options instead.\n *\n * @property {PubSubRouter} [Router='gossipsub']\n * @property {boolean} [Enabled=true]\n *\n * @typedef {'gossipsub'|'floodsub'} PubSubRouter\n * A string value for specifying which pubsub routing protocol to use. You can\n * either use `'gossipsub'` in order to use the [ChainSafe/gossipsub-js]\n * (https://github.com/ChainSafe/gossipsub-js) implementation, or `'floodsub'`\n * to use the [libp2p/js-libp2p-floodsub](https://github.com/libp2p/js-libp2p-floodsub)\n * implementation.\n *\n * You can read more about these implementations on the [libp2p/specs/pubsub]\n * (https://github.com/libp2p/specs/tree/master/pubsub) document.\n *\n * @typedef {Object} SwarmConfig\n * Options for configuring the swarm.\n * @property {ConnMgrConfig} [ConnMgr]\n * @property {boolean} [DisableNatPortMap]\n *\n * @typedef {Object} ConnMgrConfig\n * The connection manager determines which and how many connections to keep and\n * can be configured to keep.\n *\n * The \"basic\" connection manager tries to keep between `LowWater` and\n * `HighWater` connections. It works by:\n *\n * 1. Keeping all connections until `HighWater` connections is reached.\n * 2. Once `HighWater` is reached, it closes connections until `LowWater` is\n * reached.\n *\n * @property {number} [LowWater=200] - The minimum number of connections to\n * maintain.\n * @property {number} [HighWater=500] - The number of connections that, when\n * exceeded, will trigger a connection GC operation.\n *\n * {{LowWater?:number, HighWater?:number}} ConnMgr\n *\n * @typedef {Object} RoutingConfig\n * @property {string} [Type]\n *\n * @typedef {import('ipfs-core-types/src/basic').ToJSON} ToJSON\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"lineCount":528}},"error":null,"hash":"2e9c4b9516483b72eed1a0775fde8e2b","cacheData":{"env":{}}}