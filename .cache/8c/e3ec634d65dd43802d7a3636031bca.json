{"id":"../node_modules/crdts/src/G-Counter.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/crdts/package.json","includedInParent":true,"mtime":1612441846205},{"name":"./utils","loc":{"line":3,"column":30},"parent":"/Users/michaljach/Sites/golf/node_modules/crdts/src/G-Counter.js","resolved":"/Users/michaljach/Sites/golf/node_modules/crdts/src/utils.js"}],"generated":{"js":"'use strict'\n\nconst { deepEqual } = require('./utils')\nconst sum = (acc, val) => acc + val\n\n/**\n * G-Counter\n *\n * Operation-based Increment-Only Counter CRDT\n *\n * Sources: \n * \"A comprehensive study of Convergent and Commutative Replicated Data Types\"\n * http://hal.upmc.fr/inria-00555588/document, \"3.1.1 Op-based counter and 3.1.2  State-based increment-only Counter (G-Counter)\"\n */\n\nclass GCounter {\n  constructor (id, counter) {\n    this.id = id\n    this._counters = counter ? counter : {}\n    this._counters[this.id] = this._counters[this.id] ? this._counters[this.id] : 0\n  }\n\n  get value () {\n    return Object.values(this._counters).reduce(sum, 0)\n  }\n\n  increment (amount) {\n    if (amount && amount < 1) \n      return\n\n    if (amount === undefined || amount === null)\n      amount = 1\n\n    this._counters[this.id] = this._counters[this.id] + amount\n  }\n\n  merge (other) {\n    // Go through each counter in the other counter\n    Object.entries(other._counters).forEach(([id, value]) => {\n      // Take the maximum of the counter value we have or the counter value they have\n      this._counters[id] = Math.max(this._counters[id] || 0, value)\n    })\n  }\n\n  toJSON () {\n    return { \n      id: this.id, \n      counters: this._counters \n    }\n  }\n\n  isEqual (other) {\n    return GCounter.isEqual(this, other)\n  }\n\n  static from (json) {\n    return new GCounter(json.id, json.counters)\n  }\n\n  static isEqual (a, b) {\n    if(a.id !== b.id)\n      return false\n\n    return deepEqual(a._counters, b._counters)\n  }\n}\n\nmodule.exports = GCounter\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/crdts/src/G-Counter.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}}],"sources":{"../node_modules/crdts/src/G-Counter.js":"'use strict'\n\nconst { deepEqual } = require('./utils')\nconst sum = (acc, val) => acc + val\n\n/**\n * G-Counter\n *\n * Operation-based Increment-Only Counter CRDT\n *\n * Sources: \n * \"A comprehensive study of Convergent and Commutative Replicated Data Types\"\n * http://hal.upmc.fr/inria-00555588/document, \"3.1.1 Op-based counter and 3.1.2  State-based increment-only Counter (G-Counter)\"\n */\n\nclass GCounter {\n  constructor (id, counter) {\n    this.id = id\n    this._counters = counter ? counter : {}\n    this._counters[this.id] = this._counters[this.id] ? this._counters[this.id] : 0\n  }\n\n  get value () {\n    return Object.values(this._counters).reduce(sum, 0)\n  }\n\n  increment (amount) {\n    if (amount && amount < 1) \n      return\n\n    if (amount === undefined || amount === null)\n      amount = 1\n\n    this._counters[this.id] = this._counters[this.id] + amount\n  }\n\n  merge (other) {\n    // Go through each counter in the other counter\n    Object.entries(other._counters).forEach(([id, value]) => {\n      // Take the maximum of the counter value we have or the counter value they have\n      this._counters[id] = Math.max(this._counters[id] || 0, value)\n    })\n  }\n\n  toJSON () {\n    return { \n      id: this.id, \n      counters: this._counters \n    }\n  }\n\n  isEqual (other) {\n    return GCounter.isEqual(this, other)\n  }\n\n  static from (json) {\n    return new GCounter(json.id, json.counters)\n  }\n\n  static isEqual (a, b) {\n    if(a.id !== b.id)\n      return false\n\n    return deepEqual(a._counters, b._counters)\n  }\n}\n\nmodule.exports = GCounter\n"},"lineCount":69}},"error":null,"hash":"ec5087757e989c98d6ac1e01cecb91af","cacheData":{"env":{}}}