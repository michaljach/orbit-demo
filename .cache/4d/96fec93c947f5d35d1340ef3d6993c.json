{"id":"../node_modules/ipfs-bitswap/src/notifications.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/package.json","includedInParent":true,"mtime":1612441378236},{"name":"events","loc":{"line":3,"column":29},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/src/notifications.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/events/events.js"},{"name":"ipld-block","loc":{"line":4,"column":22},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/src/notifications.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipld-block/src/index.js"},{"name":"uint8arrays/equals","loc":{"line":5,"column":33},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/src/notifications.js","resolved":"/Users/michaljach/Sites/golf/node_modules/uint8arrays/equals.js"},{"name":"uint8arrays/to-string","loc":{"line":6,"column":35},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/src/notifications.js","resolved":"/Users/michaljach/Sites/golf/node_modules/uint8arrays/to-string.js"},{"name":"./constants","loc":{"line":8,"column":26},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/src/notifications.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/src/constants.js"},{"name":"./utils","loc":{"line":9,"column":23},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/src/notifications.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/src/utils/index.js"}],"generated":{"js":"'use strict'\n\nconst EventEmitter = require('events').EventEmitter\nconst Block = require('ipld-block')\nconst uint8ArrayEquals = require('uint8arrays/equals')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\nconst CONSTANTS = require('./constants')\nconst logger = require('./utils').logger\n\nconst unwantEvent = (cid) => `unwant:${uint8ArrayToString(cid.multihash, 'base64')}`\nconst blockEvent = (cid) => `block:${uint8ArrayToString(cid.multihash, 'base64')}`\n\n/**\n * Internal module used to track events about incoming blocks,\n * wants and unwants.\n *\n * @param {PeerId} peerId\n * @private\n */\nclass Notifications extends EventEmitter {\n  constructor (peerId) {\n    super()\n\n    this.setMaxListeners(CONSTANTS.maxListeners)\n\n    this._log = logger(peerId, 'notif')\n  }\n\n  /**\n   * Signal the system that we received `block`.\n   *\n   * @param {Block} block\n   * @returns {void}\n   */\n  hasBlock (block) {\n    const event = blockEvent(block.cid)\n    this._log(event)\n    this.emit(event, block)\n  }\n\n  /**\n   * Signal the system that we are waiting to receive the\n   * block associated with the given `cid`.\n   * Returns a Promise that resolves to the block when it is received,\n   * or undefined when the block is unwanted.\n   *\n   * @param {CID} cid\n   * @param {Object} options\n   * @param {AbortSignal} options.abortSignal\n   * @returns {Promise<Block>}\n   */\n  wantBlock (cid, options = {}) {\n    if (!cid) {\n      throw new Error('Not a valid cid')\n    }\n\n    const blockEvt = blockEvent(cid)\n    const unwantEvt = unwantEvent(cid)\n\n    this._log(`wantBlock:${cid}`)\n\n    return new Promise((resolve, reject) => {\n      const onUnwant = () => {\n        this.removeListener(blockEvt, onBlock)\n        reject(new Error(`Block for ${cid} unwanted`))\n      }\n      const onBlock = (block) => {\n        this.removeListener(unwantEvt, onUnwant)\n\n        if (!uint8ArrayEquals(cid.multihash, block.cid.multihash)) {\n          // wrong block\n          return reject(new Error(`Incorrect block received for ${cid}`))\n        } else if (cid.version !== block.cid.version || cid.codec !== block.cid.codec) {\n          // right block but wrong version or codec\n          block = new Block(block.data, cid)\n        }\n\n        resolve(block)\n      }\n\n      this.once(unwantEvt, onUnwant)\n      this.once(blockEvt, onBlock)\n\n      if (options && options.signal) {\n        options.signal.addEventListener('abort', () => {\n          this.removeListener(blockEvt, onBlock)\n          this.removeListener(unwantEvt, onUnwant)\n\n          reject(new Error(`Want for ${cid} aborted`))\n        })\n      }\n    })\n  }\n\n  /**\n   * Signal that the block is not wanted anymore.\n   *\n   * @param {CID} cid - the CID of the block that is not wanted anymore.\n   * @returns {void}\n   */\n  unwantBlock (cid) {\n    const event = unwantEvent(cid)\n    this._log(event)\n    this.emit(event)\n  }\n}\n\nmodule.exports = Notifications\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/notifications.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}}],"sources":{"../node_modules/ipfs-bitswap/src/notifications.js":"'use strict'\n\nconst EventEmitter = require('events').EventEmitter\nconst Block = require('ipld-block')\nconst uint8ArrayEquals = require('uint8arrays/equals')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\nconst CONSTANTS = require('./constants')\nconst logger = require('./utils').logger\n\nconst unwantEvent = (cid) => `unwant:${uint8ArrayToString(cid.multihash, 'base64')}`\nconst blockEvent = (cid) => `block:${uint8ArrayToString(cid.multihash, 'base64')}`\n\n/**\n * Internal module used to track events about incoming blocks,\n * wants and unwants.\n *\n * @param {PeerId} peerId\n * @private\n */\nclass Notifications extends EventEmitter {\n  constructor (peerId) {\n    super()\n\n    this.setMaxListeners(CONSTANTS.maxListeners)\n\n    this._log = logger(peerId, 'notif')\n  }\n\n  /**\n   * Signal the system that we received `block`.\n   *\n   * @param {Block} block\n   * @returns {void}\n   */\n  hasBlock (block) {\n    const event = blockEvent(block.cid)\n    this._log(event)\n    this.emit(event, block)\n  }\n\n  /**\n   * Signal the system that we are waiting to receive the\n   * block associated with the given `cid`.\n   * Returns a Promise that resolves to the block when it is received,\n   * or undefined when the block is unwanted.\n   *\n   * @param {CID} cid\n   * @param {Object} options\n   * @param {AbortSignal} options.abortSignal\n   * @returns {Promise<Block>}\n   */\n  wantBlock (cid, options = {}) {\n    if (!cid) {\n      throw new Error('Not a valid cid')\n    }\n\n    const blockEvt = blockEvent(cid)\n    const unwantEvt = unwantEvent(cid)\n\n    this._log(`wantBlock:${cid}`)\n\n    return new Promise((resolve, reject) => {\n      const onUnwant = () => {\n        this.removeListener(blockEvt, onBlock)\n        reject(new Error(`Block for ${cid} unwanted`))\n      }\n      const onBlock = (block) => {\n        this.removeListener(unwantEvt, onUnwant)\n\n        if (!uint8ArrayEquals(cid.multihash, block.cid.multihash)) {\n          // wrong block\n          return reject(new Error(`Incorrect block received for ${cid}`))\n        } else if (cid.version !== block.cid.version || cid.codec !== block.cid.codec) {\n          // right block but wrong version or codec\n          block = new Block(block.data, cid)\n        }\n\n        resolve(block)\n      }\n\n      this.once(unwantEvt, onUnwant)\n      this.once(blockEvt, onBlock)\n\n      if (options && options.signal) {\n        options.signal.addEventListener('abort', () => {\n          this.removeListener(blockEvt, onBlock)\n          this.removeListener(unwantEvt, onUnwant)\n\n          reject(new Error(`Want for ${cid} aborted`))\n        })\n      }\n    })\n  }\n\n  /**\n   * Signal that the block is not wanted anymore.\n   *\n   * @param {CID} cid - the CID of the block that is not wanted anymore.\n   * @returns {void}\n   */\n  unwantBlock (cid) {\n    const event = unwantEvent(cid)\n    this._log(event)\n    this.emit(event)\n  }\n}\n\nmodule.exports = Notifications\n"},"lineCount":110}},"error":null,"hash":"38b212211f5a7b5371b820c683d806eb","cacheData":{"env":{}}}