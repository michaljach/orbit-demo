{"id":"../node_modules/datastore-pubsub/src/utils.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/datastore-pubsub/package.json","includedInParent":true,"mtime":1612441378455},{"name":"err-code","loc":{"line":3,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/datastore-pubsub/src/utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/err-code/index.js"},{"name":"uint8arrays/to-string","loc":{"line":4,"column":35},"parent":"/Users/michaljach/Sites/golf/node_modules/datastore-pubsub/src/utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/uint8arrays/to-string.js"},{"name":"uint8arrays/from-string","loc":{"line":5,"column":37},"parent":"/Users/michaljach/Sites/golf/node_modules/datastore-pubsub/src/utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/uint8arrays/from-string.js"}],"generated":{"js":"'use strict'\n\nconst errcode = require('err-code')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nconst namespace = '/record/'\n\nmodule.exports.encodeBase32 = (buf) => {\n  return uint8ArrayToString(buf, 'base32')\n}\n\n// converts a binary record key to a pubsub topic key.\nmodule.exports.keyToTopic = (key) => {\n  // Record-store keys are arbitrary binary. However, pubsub requires UTF-8 string topic IDs\n  // Encodes to \"/record/base64url(key)\"\n  if (typeof key === 'string' || key instanceof String) {\n    key = uint8ArrayFromString(key)\n  }\n\n  const b64url = uint8ArrayToString(key, 'base64url')\n\n  return `${namespace}${b64url}`\n}\n\n// converts a pubsub topic key to a binary record key.\nmodule.exports.topicToKey = (topic) => {\n  if (topic.substring(0, namespace.length) !== namespace) {\n    throw errcode(new Error('topic received is not from a record'), 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE')\n  }\n\n  const key = topic.substring(namespace.length)\n\n  return uint8ArrayFromString(key, 'base64url')\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/datastore-pubsub/src/utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"../node_modules/datastore-pubsub/src/utils.js":"'use strict'\n\nconst errcode = require('err-code')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nconst namespace = '/record/'\n\nmodule.exports.encodeBase32 = (buf) => {\n  return uint8ArrayToString(buf, 'base32')\n}\n\n// converts a binary record key to a pubsub topic key.\nmodule.exports.keyToTopic = (key) => {\n  // Record-store keys are arbitrary binary. However, pubsub requires UTF-8 string topic IDs\n  // Encodes to \"/record/base64url(key)\"\n  if (typeof key === 'string' || key instanceof String) {\n    key = uint8ArrayFromString(key)\n  }\n\n  const b64url = uint8ArrayToString(key, 'base64url')\n\n  return `${namespace}${b64url}`\n}\n\n// converts a pubsub topic key to a binary record key.\nmodule.exports.topicToKey = (topic) => {\n  if (topic.substring(0, namespace.length) !== namespace) {\n    throw errcode(new Error('topic received is not from a record'), 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE')\n  }\n\n  const key = topic.substring(namespace.length)\n\n  return uint8ArrayFromString(key, 'base64url')\n}\n"},"lineCount":36}},"error":null,"hash":"fc58deb8ee3aba8f500f2dc6e368917f","cacheData":{"env":{}}}