{"id":"../node_modules/ipfs-core/src/components/ls.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"ipfs-unixfs-exporter","loc":{"line":3,"column":25},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/ls.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-unixfs-exporter/src/index.js"},{"name":"err-code","loc":{"line":4,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/ls.js","resolved":"/Users/michaljach/Sites/golf/node_modules/err-code/index.js"},{"name":"../utils","loc":{"line":5,"column":46},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/ls.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/utils.js"},{"name":"ipfs-core-utils/src/with-timeout-option","loc":{"line":6,"column":34},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/ls.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core-utils/src/with-timeout-option.js"}],"generated":{"js":"'use strict'\n\nconst exporter = require('ipfs-unixfs-exporter')\nconst errCode = require('err-code')\nconst { normalizeCidPath, mapFile } = require('../utils')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @typedef {Object} Context\n * @property {import('.').IPLD} ipld\n * @property {import('.').Preload} preload\n *\n * @param {Context} context\n */\nmodule.exports = function ({ ipld, preload }) {\n  /**\n   * Lists a directory from IPFS that is addressed by a valid IPFS Path.\n   *\n   * @param {import('ipfs-core-types/src/root').IPFSPath} ipfsPath\n   * @param {import('ipfs-core-types/src/root').ListOptions} [options]\n   * @returns {AsyncIterable<import('ipfs-core-types/src/files').IPFSEntry>}\n   */\n  async function * ls (ipfsPath, options = {}) {\n    const path = normalizeCidPath(ipfsPath)\n    const recursive = options.recursive\n    const pathComponents = path.split('/')\n\n    if (options.preload !== false) {\n      preload(pathComponents[0])\n    }\n\n    const file = await exporter(ipfsPath, ipld, options)\n\n    if (!file.unixfs) {\n      throw errCode(new Error('dag node was not a UnixFS node'), 'ERR_NOT_UNIXFS')\n    }\n\n    if (file.unixfs.type === 'file') {\n      yield mapFile(file, options)\n      return\n    }\n\n    if (file.unixfs.type.includes('dir')) {\n      if (recursive) {\n        for await (const child of exporter.recursive(file.cid, ipld, options)) {\n          if (file.cid.toBaseEncodedString() === child.cid.toBaseEncodedString()) {\n            continue\n          }\n\n          yield mapFile(child, options)\n        }\n\n        return\n      }\n\n      for await (let child of file.content()) {\n        child = mapFile(child, options)\n        child.depth--\n\n        yield child\n      }\n\n      return\n    }\n\n    throw errCode(new Error(`Unknown UnixFS type ${file.unixfs.type}`), 'ERR_UNKNOWN_UNIXFS_TYPE')\n  }\n\n  return withTimeoutOption(ls)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ls.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/ls.js":"'use strict'\n\nconst exporter = require('ipfs-unixfs-exporter')\nconst errCode = require('err-code')\nconst { normalizeCidPath, mapFile } = require('../utils')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @typedef {Object} Context\n * @property {import('.').IPLD} ipld\n * @property {import('.').Preload} preload\n *\n * @param {Context} context\n */\nmodule.exports = function ({ ipld, preload }) {\n  /**\n   * Lists a directory from IPFS that is addressed by a valid IPFS Path.\n   *\n   * @param {import('ipfs-core-types/src/root').IPFSPath} ipfsPath\n   * @param {import('ipfs-core-types/src/root').ListOptions} [options]\n   * @returns {AsyncIterable<import('ipfs-core-types/src/files').IPFSEntry>}\n   */\n  async function * ls (ipfsPath, options = {}) {\n    const path = normalizeCidPath(ipfsPath)\n    const recursive = options.recursive\n    const pathComponents = path.split('/')\n\n    if (options.preload !== false) {\n      preload(pathComponents[0])\n    }\n\n    const file = await exporter(ipfsPath, ipld, options)\n\n    if (!file.unixfs) {\n      throw errCode(new Error('dag node was not a UnixFS node'), 'ERR_NOT_UNIXFS')\n    }\n\n    if (file.unixfs.type === 'file') {\n      yield mapFile(file, options)\n      return\n    }\n\n    if (file.unixfs.type.includes('dir')) {\n      if (recursive) {\n        for await (const child of exporter.recursive(file.cid, ipld, options)) {\n          if (file.cid.toBaseEncodedString() === child.cid.toBaseEncodedString()) {\n            continue\n          }\n\n          yield mapFile(child, options)\n        }\n\n        return\n      }\n\n      for await (let child of file.content()) {\n        child = mapFile(child, options)\n        child.depth--\n\n        yield child\n      }\n\n      return\n    }\n\n    throw errCode(new Error(`Unknown UnixFS type ${file.unixfs.type}`), 'ERR_UNKNOWN_UNIXFS_TYPE')\n  }\n\n  return withTimeoutOption(ls)\n}\n"},"lineCount":71}},"error":null,"hash":"d69cc543498fba36ab2a05e9e193d89a","cacheData":{"env":{}}}