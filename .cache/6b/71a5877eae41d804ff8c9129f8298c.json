{"id":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"../../runtime/config-nodejs.js","loc":{"line":3,"column":30},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/bootstrap/reset.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/runtime/config-browser.js"},{"name":"ipfs-core-utils/src/with-timeout-option","loc":{"line":4,"column":34},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/bootstrap/reset.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core-utils/src/with-timeout-option.js"},{"name":"multiaddr","loc":{"line":5,"column":26},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/bootstrap/reset.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multiaddr/src/index.js"}],"generated":{"js":"'use strict'\n\nconst defaultConfig = require('../../runtime/config-nodejs.js')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst Multiaddr = require('multiaddr')\n\n/**\n * @param {Object} config\n * @param {import('.').Repo} config.repo\n */\nmodule.exports = ({ repo }) => {\n  /**\n   * List all peer addresses in the bootstrap list\n   *\n   * @param {AbortOptions} options\n   * @returns {Promise<Peers>}\n   * @example\n   * ```js\n   * const res = await ipfs.bootstrap.list()\n   * console.log(res.Peers)\n   * // Logs:\n   * // [address1, address2, ...]\n   * ```\n   */\n  async function reset (options = {}) {\n    const config = await repo.config.getAll(options)\n    config.Bootstrap = defaultConfig().Bootstrap\n\n    await repo.config.replace(config)\n\n    return {\n      Peers: defaultConfig().Bootstrap.map(ma => new Multiaddr(ma))\n    }\n  }\n\n  return withTimeoutOption(reset)\n}\n\n/**\n * @typedef {import('.').AbortOptions} AbortOptions\n * @typedef {import('./utils').Peers} Peers\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bootstrap/reset.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/bootstrap/reset.js":"'use strict'\n\nconst defaultConfig = require('../../runtime/config-nodejs.js')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst Multiaddr = require('multiaddr')\n\n/**\n * @param {Object} config\n * @param {import('.').Repo} config.repo\n */\nmodule.exports = ({ repo }) => {\n  /**\n   * List all peer addresses in the bootstrap list\n   *\n   * @param {AbortOptions} options\n   * @returns {Promise<Peers>}\n   * @example\n   * ```js\n   * const res = await ipfs.bootstrap.list()\n   * console.log(res.Peers)\n   * // Logs:\n   * // [address1, address2, ...]\n   * ```\n   */\n  async function reset (options = {}) {\n    const config = await repo.config.getAll(options)\n    config.Bootstrap = defaultConfig().Bootstrap\n\n    await repo.config.replace(config)\n\n    return {\n      Peers: defaultConfig().Bootstrap.map(ma => new Multiaddr(ma))\n    }\n  }\n\n  return withTimeoutOption(reset)\n}\n\n/**\n * @typedef {import('.').AbortOptions} AbortOptions\n * @typedef {import('./utils').Peers} Peers\n */\n"},"lineCount":43}},"error":null,"hash":"77d1462304eb16e236f55f4db1d66ab9","cacheData":{"env":{}}}