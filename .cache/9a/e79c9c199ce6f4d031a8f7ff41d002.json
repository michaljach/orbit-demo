{"id":"../node_modules/libp2p-websockets/src/filters.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/libp2p-websockets/package.json","includedInParent":true,"mtime":1612441378363},{"name":"mafmt","loc":{"line":3,"column":22},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-websockets/src/filters.js","resolved":"/Users/michaljach/Sites/golf/node_modules/mafmt/src/index.js"},{"name":"./constants","loc":{"line":10,"column":12},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-websockets/src/filters.js","resolved":"/Users/michaljach/Sites/golf/node_modules/libp2p-websockets/src/constants.js"}],"generated":{"js":"'use strict'\n\nconst mafmt = require('mafmt')\nconst {\n  CODE_CIRCUIT,\n  CODE_P2P,\n  CODE_TCP,\n  CODE_WS,\n  CODE_WSS\n} = require('./constants')\n\nmodule.exports = {\n  all: (multiaddrs) => multiaddrs.filter((ma) => {\n    if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n      return false\n    }\n\n    const testMa = ma.decapsulateCode(CODE_P2P)\n\n    return mafmt.WebSockets.matches(testMa) ||\n      mafmt.WebSocketsSecure.matches(testMa)\n  }),\n  dnsWss: (multiaddrs) => multiaddrs.filter((ma) => {\n    if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n      return false\n    }\n\n    const testMa = ma.decapsulateCode(CODE_P2P)\n\n    return mafmt.WebSocketsSecure.matches(testMa) &&\n      mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WSS))\n  }),\n  dnsWsOrWss: (multiaddrs) => multiaddrs.filter((ma) => {\n    if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n      return false\n    }\n\n    const testMa = ma.decapsulateCode(CODE_P2P)\n\n    // WS\n    if (mafmt.WebSockets.matches(testMa)) {\n      return mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WS))\n    }\n\n    // WSS\n    return mafmt.WebSocketsSecure.matches(testMa) &&\n      mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WSS))\n  })\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/libp2p-websockets/src/filters.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}}],"sources":{"../node_modules/libp2p-websockets/src/filters.js":"'use strict'\n\nconst mafmt = require('mafmt')\nconst {\n  CODE_CIRCUIT,\n  CODE_P2P,\n  CODE_TCP,\n  CODE_WS,\n  CODE_WSS\n} = require('./constants')\n\nmodule.exports = {\n  all: (multiaddrs) => multiaddrs.filter((ma) => {\n    if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n      return false\n    }\n\n    const testMa = ma.decapsulateCode(CODE_P2P)\n\n    return mafmt.WebSockets.matches(testMa) ||\n      mafmt.WebSocketsSecure.matches(testMa)\n  }),\n  dnsWss: (multiaddrs) => multiaddrs.filter((ma) => {\n    if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n      return false\n    }\n\n    const testMa = ma.decapsulateCode(CODE_P2P)\n\n    return mafmt.WebSocketsSecure.matches(testMa) &&\n      mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WSS))\n  }),\n  dnsWsOrWss: (multiaddrs) => multiaddrs.filter((ma) => {\n    if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n      return false\n    }\n\n    const testMa = ma.decapsulateCode(CODE_P2P)\n\n    // WS\n    if (mafmt.WebSockets.matches(testMa)) {\n      return mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WS))\n    }\n\n    // WSS\n    return mafmt.WebSocketsSecure.matches(testMa) &&\n      mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WSS))\n  })\n}\n"},"lineCount":50}},"error":null,"hash":"418a96d02c4ca83a1268ee4811503077","cacheData":{"env":{}}}