{"id":"../node_modules/libp2p-interfaces/src/connection/connection.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/package.json","includedInParent":true,"mtime":1612441378234},{"name":"peer-id","loc":{"line":3,"column":23},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/connection/connection.js","resolved":"/Users/michaljach/Sites/golf/node_modules/peer-id/src/index.js"},{"name":"multiaddr","loc":{"line":4,"column":26},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/connection/connection.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multiaddr/src/index.js"},{"name":"err-code","loc":{"line":5,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/connection/connection.js","resolved":"/Users/michaljach/Sites/golf/node_modules/err-code/index.js"},{"name":"./status","loc":{"line":6,"column":42},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/connection/connection.js","resolved":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/connection/status.js"}],"generated":{"js":"'use strict'\n\nconst PeerId = require('peer-id')\nconst multiaddr = require('multiaddr')\nconst errCode = require('err-code')\nconst { OPEN, CLOSING, CLOSED } = require('./status')\n\nconst connectionSymbol = Symbol.for('@libp2p/interface-connection/connection')\n\n/**\n * @typedef {import('../stream-muxer/types').MuxedStream} MuxedStream\n * @typedef {import('./status').Status} Status\n */\n\n/**\n * @typedef {Object} Timeline\n * @property {number} open - connection opening timestamp.\n * @property {number} [upgraded] - connection upgraded timestamp.\n * @property {number} [close]\n *\n * @typedef {Object} ConectionStat\n * @property {string} direction - connection establishment direction (\"inbound\" or \"outbound\").\n * @property {Timeline} timeline - connection relevant events timestamp.\n * @property {string} [multiplexer] - connection multiplexing identifier.\n * @property {string} [encryption] - connection encryption method identifier.\n *\n * @typedef {Object} ConnectionOptions\n * @property {multiaddr} [localAddr] - local multiaddr of the connection if known.\n * @property {multiaddr} remoteAddr - remote multiaddr of the connection.\n * @property {PeerId} localPeer - local peer-id.\n * @property {PeerId} remotePeer - remote peer-id.\n * @property {(protocols: string|string[]) => Promise<{stream: MuxedStream, protocol: string}>} newStream - new stream muxer function.\n * @property {() => Promise<void>} close - close raw connection function.\n * @property {() => MuxedStream[]} getStreams - get streams from muxer function.\n * @property {ConectionStat} stat - metadata of the connection.\n *\n * @typedef {Object} StreamData\n * @property {string} protocol - the protocol used by the stream\n * @property {Object} [metadata] - metadata of the stream\n */\n\n/**\n * An implementation of the js-libp2p connection.\n * Any libp2p transport should use an upgrader to return this connection.\n */\nclass Connection {\n  /**\n   * An implementation of the js-libp2p connection.\n   * Any libp2p transport should use an upgrader to return this connection.\n   *\n   * @class\n   * @param {ConnectionOptions} options\n   */\n  constructor ({ localAddr, remoteAddr, localPeer, remotePeer, newStream, close, getStreams, stat }) {\n    validateArgs(localAddr, localPeer, remotePeer, newStream, close, getStreams, stat)\n\n    /**\n     * Connection identifier.\n     */\n    this.id = (parseInt(String(Math.random() * 1e9))).toString(36) + Date.now()\n\n    /**\n     * Observed multiaddr of the local peer\n     */\n    this.localAddr = localAddr\n\n    /**\n     * Observed multiaddr of the remote peer\n     */\n    this.remoteAddr = remoteAddr\n\n    /**\n     * Local peer id.\n     */\n    this.localPeer = localPeer\n\n    /**\n     * Remote peer id.\n     */\n    this.remotePeer = remotePeer\n\n    /**\n     * Connection metadata.\n     *\n     * @type {ConectionStat & {status: Status}}\n     */\n    this._stat = {\n      ...stat,\n      status: OPEN\n    }\n\n    /**\n     * Reference to the new stream function of the multiplexer\n     */\n    this._newStream = newStream\n\n    /**\n     * Reference to the close function of the raw connection\n     */\n    this._close = close\n\n    /**\n     * Reference to the getStreams function of the muxer\n     */\n    this._getStreams = getStreams\n\n    /**\n     * Connection streams registry\n     */\n    this.registry = new Map()\n\n    /**\n     * User provided tags\n     *\n     * @type {string[]}\n     */\n    this.tags = []\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Connection'\n  }\n\n  get [connectionSymbol] () {\n    return true\n  }\n\n  /**\n   * Checks if the given value is a `Connection` instance.\n   *\n   * @param {any} other\n   * @returns {other is Connection}\n   */\n  static isConnection (other) {\n    return Boolean(other && other[connectionSymbol])\n  }\n\n  /**\n   * Get connection metadata\n   *\n   * @this {Connection}\n   */\n  get stat () {\n    return this._stat\n  }\n\n  /**\n   * Get all the streams of the muxer.\n   *\n   * @this {Connection}\n   */\n  get streams () {\n    return this._getStreams()\n  }\n\n  /**\n   * Create a new stream from this connection\n   *\n   * @param {string|string[]} protocols - intended protocol for the stream\n   * @returns {Promise<{stream: MuxedStream, protocol: string}>} with muxed+multistream-selected stream and selected protocol\n   */\n  async newStream (protocols) {\n    if (this.stat.status === CLOSING) {\n      throw errCode(new Error('the connection is being closed'), 'ERR_CONNECTION_BEING_CLOSED')\n    }\n\n    if (this.stat.status === CLOSED) {\n      throw errCode(new Error('the connection is closed'), 'ERR_CONNECTION_CLOSED')\n    }\n\n    if (!Array.isArray(protocols)) protocols = [protocols]\n\n    const { stream, protocol } = await this._newStream(protocols)\n\n    this.addStream(stream, { protocol })\n\n    return {\n      stream,\n      protocol\n    }\n  }\n\n  /**\n   * Add a stream when it is opened to the registry.\n   *\n   * @param {MuxedStream} muxedStream - a muxed stream\n   * @param {StreamData} data - the stream data to be registered\n   * @returns {void}\n   */\n  addStream (muxedStream, { protocol, metadata = {} }) {\n    // Add metadata for the stream\n    this.registry.set(muxedStream.id, {\n      protocol,\n      ...metadata\n    })\n  }\n\n  /**\n   * Remove stream registry after it is closed.\n   *\n   * @param {string} id - identifier of the stream\n   */\n  removeStream (id) {\n    this.registry.delete(id)\n  }\n\n  /**\n   * Close the connection.\n   *\n   * @returns {Promise<void>}\n   */\n  async close () {\n    if (this.stat.status === CLOSED) {\n      return\n    }\n\n    if (this._closing) {\n      return this._closing\n    }\n\n    this.stat.status = CLOSING\n\n    // Close raw connection\n    this._closing = await this._close()\n\n    this._stat.timeline.close = Date.now()\n    this.stat.status = CLOSED\n  }\n}\n\nmodule.exports = Connection\n\nfunction validateArgs (localAddr, localPeer, remotePeer, newStream, close, getStreams, stat) {\n  if (localAddr && !multiaddr.isMultiaddr(localAddr)) {\n    throw errCode(new Error('localAddr must be an instance of multiaddr'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!PeerId.isPeerId(localPeer)) {\n    throw errCode(new Error('localPeer must be an instance of peer-id'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!PeerId.isPeerId(remotePeer)) {\n    throw errCode(new Error('remotePeer must be an instance of peer-id'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (typeof newStream !== 'function') {\n    throw errCode(new Error('new stream must be a function'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (typeof close !== 'function') {\n    throw errCode(new Error('close must be a function'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (typeof getStreams !== 'function') {\n    throw errCode(new Error('getStreams must be a function'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!stat) {\n    throw errCode(new Error('connection metadata object must be provided'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (stat.direction !== 'inbound' && stat.direction !== 'outbound') {\n    throw errCode(new Error('direction must be \"inbound\" or \"outbound\"'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!stat.timeline) {\n    throw errCode(new Error('connection timeline object must be provided in the stat object'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!stat.timeline.open) {\n    throw errCode(new Error('connection open timestamp must be provided'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!stat.timeline.upgraded) {\n    throw errCode(new Error('connection upgraded timestamp must be provided'), 'ERR_INVALID_PARAMETERS')\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/connection/connection.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}}],"sources":{"../node_modules/libp2p-interfaces/src/connection/connection.js":"'use strict'\n\nconst PeerId = require('peer-id')\nconst multiaddr = require('multiaddr')\nconst errCode = require('err-code')\nconst { OPEN, CLOSING, CLOSED } = require('./status')\n\nconst connectionSymbol = Symbol.for('@libp2p/interface-connection/connection')\n\n/**\n * @typedef {import('../stream-muxer/types').MuxedStream} MuxedStream\n * @typedef {import('./status').Status} Status\n */\n\n/**\n * @typedef {Object} Timeline\n * @property {number} open - connection opening timestamp.\n * @property {number} [upgraded] - connection upgraded timestamp.\n * @property {number} [close]\n *\n * @typedef {Object} ConectionStat\n * @property {string} direction - connection establishment direction (\"inbound\" or \"outbound\").\n * @property {Timeline} timeline - connection relevant events timestamp.\n * @property {string} [multiplexer] - connection multiplexing identifier.\n * @property {string} [encryption] - connection encryption method identifier.\n *\n * @typedef {Object} ConnectionOptions\n * @property {multiaddr} [localAddr] - local multiaddr of the connection if known.\n * @property {multiaddr} remoteAddr - remote multiaddr of the connection.\n * @property {PeerId} localPeer - local peer-id.\n * @property {PeerId} remotePeer - remote peer-id.\n * @property {(protocols: string|string[]) => Promise<{stream: MuxedStream, protocol: string}>} newStream - new stream muxer function.\n * @property {() => Promise<void>} close - close raw connection function.\n * @property {() => MuxedStream[]} getStreams - get streams from muxer function.\n * @property {ConectionStat} stat - metadata of the connection.\n *\n * @typedef {Object} StreamData\n * @property {string} protocol - the protocol used by the stream\n * @property {Object} [metadata] - metadata of the stream\n */\n\n/**\n * An implementation of the js-libp2p connection.\n * Any libp2p transport should use an upgrader to return this connection.\n */\nclass Connection {\n  /**\n   * An implementation of the js-libp2p connection.\n   * Any libp2p transport should use an upgrader to return this connection.\n   *\n   * @class\n   * @param {ConnectionOptions} options\n   */\n  constructor ({ localAddr, remoteAddr, localPeer, remotePeer, newStream, close, getStreams, stat }) {\n    validateArgs(localAddr, localPeer, remotePeer, newStream, close, getStreams, stat)\n\n    /**\n     * Connection identifier.\n     */\n    this.id = (parseInt(String(Math.random() * 1e9))).toString(36) + Date.now()\n\n    /**\n     * Observed multiaddr of the local peer\n     */\n    this.localAddr = localAddr\n\n    /**\n     * Observed multiaddr of the remote peer\n     */\n    this.remoteAddr = remoteAddr\n\n    /**\n     * Local peer id.\n     */\n    this.localPeer = localPeer\n\n    /**\n     * Remote peer id.\n     */\n    this.remotePeer = remotePeer\n\n    /**\n     * Connection metadata.\n     *\n     * @type {ConectionStat & {status: Status}}\n     */\n    this._stat = {\n      ...stat,\n      status: OPEN\n    }\n\n    /**\n     * Reference to the new stream function of the multiplexer\n     */\n    this._newStream = newStream\n\n    /**\n     * Reference to the close function of the raw connection\n     */\n    this._close = close\n\n    /**\n     * Reference to the getStreams function of the muxer\n     */\n    this._getStreams = getStreams\n\n    /**\n     * Connection streams registry\n     */\n    this.registry = new Map()\n\n    /**\n     * User provided tags\n     *\n     * @type {string[]}\n     */\n    this.tags = []\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Connection'\n  }\n\n  get [connectionSymbol] () {\n    return true\n  }\n\n  /**\n   * Checks if the given value is a `Connection` instance.\n   *\n   * @param {any} other\n   * @returns {other is Connection}\n   */\n  static isConnection (other) {\n    return Boolean(other && other[connectionSymbol])\n  }\n\n  /**\n   * Get connection metadata\n   *\n   * @this {Connection}\n   */\n  get stat () {\n    return this._stat\n  }\n\n  /**\n   * Get all the streams of the muxer.\n   *\n   * @this {Connection}\n   */\n  get streams () {\n    return this._getStreams()\n  }\n\n  /**\n   * Create a new stream from this connection\n   *\n   * @param {string|string[]} protocols - intended protocol for the stream\n   * @returns {Promise<{stream: MuxedStream, protocol: string}>} with muxed+multistream-selected stream and selected protocol\n   */\n  async newStream (protocols) {\n    if (this.stat.status === CLOSING) {\n      throw errCode(new Error('the connection is being closed'), 'ERR_CONNECTION_BEING_CLOSED')\n    }\n\n    if (this.stat.status === CLOSED) {\n      throw errCode(new Error('the connection is closed'), 'ERR_CONNECTION_CLOSED')\n    }\n\n    if (!Array.isArray(protocols)) protocols = [protocols]\n\n    const { stream, protocol } = await this._newStream(protocols)\n\n    this.addStream(stream, { protocol })\n\n    return {\n      stream,\n      protocol\n    }\n  }\n\n  /**\n   * Add a stream when it is opened to the registry.\n   *\n   * @param {MuxedStream} muxedStream - a muxed stream\n   * @param {StreamData} data - the stream data to be registered\n   * @returns {void}\n   */\n  addStream (muxedStream, { protocol, metadata = {} }) {\n    // Add metadata for the stream\n    this.registry.set(muxedStream.id, {\n      protocol,\n      ...metadata\n    })\n  }\n\n  /**\n   * Remove stream registry after it is closed.\n   *\n   * @param {string} id - identifier of the stream\n   */\n  removeStream (id) {\n    this.registry.delete(id)\n  }\n\n  /**\n   * Close the connection.\n   *\n   * @returns {Promise<void>}\n   */\n  async close () {\n    if (this.stat.status === CLOSED) {\n      return\n    }\n\n    if (this._closing) {\n      return this._closing\n    }\n\n    this.stat.status = CLOSING\n\n    // Close raw connection\n    this._closing = await this._close()\n\n    this._stat.timeline.close = Date.now()\n    this.stat.status = CLOSED\n  }\n}\n\nmodule.exports = Connection\n\nfunction validateArgs (localAddr, localPeer, remotePeer, newStream, close, getStreams, stat) {\n  if (localAddr && !multiaddr.isMultiaddr(localAddr)) {\n    throw errCode(new Error('localAddr must be an instance of multiaddr'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!PeerId.isPeerId(localPeer)) {\n    throw errCode(new Error('localPeer must be an instance of peer-id'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!PeerId.isPeerId(remotePeer)) {\n    throw errCode(new Error('remotePeer must be an instance of peer-id'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (typeof newStream !== 'function') {\n    throw errCode(new Error('new stream must be a function'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (typeof close !== 'function') {\n    throw errCode(new Error('close must be a function'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (typeof getStreams !== 'function') {\n    throw errCode(new Error('getStreams must be a function'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!stat) {\n    throw errCode(new Error('connection metadata object must be provided'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (stat.direction !== 'inbound' && stat.direction !== 'outbound') {\n    throw errCode(new Error('direction must be \"inbound\" or \"outbound\"'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!stat.timeline) {\n    throw errCode(new Error('connection timeline object must be provided in the stat object'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!stat.timeline.open) {\n    throw errCode(new Error('connection open timestamp must be provided'), 'ERR_INVALID_PARAMETERS')\n  }\n\n  if (!stat.timeline.upgraded) {\n    throw errCode(new Error('connection upgraded timestamp must be provided'), 'ERR_INVALID_PARAMETERS')\n  }\n}\n"},"lineCount":278}},"error":null,"hash":"56b1cb9bf0573f56524d866a646f7d17","cacheData":{"env":{}}}