{"id":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/libp2p-kad-dht/package.json","includedInParent":true,"mtime":1612441378233}],"generated":{"js":"'use strict';\n\nmodule.exports = `// can't use, because protocol-buffers doesn't support imports\n// so we have to duplicate for now :(\n// import \"record.proto\";\n\nmessage Record {\n  // adjusted for javascript\n  optional bytes key = 1;\n  optional bytes value = 2;\n  optional bytes author = 3;\n  optional bytes signature = 4;\n  optional string timeReceived = 5;\n}\n\nmessage Message {\n  enum MessageType {\n    PUT_VALUE = 0;\n    GET_VALUE = 1;\n    ADD_PROVIDER = 2;\n    GET_PROVIDERS = 3;\n    FIND_NODE = 4;\n    PING = 5;\n  }\n\n  enum ConnectionType {\n    // sender does not have a connection to peer, and no extra information (default)\n    NOT_CONNECTED = 0;\n\n    // sender has a live connection to peer\n    CONNECTED = 1;\n\n    // sender recently connected to peer\n    CAN_CONNECT = 2;\n\n    // sender recently tried to connect to peer repeatedly but failed to connect\n    // (\"try\" here is loose, but this should signal \"made strong effort, failed\")\n    CANNOT_CONNECT = 3;\n  }\n\n  message Peer {\n    // ID of a given peer.\n    optional bytes id = 1;\n\n    // multiaddrs for a given peer\n    repeated bytes addrs = 2;\n\n    // used to signal the sender's connection capabilities to the peer\n    optional ConnectionType connection = 3;\n  }\n\n  // defines what type of message it is.\n  optional MessageType type = 1;\n\n  // defines what coral cluster level this query/response belongs to.\n  // in case we want to implement coral's cluster rings in the future.\n  optional int32 clusterLevelRaw = 10;\n\n  // Used to specify the key associated with this message.\n  // PUT_VALUE, GET_VALUE, ADD_PROVIDER, GET_PROVIDERS\n  // adjusted for javascript\n  optional bytes key = 2;\n\n  // Used to return a value\n  // PUT_VALUE, GET_VALUE\n  // adjusted Record to bytes for js\n  optional bytes record = 3;\n\n  // Used to return peers closer to a key in a query\n  // GET_VALUE, GET_PROVIDERS, FIND_NODE\n  repeated Peer closerPeers = 8;\n\n  // Used to return Providers\n  // GET_VALUE, ADD_PROVIDER, GET_PROVIDERS\n  repeated Peer providerPeers = 9;\n}`;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":1,"column":0}},{"name":"module","generated":{"line":3,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":6},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":3,"column":6}},{"name":"exports","generated":{"line":3,"column":7},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":3,"column":7}},{"generated":{"line":3,"column":14},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":17},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":3,"column":18}},{"generated":{"line":4,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":12,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":13,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":14,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":15,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":16,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":17,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":18,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":19,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":20,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":21,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":22,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":23,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":24,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":25,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":26,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":27,"column":0}},{"generated":{"line":28,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":28,"column":0}},{"generated":{"line":29,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":29,"column":0}},{"generated":{"line":30,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":30,"column":0}},{"generated":{"line":31,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":31,"column":0}},{"generated":{"line":32,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":32,"column":0}},{"generated":{"line":33,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":33,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":34,"column":0}},{"generated":{"line":35,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":35,"column":0}},{"generated":{"line":36,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":36,"column":0}},{"generated":{"line":37,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":37,"column":0}},{"generated":{"line":38,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":38,"column":0}},{"generated":{"line":39,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":39,"column":0}},{"generated":{"line":40,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":40,"column":0}},{"generated":{"line":41,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":41,"column":0}},{"generated":{"line":42,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":42,"column":0}},{"generated":{"line":43,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":43,"column":0}},{"generated":{"line":44,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":44,"column":0}},{"generated":{"line":45,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":45,"column":0}},{"generated":{"line":46,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":46,"column":0}},{"generated":{"line":47,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":47,"column":0}},{"generated":{"line":48,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":48,"column":0}},{"generated":{"line":49,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":49,"column":0}},{"generated":{"line":50,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":50,"column":0}},{"generated":{"line":51,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":51,"column":0}},{"generated":{"line":52,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":52,"column":0}},{"generated":{"line":53,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":53,"column":0}},{"generated":{"line":54,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":54,"column":0}},{"generated":{"line":55,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":55,"column":0}},{"generated":{"line":56,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":56,"column":0}},{"generated":{"line":57,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":57,"column":0}},{"generated":{"line":58,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":58,"column":0}},{"generated":{"line":59,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":59,"column":0}},{"generated":{"line":60,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":60,"column":0}},{"generated":{"line":61,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":61,"column":0}},{"generated":{"line":62,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":62,"column":0}},{"generated":{"line":63,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":63,"column":0}},{"generated":{"line":64,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":64,"column":0}},{"generated":{"line":65,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":65,"column":0}},{"generated":{"line":66,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":66,"column":0}},{"generated":{"line":67,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":67,"column":0}},{"generated":{"line":68,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":68,"column":0}},{"generated":{"line":69,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":69,"column":0}},{"generated":{"line":70,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":70,"column":0}},{"generated":{"line":71,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":71,"column":0}},{"generated":{"line":72,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":72,"column":0}},{"generated":{"line":73,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":73,"column":0}},{"generated":{"line":74,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":74,"column":0}},{"generated":{"line":75,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":75,"column":0}},{"generated":{"line":76,"column":0},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":76,"column":0}},{"generated":{"line":76,"column":2},"source":"../node_modules/libp2p-kad-dht/src/message/dht.proto.js","original":{"line":3,"column":0}}],"sources":{"../node_modules/libp2p-kad-dht/src/message/dht.proto.js":"'use strict'\n\nmodule.exports = `// can't use, because protocol-buffers doesn't support imports\n// so we have to duplicate for now :(\n// import \"record.proto\";\n\nmessage Record {\n  // adjusted for javascript\n  optional bytes key = 1;\n  optional bytes value = 2;\n  optional bytes author = 3;\n  optional bytes signature = 4;\n  optional string timeReceived = 5;\n}\n\nmessage Message {\n  enum MessageType {\n    PUT_VALUE = 0;\n    GET_VALUE = 1;\n    ADD_PROVIDER = 2;\n    GET_PROVIDERS = 3;\n    FIND_NODE = 4;\n    PING = 5;\n  }\n\n  enum ConnectionType {\n    // sender does not have a connection to peer, and no extra information (default)\n    NOT_CONNECTED = 0;\n\n    // sender has a live connection to peer\n    CONNECTED = 1;\n\n    // sender recently connected to peer\n    CAN_CONNECT = 2;\n\n    // sender recently tried to connect to peer repeatedly but failed to connect\n    // (\"try\" here is loose, but this should signal \"made strong effort, failed\")\n    CANNOT_CONNECT = 3;\n  }\n\n  message Peer {\n    // ID of a given peer.\n    optional bytes id = 1;\n\n    // multiaddrs for a given peer\n    repeated bytes addrs = 2;\n\n    // used to signal the sender's connection capabilities to the peer\n    optional ConnectionType connection = 3;\n  }\n\n  // defines what type of message it is.\n  optional MessageType type = 1;\n\n  // defines what coral cluster level this query/response belongs to.\n  // in case we want to implement coral's cluster rings in the future.\n  optional int32 clusterLevelRaw = 10;\n\n  // Used to specify the key associated with this message.\n  // PUT_VALUE, GET_VALUE, ADD_PROVIDER, GET_PROVIDERS\n  // adjusted for javascript\n  optional bytes key = 2;\n\n  // Used to return a value\n  // PUT_VALUE, GET_VALUE\n  // adjusted Record to bytes for js\n  optional bytes record = 3;\n\n  // Used to return peers closer to a key in a query\n  // GET_VALUE, GET_PROVIDERS, FIND_NODE\n  repeated Peer closerPeers = 8;\n\n  // Used to return Providers\n  // GET_VALUE, ADD_PROVIDER, GET_PROVIDERS\n  repeated Peer providerPeers = 9;\n}`\n"},"lineCount":null}},"error":null,"hash":"79255b77dd6b0ed6fb95c5942de382cd","cacheData":{"env":{}}}