{"id":"../node_modules/ipfs-bitswap/src/stats/stat.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/package.json","includedInParent":true,"mtime":1612441378236},{"name":"events","loc":{"line":3,"column":29},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/src/stats/stat.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/events/events.js"},{"name":"bignumber.js","loc":{"line":4,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/src/stats/stat.js","resolved":"/Users/michaljach/Sites/golf/node_modules/bignumber.js/bignumber.js"},{"name":"moving-average","loc":{"line":5,"column":30},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/src/stats/stat.js","resolved":"/Users/michaljach/Sites/golf/node_modules/moving-average/index.js"}],"generated":{"js":"'use strict'\n\nconst EventEmitter = require('events')\nconst Big = require('bignumber.js')\nconst MovingAverage = require('moving-average')\n\nclass Stats extends EventEmitter {\n  constructor (initialCounters, options) {\n    super()\n\n    this._options = options\n    this._queue = []\n    this._stats = {}\n\n    this._frequencyLastTime = Date.now()\n    this._frequencyAccumulators = {}\n    this._movingAverages = {}\n\n    this._update = this._update.bind(this)\n\n    initialCounters.forEach((key) => {\n      this._stats[key] = Big(0)\n      this._movingAverages[key] = {}\n      this._options.movingAverageIntervals.forEach((interval) => {\n        const ma = this._movingAverages[key][interval] = MovingAverage(interval)\n        ma.push(this._frequencyLastTime, 0)\n      })\n    })\n\n    this._enabled = this._options.enabled\n  }\n\n  enable () {\n    this._enabled = true\n  }\n\n  disable () {\n    this._disabled = true\n  }\n\n  stop () {\n    if (this._timeout) {\n      clearTimeout(this._timeout)\n    }\n  }\n\n  get snapshot () {\n    return Object.assign({}, this._stats)\n  }\n\n  get movingAverages () {\n    return Object.assign({}, this._movingAverages)\n  }\n\n  push (counter, inc) {\n    if (this._enabled) {\n      this._queue.push([counter, inc, Date.now()])\n      this._resetComputeTimeout()\n    }\n  }\n\n  _resetComputeTimeout () {\n    if (this._timeout) {\n      clearTimeout(this._timeout)\n    }\n    this._timeout = setTimeout(this._update, this._nextTimeout())\n  }\n\n  _nextTimeout () {\n    // calculate the need for an update, depending on the queue length\n    const urgency = this._queue.length / this._options.computeThrottleMaxQueueSize\n    return Math.max(this._options.computeThrottleTimeout * (1 - urgency), 0)\n  }\n\n  _update () {\n    this._timeout = null\n\n    if (this._queue.length) {\n      let last\n      while (this._queue.length) {\n        const op = last = this._queue.shift()\n        this._applyOp(op)\n      }\n\n      this._updateFrequency(last[2]) // contains timestamp of last op\n\n      this.emit('update', this._stats)\n    }\n  }\n\n  _updateFrequency (latestTime) {\n    const timeDiff = latestTime - this._frequencyLastTime\n\n    if (timeDiff) {\n      Object.keys(this._stats).forEach((key) => {\n        this._updateFrequencyFor(key, timeDiff, latestTime)\n      })\n    }\n\n    this._frequencyLastTime = latestTime\n  }\n\n  _updateFrequencyFor (key, timeDiffMS, latestTime) {\n    const count = this._frequencyAccumulators[key] || 0\n    this._frequencyAccumulators[key] = 0\n    const hz = (count / timeDiffMS) * 1000\n\n    let movingAverages = this._movingAverages[key]\n    if (!movingAverages) {\n      movingAverages = this._movingAverages[key] = {}\n    }\n    this._options.movingAverageIntervals.forEach((movingAverageInterval) => {\n      let movingAverage = movingAverages[movingAverageInterval]\n      if (!movingAverage) {\n        movingAverage = movingAverages[movingAverageInterval] = MovingAverage(movingAverageInterval)\n      }\n      movingAverage.push(latestTime, hz)\n    })\n  }\n\n  _applyOp (op) {\n    const key = op[0]\n    const inc = op[1]\n\n    if (typeof inc !== 'number') {\n      throw new Error('invalid increment number:', inc)\n    }\n\n    let n\n\n    if (!Object.prototype.hasOwnProperty.call(this._stats, key)) {\n      n = this._stats[key] = Big(0)\n    } else {\n      n = this._stats[key]\n    }\n    this._stats[key] = n.plus(inc)\n\n    if (!this._frequencyAccumulators[key]) {\n      this._frequencyAccumulators[key] = 0\n    }\n    this._frequencyAccumulators[key] += inc\n  }\n}\n\nmodule.exports = Stats\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/stats/stat.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}}],"sources":{"../node_modules/ipfs-bitswap/src/stats/stat.js":"'use strict'\n\nconst EventEmitter = require('events')\nconst Big = require('bignumber.js')\nconst MovingAverage = require('moving-average')\n\nclass Stats extends EventEmitter {\n  constructor (initialCounters, options) {\n    super()\n\n    this._options = options\n    this._queue = []\n    this._stats = {}\n\n    this._frequencyLastTime = Date.now()\n    this._frequencyAccumulators = {}\n    this._movingAverages = {}\n\n    this._update = this._update.bind(this)\n\n    initialCounters.forEach((key) => {\n      this._stats[key] = Big(0)\n      this._movingAverages[key] = {}\n      this._options.movingAverageIntervals.forEach((interval) => {\n        const ma = this._movingAverages[key][interval] = MovingAverage(interval)\n        ma.push(this._frequencyLastTime, 0)\n      })\n    })\n\n    this._enabled = this._options.enabled\n  }\n\n  enable () {\n    this._enabled = true\n  }\n\n  disable () {\n    this._disabled = true\n  }\n\n  stop () {\n    if (this._timeout) {\n      clearTimeout(this._timeout)\n    }\n  }\n\n  get snapshot () {\n    return Object.assign({}, this._stats)\n  }\n\n  get movingAverages () {\n    return Object.assign({}, this._movingAverages)\n  }\n\n  push (counter, inc) {\n    if (this._enabled) {\n      this._queue.push([counter, inc, Date.now()])\n      this._resetComputeTimeout()\n    }\n  }\n\n  _resetComputeTimeout () {\n    if (this._timeout) {\n      clearTimeout(this._timeout)\n    }\n    this._timeout = setTimeout(this._update, this._nextTimeout())\n  }\n\n  _nextTimeout () {\n    // calculate the need for an update, depending on the queue length\n    const urgency = this._queue.length / this._options.computeThrottleMaxQueueSize\n    return Math.max(this._options.computeThrottleTimeout * (1 - urgency), 0)\n  }\n\n  _update () {\n    this._timeout = null\n\n    if (this._queue.length) {\n      let last\n      while (this._queue.length) {\n        const op = last = this._queue.shift()\n        this._applyOp(op)\n      }\n\n      this._updateFrequency(last[2]) // contains timestamp of last op\n\n      this.emit('update', this._stats)\n    }\n  }\n\n  _updateFrequency (latestTime) {\n    const timeDiff = latestTime - this._frequencyLastTime\n\n    if (timeDiff) {\n      Object.keys(this._stats).forEach((key) => {\n        this._updateFrequencyFor(key, timeDiff, latestTime)\n      })\n    }\n\n    this._frequencyLastTime = latestTime\n  }\n\n  _updateFrequencyFor (key, timeDiffMS, latestTime) {\n    const count = this._frequencyAccumulators[key] || 0\n    this._frequencyAccumulators[key] = 0\n    const hz = (count / timeDiffMS) * 1000\n\n    let movingAverages = this._movingAverages[key]\n    if (!movingAverages) {\n      movingAverages = this._movingAverages[key] = {}\n    }\n    this._options.movingAverageIntervals.forEach((movingAverageInterval) => {\n      let movingAverage = movingAverages[movingAverageInterval]\n      if (!movingAverage) {\n        movingAverage = movingAverages[movingAverageInterval] = MovingAverage(movingAverageInterval)\n      }\n      movingAverage.push(latestTime, hz)\n    })\n  }\n\n  _applyOp (op) {\n    const key = op[0]\n    const inc = op[1]\n\n    if (typeof inc !== 'number') {\n      throw new Error('invalid increment number:', inc)\n    }\n\n    let n\n\n    if (!Object.prototype.hasOwnProperty.call(this._stats, key)) {\n      n = this._stats[key] = Big(0)\n    } else {\n      n = this._stats[key]\n    }\n    this._stats[key] = n.plus(inc)\n\n    if (!this._frequencyAccumulators[key]) {\n      this._frequencyAccumulators[key] = 0\n    }\n    this._frequencyAccumulators[key] += inc\n  }\n}\n\nmodule.exports = Stats\n"},"lineCount":146}},"error":null,"hash":"4da141bb2d83fa8b97d6752c66f809ad","cacheData":{"env":{}}}