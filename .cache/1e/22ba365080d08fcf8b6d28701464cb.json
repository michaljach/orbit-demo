{"id":"../node_modules/ipfs-core/src/components/ipld.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"../runtime/ipld","loc":{"line":3,"column":38},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/ipld.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/runtime/ipld.js"},{"name":"ipld","loc":{"line":4,"column":21},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/ipld.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipld/src/index.js"}],"generated":{"js":"'use strict'\n\nconst getDefaultIpldOptions = require('../runtime/ipld')\nconst Ipld = require('ipld')\n\n/**\n * @param {Object} config\n * @param {BlockService} config.blockService\n * @param {Print} config.print\n * @param {Options} [config.options]\n * @returns {IPLD}\n */\nconst createIPLD = ({ blockService, print, options }) =>\n  new Ipld(getDefaultIpldOptions(blockService, options, print))\nmodule.exports = createIPLD\n\n/**\n * @typedef {import('ipfs-core-types/src/ipld').IPLD} IPLD\n * @typedef {import('ipfs-core-types/src/ipld').Options} Options\n * @typedef {import('ipfs-core-types/src/block-service').BlockService} BlockService\n * @typedef {import('ipfs-core-types/src/block-service').Block} Block\n * @typedef {import('.').Print} Print\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/ipld.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/ipld.js":"'use strict'\n\nconst getDefaultIpldOptions = require('../runtime/ipld')\nconst Ipld = require('ipld')\n\n/**\n * @param {Object} config\n * @param {BlockService} config.blockService\n * @param {Print} config.print\n * @param {Options} [config.options]\n * @returns {IPLD}\n */\nconst createIPLD = ({ blockService, print, options }) =>\n  new Ipld(getDefaultIpldOptions(blockService, options, print))\nmodule.exports = createIPLD\n\n/**\n * @typedef {import('ipfs-core-types/src/ipld').IPLD} IPLD\n * @typedef {import('ipfs-core-types/src/ipld').Options} Options\n * @typedef {import('ipfs-core-types/src/block-service').BlockService} BlockService\n * @typedef {import('ipfs-core-types/src/block-service').Block} Block\n * @typedef {import('.').Print} Print\n */\n"},"lineCount":24}},"error":null,"hash":"083d20caa67e83c6772f301df4cba7ad","cacheData":{"env":{}}}