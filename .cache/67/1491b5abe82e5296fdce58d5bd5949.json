{"id":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/package.json","includedInParent":true,"mtime":1612441378234}],"generated":{"js":"'use strict'\nmodule.exports = `\n// topicCID = cid(merkledag_protobuf(topicDescriptor)); (not the topic.name)\nmessage TopicDescriptor {\n  optional string name = 1;\n  optional AuthOpts auth = 2;\n  optional EncOpts enc = 2;\n\n  message AuthOpts {\n    optional AuthMode mode = 1;\n    repeated bytes keys = 2; // root keys to trust\n\n    enum AuthMode {\n      NONE = 0; // no authentication, anyone can publish\n      KEY = 1; // only messages signed by keys in the topic descriptor are accepted\n      WOT = 2; // web of trust, certificates can allow publisher set to grow\n    }\n  }\n\n  message EncOpts {\n    optional EncMode mode = 1;\n    repeated bytes keyHashes = 2; // the hashes of the shared keys used (salted)\n\n    enum EncMode {\n      NONE = 0; // no encryption, anyone can read\n      SHAREDKEY = 1; // messages are encrypted with shared key\n      WOT = 2; // web of trust, certificates can allow publisher set to grow\n    }\n  }\n}`\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}}],"sources":{"../node_modules/libp2p-interfaces/src/pubsub/message/topic-descriptor.proto.js":"'use strict'\nmodule.exports = `\n// topicCID = cid(merkledag_protobuf(topicDescriptor)); (not the topic.name)\nmessage TopicDescriptor {\n  optional string name = 1;\n  optional AuthOpts auth = 2;\n  optional EncOpts enc = 2;\n\n  message AuthOpts {\n    optional AuthMode mode = 1;\n    repeated bytes keys = 2; // root keys to trust\n\n    enum AuthMode {\n      NONE = 0; // no authentication, anyone can publish\n      KEY = 1; // only messages signed by keys in the topic descriptor are accepted\n      WOT = 2; // web of trust, certificates can allow publisher set to grow\n    }\n  }\n\n  message EncOpts {\n    optional EncMode mode = 1;\n    repeated bytes keyHashes = 2; // the hashes of the shared keys used (salted)\n\n    enum EncMode {\n      NONE = 0; // no encryption, anyone can read\n      SHAREDKEY = 1; // messages are encrypted with shared key\n      WOT = 2; // web of trust, certificates can allow publisher set to grow\n    }\n  }\n}`\n"},"lineCount":31}},"error":null,"hash":"6eebab6964905c21ead8a10c3ed1dffa","cacheData":{"env":{}}}