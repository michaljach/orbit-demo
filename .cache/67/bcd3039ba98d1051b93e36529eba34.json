{"id":"../node_modules/ipfs-core/src/components/object/put.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"ipld-dag-pb","loc":{"line":3,"column":22},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/put.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipld-dag-pb/src/index.js"},{"name":"multihashing-async","loc":{"line":6,"column":19},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/put.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multihashing-async/src/index.js"},{"name":"multicodec","loc":{"line":7,"column":27},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/put.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multicodec/src/index.js"},{"name":"ipfs-core-utils/src/with-timeout-option","loc":{"line":8,"column":34},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/put.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core-utils/src/with-timeout-option.js"},{"name":"uint8arrays/to-string","loc":{"line":9,"column":35},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/put.js","resolved":"/Users/michaljach/Sites/golf/node_modules/uint8arrays/to-string.js"},{"name":"uint8arrays/from-string","loc":{"line":10,"column":37},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/put.js","resolved":"/Users/michaljach/Sites/golf/node_modules/uint8arrays/from-string.js"}],"generated":{"js":"'use strict'\n\nconst dagPB = require('ipld-dag-pb')\nconst DAGNode = dagPB.DAGNode\nconst DAGLink = dagPB.DAGLink\nconst mh = require('multihashing-async').multihash\nconst multicodec = require('multicodec')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nfunction parseBuffer (buf, encoding) {\n  switch (encoding) {\n    case 'json':\n      return parseJSONBuffer(buf)\n    case 'protobuf':\n      return parseProtoBuffer(buf)\n    default:\n      throw new Error(`unkown encoding: ${encoding}`)\n  }\n}\n\nfunction parseJSONBuffer (buf) {\n  let data\n  let links\n\n  try {\n    const parsed = JSON.parse(uint8ArrayToString(buf))\n\n    links = (parsed.Links || []).map((link) => {\n      return new DAGLink(\n        link.Name || link.name,\n        link.Size || link.size,\n        mh.fromB58String(link.Hash || link.hash || link.multihash)\n      )\n    })\n    data = uint8ArrayFromString(parsed.Data)\n  } catch (err) {\n    throw new Error('failed to parse JSON: ' + err)\n  }\n\n  return new DAGNode(data, links)\n}\n\nfunction parseProtoBuffer (buf) {\n  return dagPB.util.deserialize(buf)\n}\n\n/**\n * @param {Object} config\n * @param {import('.').IPLD} config.ipld\n * @param {import('.').Preload} config.preload\n * @param {import('.').GCLock} config.gcLock\n */\nmodule.exports = ({ ipld, gcLock, preload }) => {\n  /**\n   *\n   * @param {Uint8Array|DAGNode|{ Data: any, links: DAGLink[]}} obj\n   * @param {PutOptions & AbortOptions} options\n   * @returns {Promise<CID>}\n   */\n  async function put (obj, options = {}) {\n    const encoding = options.enc\n    let node\n\n    if (obj instanceof Uint8Array) {\n      if (encoding) {\n        node = await parseBuffer(obj, encoding)\n      } else {\n        node = new DAGNode(obj)\n      }\n    } else if (DAGNode.isDAGNode(obj)) {\n      // already a dag node\n      node = obj\n    } else if (typeof obj === 'object') {\n      node = new DAGNode(obj.Data, obj.Links)\n    } else {\n      throw new Error('obj not recognized')\n    }\n\n    const release = await gcLock.readLock()\n\n    try {\n      const cid = await ipld.put(node, multicodec.DAG_PB, {\n        cidVersion: 0,\n        hashAlg: multicodec.SHA2_256\n      })\n\n      if (options.preload !== false) {\n        preload(cid)\n      }\n\n      return cid\n    } finally {\n      release()\n    }\n  }\n\n  return withTimeoutOption(put)\n}\n\n/**\n * @typedef {Object} PutOptions\n * @property {boolean} [preload]\n * @property {string} [enc]\n *\n * @typedef {import('.').CID} CID\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/put.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/object/put.js":"'use strict'\n\nconst dagPB = require('ipld-dag-pb')\nconst DAGNode = dagPB.DAGNode\nconst DAGLink = dagPB.DAGLink\nconst mh = require('multihashing-async').multihash\nconst multicodec = require('multicodec')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nfunction parseBuffer (buf, encoding) {\n  switch (encoding) {\n    case 'json':\n      return parseJSONBuffer(buf)\n    case 'protobuf':\n      return parseProtoBuffer(buf)\n    default:\n      throw new Error(`unkown encoding: ${encoding}`)\n  }\n}\n\nfunction parseJSONBuffer (buf) {\n  let data\n  let links\n\n  try {\n    const parsed = JSON.parse(uint8ArrayToString(buf))\n\n    links = (parsed.Links || []).map((link) => {\n      return new DAGLink(\n        link.Name || link.name,\n        link.Size || link.size,\n        mh.fromB58String(link.Hash || link.hash || link.multihash)\n      )\n    })\n    data = uint8ArrayFromString(parsed.Data)\n  } catch (err) {\n    throw new Error('failed to parse JSON: ' + err)\n  }\n\n  return new DAGNode(data, links)\n}\n\nfunction parseProtoBuffer (buf) {\n  return dagPB.util.deserialize(buf)\n}\n\n/**\n * @param {Object} config\n * @param {import('.').IPLD} config.ipld\n * @param {import('.').Preload} config.preload\n * @param {import('.').GCLock} config.gcLock\n */\nmodule.exports = ({ ipld, gcLock, preload }) => {\n  /**\n   *\n   * @param {Uint8Array|DAGNode|{ Data: any, links: DAGLink[]}} obj\n   * @param {PutOptions & AbortOptions} options\n   * @returns {Promise<CID>}\n   */\n  async function put (obj, options = {}) {\n    const encoding = options.enc\n    let node\n\n    if (obj instanceof Uint8Array) {\n      if (encoding) {\n        node = await parseBuffer(obj, encoding)\n      } else {\n        node = new DAGNode(obj)\n      }\n    } else if (DAGNode.isDAGNode(obj)) {\n      // already a dag node\n      node = obj\n    } else if (typeof obj === 'object') {\n      node = new DAGNode(obj.Data, obj.Links)\n    } else {\n      throw new Error('obj not recognized')\n    }\n\n    const release = await gcLock.readLock()\n\n    try {\n      const cid = await ipld.put(node, multicodec.DAG_PB, {\n        cidVersion: 0,\n        hashAlg: multicodec.SHA2_256\n      })\n\n      if (options.preload !== false) {\n        preload(cid)\n      }\n\n      return cid\n    } finally {\n      release()\n    }\n  }\n\n  return withTimeoutOption(put)\n}\n\n/**\n * @typedef {Object} PutOptions\n * @property {boolean} [preload]\n * @property {string} [enc]\n *\n * @typedef {import('.').CID} CID\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"lineCount":110}},"error":null,"hash":"0de95a0245517d7b51d129a2f4feaaf0","cacheData":{"env":{}}}