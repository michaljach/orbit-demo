{"id":"../node_modules/libp2p-noise/dist/src/index.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/node_modules/libp2p-noise/dist/src/index.js.map","includedInParent":true,"mtime":1611662667000},{"name":"/Users/michaljach/Sites/golf/node_modules/libp2p-noise/src/index.ts","includedInParent":true,"mtime":1611662581000},{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/libp2p-noise/package.json","includedInParent":true,"mtime":1612441378388},{"name":"./noise","loc":{"line":15,"column":21},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-noise/dist/src/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/libp2p-noise/dist/src/noise.js"}],"generated":{"js":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOISE = void 0;\nconst noise_1 = require(\"./noise\");\n__exportStar(require(\"./noise\"), exports);\n/**\n * Default configuration, it will generate new noise static key and enable noise pipes (IK handshake).\n */\nexports.NOISE = new noise_1.Noise();\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,mCAA+B;AAC/B,0CAAuB;AAEvB;;GAEG;AACU,QAAA,KAAK,GAAG,IAAI,aAAK,EAAE,CAAA","sourcesContent":["import { Noise } from './noise'\nexport * from './noise'\n\n/**\n * Default configuration, it will generate new noise static key and enable noise pipes (IK handshake).\n */\nexport const NOISE = new Noise()\n"]}},"error":null,"hash":"5724bce5d53164f0f166849d231a7df4","cacheData":{"env":{}}}