{"id":"../node_modules/ipfs-core/src/ipns/routing/utils.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"ipns","loc":{"line":3,"column":21},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/ipns/routing/utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipns/src/index.js"},{"name":"uint8arrays/to-string","loc":{"line":4,"column":35},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/ipns/routing/utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/uint8arrays/to-string.js"}],"generated":{"js":"'use strict'\n\nconst ipns = require('ipns')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\nmodule.exports = {\n  encodeBase32: (buf) => uint8ArrayToString(buf, 'base32upper'),\n  validator: {\n    func: (key, record, cb) => ipns.validator.validate(record, key, cb)\n  },\n  selector: (_k, records) => ipns.validator.select(records[0], records[1])\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/ipns/routing/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/ipns/routing/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/ipns/routing/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/ipns/routing/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/ipns/routing/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/ipns/routing/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/ipns/routing/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/ipns/routing/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/ipns/routing/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/ipns/routing/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/ipns/routing/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/ipns/routing/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/ipns/routing/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}}],"sources":{"../node_modules/ipfs-core/src/ipns/routing/utils.js":"'use strict'\n\nconst ipns = require('ipns')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\nmodule.exports = {\n  encodeBase32: (buf) => uint8ArrayToString(buf, 'base32upper'),\n  validator: {\n    func: (key, record, cb) => ipns.validator.validate(record, key, cb)\n  },\n  selector: (_k, records) => ipns.validator.select(records[0], records[1])\n}\n"},"lineCount":13}},"error":null,"hash":"a6dc40db88be52853b402cb9a0be5655","cacheData":{"env":{}}}