{"id":"../node_modules/libp2p-utils/src/address-sort.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/libp2p-utils/package.json","includedInParent":true,"mtime":1612441378452},{"name":"./multiaddr/is-private","loc":{"line":3,"column":26},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-utils/src/address-sort.js","resolved":"/Users/michaljach/Sites/golf/node_modules/libp2p-utils/src/multiaddr/is-private.js"}],"generated":{"js":"'use strict'\n\nconst isPrivate = require('./multiaddr/is-private')\n\n/**\n * Compare function for array.sort().\n * This sort aims to move the private adresses to the end of the array.\n * In case of equality, a certified address will come first.\n *\n * @param {Address} a\n * @param {Address} b\n * @returns {number}\n */\nfunction addressesPublicFirstCompareFunction (a, b) {\n  const isAPrivate = isPrivate(a.multiaddr)\n  const isBPrivate = isPrivate(b.multiaddr)\n\n  if (isAPrivate && !isBPrivate) {\n    return 1\n  } else if (!isAPrivate && isBPrivate) {\n    return -1\n  }\n  // Check certified?\n  if (a.isCertified && !b.isCertified) {\n    return -1\n  } else if (!a.isCertified && b.isCertified) {\n    return 1\n  }\n\n  return 0\n}\n\n/**\n * Sort given addresses by putting public addresses first.\n * In case of equality, a certified address will come first.\n *\n * @param {Array<Address>} addresses\n * @returns {Array<Address>}\n */\nfunction publicAddressesFirst (addresses) {\n  return [...addresses].sort(addressesPublicFirstCompareFunction)\n}\n\nmodule.exports.publicAddressesFirst = publicAddressesFirst\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/libp2p-utils/src/address-sort.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}}],"sources":{"../node_modules/libp2p-utils/src/address-sort.js":"'use strict'\n\nconst isPrivate = require('./multiaddr/is-private')\n\n/**\n * Compare function for array.sort().\n * This sort aims to move the private adresses to the end of the array.\n * In case of equality, a certified address will come first.\n *\n * @param {Address} a\n * @param {Address} b\n * @returns {number}\n */\nfunction addressesPublicFirstCompareFunction (a, b) {\n  const isAPrivate = isPrivate(a.multiaddr)\n  const isBPrivate = isPrivate(b.multiaddr)\n\n  if (isAPrivate && !isBPrivate) {\n    return 1\n  } else if (!isAPrivate && isBPrivate) {\n    return -1\n  }\n  // Check certified?\n  if (a.isCertified && !b.isCertified) {\n    return -1\n  } else if (!a.isCertified && b.isCertified) {\n    return 1\n  }\n\n  return 0\n}\n\n/**\n * Sort given addresses by putting public addresses first.\n * In case of equality, a certified address will come first.\n *\n * @param {Array<Address>} addresses\n * @returns {Array<Address>}\n */\nfunction publicAddressesFirst (addresses) {\n  return [...addresses].sort(addressesPublicFirstCompareFunction)\n}\n\nmodule.exports.publicAddressesFirst = publicAddressesFirst\n"},"lineCount":45}},"error":null,"hash":"2ee1cbdf70abeae9eaf6ad78f4985349","cacheData":{"env":{}}}