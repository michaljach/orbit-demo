{"id":"../node_modules/ipfs-core/src/components/network.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"ipfs-bitswap","loc":{"line":3,"column":28},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/network.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/src/index.js"},{"name":"./libp2p","loc":{"line":4,"column":29},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/network.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/libp2p.js"},{"name":"multiaddr","loc":{"line":5,"column":26},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/network.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multiaddr/src/index.js"},{"name":"err-code","loc":{"line":6,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/network.js","resolved":"/Users/michaljach/Sites/golf/node_modules/err-code/index.js"}],"generated":{"js":"'use strict'\n\nconst IPFSBitswap = require('ipfs-bitswap')\nconst createLibP2P = require('./libp2p')\nconst Multiaddr = require('multiaddr')\nconst errCode = require('err-code')\n\nclass Network {\n  /**\n   * @param {PeerId} peerId\n   * @param {LibP2P} libp2p\n   * @param {BitSwap} bitswap\n   */\n  constructor (peerId, libp2p, bitswap) {\n    this.peerId = peerId\n    this.libp2p = libp2p\n    this.bitswap = bitswap\n  }\n\n  /**\n   * @param {Options} options\n   */\n  static async start ({ peerId, repo, print, options }) {\n    // Need to ensure that repo is open as it could have been closed between\n    // `init` and `start`.\n    if (repo.closed) {\n      await repo.open()\n    }\n\n    const config = await repo.config.getAll()\n\n    const libp2p = createLibP2P({\n      options,\n      repo,\n      peerId,\n      multiaddrs: readAddrs(peerId, config),\n      config,\n      keychainConfig: undefined\n    })\n\n    if (libp2p.keychain) {\n      await libp2p.loadKeychain()\n    }\n\n    await libp2p.start()\n\n    for (const ma of libp2p.multiaddrs) {\n      print(`Swarm listening on ${ma}/p2p/${peerId.toB58String()}`)\n    }\n\n    const bitswap = new IPFSBitswap(libp2p, repo.blocks, { statsEnabled: true })\n    await bitswap.start()\n\n    return new Network(peerId, libp2p, bitswap)\n  }\n\n  /**\n   * @param {Network} network\n   */\n  static async stop (network) {\n    await Promise.all([\n      network.bitswap.stop(),\n      network.libp2p.stop()\n    ])\n  }\n}\nmodule.exports = Network\n\n/**\n *\n * @param {PeerId} peerId\n * @param {IPFSConfig} config\n * @returns {Multiaddr[]}\n */\nconst readAddrs = (peerId, config) => {\n  const peerIdStr = peerId.toB58String()\n  /** @type {Multiaddr[]} */\n  const addrs = []\n  const swarm = (config.Addresses && config.Addresses.Swarm) || []\n  for (const addr of swarm) {\n    let ma = Multiaddr(addr)\n\n    // Temporary error for users migrating using websocket-star multiaddrs for listenning on libp2p\n    // websocket-star support was removed from ipfs and libp2p\n    if (ma.protoCodes().includes(WEBSOCKET_STAR_PROTO_CODE)) {\n      throw errCode(new Error('websocket-star swarm addresses are not supported. See https://github.com/ipfs/js-ipfs/issues/2779'), 'ERR_WEBSOCKET_STAR_SWARM_ADDR_NOT_SUPPORTED')\n    }\n\n    // multiaddrs that go via a signalling server or other intermediary (e.g. stardust,\n    // webrtc-star) can have the intermediary's peer ID in the address, so append our\n    // peer ID to the end of it\n    const maId = ma.getPeerId()\n    if (maId && maId !== peerIdStr) {\n      ma = ma.encapsulate(`/p2p/${peerIdStr}`)\n    }\n\n    addrs.push(ma)\n  }\n\n  return addrs\n}\n\nconst WEBSOCKET_STAR_PROTO_CODE = 479\n/**\n * @typedef {Object} Online\n * @property {LibP2P} libp2p\n * @property {BitSwap} bitswap\n *\n * @typedef {Object} Options\n * @property {PeerId} options.peerId\n * @property {Repo} options.repo\n * @property {Print} options.print\n * @property {IPFSOptions} options.options\n *\n * @typedef {import('.').IPFSConfig} IPFSConfig\n * @typedef {import('.').Options} IPFSOptions\n * @typedef {import('.').Repo} Repo\n * @typedef {import('.').Print} Print\n * @typedef {import('.').LibP2P} LibP2P\n * @typedef {import('ipfs-core-types/src/bitswap').Bitswap} BitSwap\n * @typedef {import('.').PeerId} PeerId\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipfs-core/src/components/network.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/network.js":"'use strict'\n\nconst IPFSBitswap = require('ipfs-bitswap')\nconst createLibP2P = require('./libp2p')\nconst Multiaddr = require('multiaddr')\nconst errCode = require('err-code')\n\nclass Network {\n  /**\n   * @param {PeerId} peerId\n   * @param {LibP2P} libp2p\n   * @param {BitSwap} bitswap\n   */\n  constructor (peerId, libp2p, bitswap) {\n    this.peerId = peerId\n    this.libp2p = libp2p\n    this.bitswap = bitswap\n  }\n\n  /**\n   * @param {Options} options\n   */\n  static async start ({ peerId, repo, print, options }) {\n    // Need to ensure that repo is open as it could have been closed between\n    // `init` and `start`.\n    if (repo.closed) {\n      await repo.open()\n    }\n\n    const config = await repo.config.getAll()\n\n    const libp2p = createLibP2P({\n      options,\n      repo,\n      peerId,\n      multiaddrs: readAddrs(peerId, config),\n      config,\n      keychainConfig: undefined\n    })\n\n    if (libp2p.keychain) {\n      await libp2p.loadKeychain()\n    }\n\n    await libp2p.start()\n\n    for (const ma of libp2p.multiaddrs) {\n      print(`Swarm listening on ${ma}/p2p/${peerId.toB58String()}`)\n    }\n\n    const bitswap = new IPFSBitswap(libp2p, repo.blocks, { statsEnabled: true })\n    await bitswap.start()\n\n    return new Network(peerId, libp2p, bitswap)\n  }\n\n  /**\n   * @param {Network} network\n   */\n  static async stop (network) {\n    await Promise.all([\n      network.bitswap.stop(),\n      network.libp2p.stop()\n    ])\n  }\n}\nmodule.exports = Network\n\n/**\n *\n * @param {PeerId} peerId\n * @param {IPFSConfig} config\n * @returns {Multiaddr[]}\n */\nconst readAddrs = (peerId, config) => {\n  const peerIdStr = peerId.toB58String()\n  /** @type {Multiaddr[]} */\n  const addrs = []\n  const swarm = (config.Addresses && config.Addresses.Swarm) || []\n  for (const addr of swarm) {\n    let ma = Multiaddr(addr)\n\n    // Temporary error for users migrating using websocket-star multiaddrs for listenning on libp2p\n    // websocket-star support was removed from ipfs and libp2p\n    if (ma.protoCodes().includes(WEBSOCKET_STAR_PROTO_CODE)) {\n      throw errCode(new Error('websocket-star swarm addresses are not supported. See https://github.com/ipfs/js-ipfs/issues/2779'), 'ERR_WEBSOCKET_STAR_SWARM_ADDR_NOT_SUPPORTED')\n    }\n\n    // multiaddrs that go via a signalling server or other intermediary (e.g. stardust,\n    // webrtc-star) can have the intermediary's peer ID in the address, so append our\n    // peer ID to the end of it\n    const maId = ma.getPeerId()\n    if (maId && maId !== peerIdStr) {\n      ma = ma.encapsulate(`/p2p/${peerIdStr}`)\n    }\n\n    addrs.push(ma)\n  }\n\n  return addrs\n}\n\nconst WEBSOCKET_STAR_PROTO_CODE = 479\n/**\n * @typedef {Object} Online\n * @property {LibP2P} libp2p\n * @property {BitSwap} bitswap\n *\n * @typedef {Object} Options\n * @property {PeerId} options.peerId\n * @property {Repo} options.repo\n * @property {Print} options.print\n * @property {IPFSOptions} options.options\n *\n * @typedef {import('.').IPFSConfig} IPFSConfig\n * @typedef {import('.').Options} IPFSOptions\n * @typedef {import('.').Repo} Repo\n * @typedef {import('.').Print} Print\n * @typedef {import('.').LibP2P} LibP2P\n * @typedef {import('ipfs-core-types/src/bitswap').Bitswap} BitSwap\n * @typedef {import('.').PeerId} PeerId\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"lineCount":124}},"error":null,"hash":"dde218909847bb001a66780ec0aa4d63","cacheData":{"env":{}}}