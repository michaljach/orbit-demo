{"id":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/package.json","includedInParent":true,"mtime":1612441378234},{"name":"libp2p-crypto/src/random-bytes","loc":{"line":3,"column":28},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/pubsub/utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/libp2p-crypto/src/random-bytes.js"},{"name":"uint8arrays/to-string","loc":{"line":4,"column":35},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/pubsub/utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/uint8arrays/to-string.js"},{"name":"uint8arrays/from-string","loc":{"line":5,"column":37},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/pubsub/utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/uint8arrays/from-string.js"},{"name":"peer-id","loc":{"line":6,"column":23},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/pubsub/utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/peer-id/src/index.js"},{"name":"multihashes","loc":{"line":7,"column":26},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/pubsub/utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multihashes/src/index.js"}],"generated":{"js":"'use strict'\n\nconst randomBytes = require('libp2p-crypto/src/random-bytes')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst PeerId = require('peer-id')\nconst multihash = require('multihashes')\nexports = module.exports\n\n/**\n * Generatea random sequence number.\n *\n * @returns {Uint8Array}\n * @private\n */\nexports.randomSeqno = () => {\n  return randomBytes(8)\n}\n\n/**\n * Generate a message id, based on the `from` and `seqno`.\n *\n * @param {string} from\n * @param {Uint8Array} seqno\n * @returns {Uint8Array}\n * @private\n */\nexports.msgId = (from, seqno) => {\n  const fromBytes = PeerId.createFromB58String(from).id\n  const msgId = new Uint8Array(fromBytes.length + seqno.length)\n  msgId.set(fromBytes, 0)\n  msgId.set(seqno, fromBytes.length)\n  return msgId\n}\n\n/**\n * Generate a message id, based on message `data`.\n *\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n * @private\n */\nexports.noSignMsgId = (data) => multihash.encode(data, 'sha2-256')\n\n/**\n * Check if any member of the first set is also a member\n * of the second set.\n *\n * @param {Set|Array} a\n * @param {Set|Array} b\n * @returns {boolean}\n * @private\n */\nexports.anyMatch = (a, b) => {\n  let bHas\n  if (Array.isArray(b)) {\n    bHas = (val) => b.indexOf(val) > -1\n  } else {\n    bHas = (val) => b.has(val)\n  }\n\n  for (const val of a) {\n    if (bHas(val)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Make everything an array.\n *\n * @template T\n * @param {T|T[]} maybeArray\n * @returns {T[]}\n * @private\n */\nexports.ensureArray = (maybeArray) => {\n  if (!Array.isArray(maybeArray)) {\n    return [maybeArray]\n  }\n\n  return maybeArray\n}\n\n/**\n * Ensures `message.from` is base58 encoded\n *\n * @template {{from?:any}} T\n * @param {T & {from?:string, receivedFrom:string}} message\n * @param {string} [peerId]\n * @returns {T & {from?: string, peerId?: string }}\n */\nexports.normalizeInRpcMessage = (message, peerId) => {\n  const m = Object.assign({}, message)\n  if (message.from instanceof Uint8Array) {\n    m.from = uint8ArrayToString(message.from, 'base58btc')\n  }\n  if (peerId) {\n    m.receivedFrom = peerId\n  }\n  return m\n}\n\n/**\n * @template {{from?:any, data?:any}} T\n *\n * @param {T} message\n * @returns {T & {from?: Uint8Array, data?: Uint8Array}}\n */\nexports.normalizeOutRpcMessage = (message) => {\n  const m = Object.assign({}, message)\n  if (typeof message.from === 'string') {\n    m.from = uint8ArrayFromString(message.from, 'base58btc')\n  }\n  if (typeof message.data === 'string') {\n    m.data = uint8ArrayFromString(message.data)\n  }\n  return m\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/utils.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}}],"sources":{"../node_modules/libp2p-interfaces/src/pubsub/utils.js":"'use strict'\n\nconst randomBytes = require('libp2p-crypto/src/random-bytes')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst PeerId = require('peer-id')\nconst multihash = require('multihashes')\nexports = module.exports\n\n/**\n * Generatea random sequence number.\n *\n * @returns {Uint8Array}\n * @private\n */\nexports.randomSeqno = () => {\n  return randomBytes(8)\n}\n\n/**\n * Generate a message id, based on the `from` and `seqno`.\n *\n * @param {string} from\n * @param {Uint8Array} seqno\n * @returns {Uint8Array}\n * @private\n */\nexports.msgId = (from, seqno) => {\n  const fromBytes = PeerId.createFromB58String(from).id\n  const msgId = new Uint8Array(fromBytes.length + seqno.length)\n  msgId.set(fromBytes, 0)\n  msgId.set(seqno, fromBytes.length)\n  return msgId\n}\n\n/**\n * Generate a message id, based on message `data`.\n *\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n * @private\n */\nexports.noSignMsgId = (data) => multihash.encode(data, 'sha2-256')\n\n/**\n * Check if any member of the first set is also a member\n * of the second set.\n *\n * @param {Set|Array} a\n * @param {Set|Array} b\n * @returns {boolean}\n * @private\n */\nexports.anyMatch = (a, b) => {\n  let bHas\n  if (Array.isArray(b)) {\n    bHas = (val) => b.indexOf(val) > -1\n  } else {\n    bHas = (val) => b.has(val)\n  }\n\n  for (const val of a) {\n    if (bHas(val)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Make everything an array.\n *\n * @template T\n * @param {T|T[]} maybeArray\n * @returns {T[]}\n * @private\n */\nexports.ensureArray = (maybeArray) => {\n  if (!Array.isArray(maybeArray)) {\n    return [maybeArray]\n  }\n\n  return maybeArray\n}\n\n/**\n * Ensures `message.from` is base58 encoded\n *\n * @template {{from?:any}} T\n * @param {T & {from?:string, receivedFrom:string}} message\n * @param {string} [peerId]\n * @returns {T & {from?: string, peerId?: string }}\n */\nexports.normalizeInRpcMessage = (message, peerId) => {\n  const m = Object.assign({}, message)\n  if (message.from instanceof Uint8Array) {\n    m.from = uint8ArrayToString(message.from, 'base58btc')\n  }\n  if (peerId) {\n    m.receivedFrom = peerId\n  }\n  return m\n}\n\n/**\n * @template {{from?:any, data?:any}} T\n *\n * @param {T} message\n * @returns {T & {from?: Uint8Array, data?: Uint8Array}}\n */\nexports.normalizeOutRpcMessage = (message) => {\n  const m = Object.assign({}, message)\n  if (typeof message.from === 'string') {\n    m.from = uint8ArrayFromString(message.from, 'base58btc')\n  }\n  if (typeof message.data === 'string') {\n    m.data = uint8ArrayFromString(message.data)\n  }\n  return m\n}\n"},"lineCount":122}},"error":null,"hash":"356e15a4e0c3ff18c945a5378cce2c2f","cacheData":{"env":{}}}