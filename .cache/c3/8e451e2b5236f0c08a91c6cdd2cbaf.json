{"id":"../node_modules/protons/src/compile/encodings/sint64.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/protons/package.json","includedInParent":true,"mtime":1612441378454},{"name":"signed-varint","loc":{"line":3,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/protons/src/compile/encodings/sint64.js","resolved":"/Users/michaljach/Sites/golf/node_modules/signed-varint/index.js"},{"name":"./encoder","loc":{"line":4,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/protons/src/compile/encodings/sint64.js","resolved":"/Users/michaljach/Sites/golf/node_modules/protons/src/compile/encodings/encoder.js"}],"generated":{"js":"'use strict'\n\nconst svarint = require('signed-varint')\nconst encoder = require('./encoder')\n\nfunction svarintEncode (val, buffer, dataView, offset) {\n  svarint.encode(val, buffer, offset)\n\n  svarintEncode.bytes = svarint.encode.bytes\n}\n\nfunction svarintDecode (buffer, dataView, offset) {\n  const val = svarint.decode(buffer, offset)\n  svarintDecode.bytes = svarint.decode.bytes\n\n  return val\n}\n\nmodule.exports = encoder(0, svarintEncode, svarintDecode, svarint.encodingLength)\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/protons/src/compile/encodings/sint64.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}}],"sources":{"../node_modules/protons/src/compile/encodings/sint64.js":"'use strict'\n\nconst svarint = require('signed-varint')\nconst encoder = require('./encoder')\n\nfunction svarintEncode (val, buffer, dataView, offset) {\n  svarint.encode(val, buffer, offset)\n\n  svarintEncode.bytes = svarint.encode.bytes\n}\n\nfunction svarintDecode (buffer, dataView, offset) {\n  const val = svarint.decode(buffer, offset)\n  svarintDecode.bytes = svarint.decode.bytes\n\n  return val\n}\n\nmodule.exports = encoder(0, svarintEncode, svarintDecode, svarint.encodingLength)\n"},"lineCount":20}},"error":null,"hash":"11bfa7f08d473d42441b86ee24004f44","cacheData":{"env":{}}}