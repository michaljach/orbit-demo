{"id":"../node_modules/ipfs-core/src/components/block/rm.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"cids","loc":{"line":3,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/block/rm.js","resolved":"/Users/michaljach/Sites/golf/node_modules/cids/src/index.js"},{"name":"err-code","loc":{"line":4,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/block/rm.js","resolved":"/Users/michaljach/Sites/golf/node_modules/err-code/index.js"},{"name":"streaming-iterables","loc":{"line":5,"column":40},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/block/rm.js","resolved":"/Users/michaljach/Sites/golf/node_modules/streaming-iterables/dist/index.mjs"},{"name":"it-pipe","loc":{"line":6,"column":25},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/block/rm.js","resolved":"/Users/michaljach/Sites/golf/node_modules/it-pipe/index.js"},{"name":"../pin/pin-manager","loc":{"line":7,"column":29},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/block/rm.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/pin/pin-manager.js"},{"name":"./utils","loc":{"line":8,"column":29},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/block/rm.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/block/utils.js"},{"name":"ipfs-core-utils/src/with-timeout-option","loc":{"line":9,"column":34},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/block/rm.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core-utils/src/with-timeout-option.js"}],"generated":{"js":"'use strict'\n\nconst CID = require('cids')\nconst errCode = require('err-code')\nconst { parallelMap, filter } = require('streaming-iterables')\nconst { pipe } = require('it-pipe')\nconst { PinTypes } = require('../pin/pin-manager')\nconst { cleanCid } = require('./utils')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\nconst BLOCK_RM_CONCURRENCY = 8\n\n/**\n * @param {Object} config\n * @param {import('.').BlockService} config.blockService\n * @param {import('.').PinManager} config.pinManager\n * @param {import('.').GCLock} config.gcLock\n */\nmodule.exports = ({ blockService, gcLock, pinManager }) => {\n  /**\n  /**\n   * Remove one or more IPFS block(s).\n   *\n   * @param {CID[]|CID} cids - CID(s) corresponding to the block(s) to be removed.\n   * @param {RmOptions & AbortOptions} [options]\n   * @returns {AsyncIterable<RmResult>}\n   *\n   * @example\n   * ```js\n   * for await (const result of ipfs.block.rm(cid)) {\n   *   if (result.error) {\n   *     console.error(`Failed to remove block ${result.cid} due to ${result.error.message}`)\n   *   } else {\n   *    console.log(`Removed block ${result.cid}`)\n   *   }\n   * }\n   * ```\n   */\n  async function * rm (cids, options = {}) {\n    if (!Array.isArray(cids)) {\n      cids = [cids]\n    }\n\n    // We need to take a write lock here to ensure that adding and removing\n    // blocks are exclusive operations\n    const release = await gcLock.writeLock()\n\n    try {\n      yield * pipe(\n        cids,\n        parallelMap(BLOCK_RM_CONCURRENCY, async cid => {\n          cid = cleanCid(cid)\n\n          const result = { cid }\n\n          try {\n            const pinResult = await pinManager.isPinnedWithType(cid, PinTypes.all)\n\n            if (pinResult.pinned) {\n              if (CID.isCID(pinResult.reason)) { // eslint-disable-line max-depth\n                throw errCode(new Error(`pinned via ${pinResult.reason}`))\n              }\n\n              throw errCode(new Error(`pinned: ${pinResult.reason}`))\n            }\n\n            // remove has check when https://github.com/ipfs/js-ipfs-block-service/pull/88 is merged\n            // @ts-ignore - this accesses some internals\n            const has = await blockService._repo.blocks.has(cid)\n\n            if (!has) {\n              throw errCode(new Error('block not found'), 'ERR_BLOCK_NOT_FOUND')\n            }\n\n            await blockService.delete(cid)\n          } catch (err) {\n            if (!options.force) {\n              err.message = `cannot remove ${cid}: ${err.message}`\n              result.error = err\n            }\n          }\n\n          return result\n        }),\n        filter(() => !options.quiet)\n      )\n    } finally {\n      release()\n    }\n  }\n\n  return withTimeoutOption(rm)\n}\n\n/**\n * @typedef {Object} RmOptions\n * @property {boolean} [force=false] - Ignores nonexistent blocks\n * @property {boolean} [quiet=false] - Write minimal output\n *\n * @typedef {import('.').AbortOptions} AbortOptions\n *\n * @typedef {RmSucceess|RmFailure} RmResult\n * Note: If an error is present for a given object, the block with\n * that cid was not removed and the error will contain the reason why,\n * for example if the block was pinned.\n *\n * @typedef {Object} RmSucceess\n * @property {CID} cid\n * @property {void} [error]\n *\n * @typedef {Object} RmFailure\n * @property {CID} cid\n * @property {Error} error\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/rm.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/block/rm.js":"'use strict'\n\nconst CID = require('cids')\nconst errCode = require('err-code')\nconst { parallelMap, filter } = require('streaming-iterables')\nconst { pipe } = require('it-pipe')\nconst { PinTypes } = require('../pin/pin-manager')\nconst { cleanCid } = require('./utils')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\nconst BLOCK_RM_CONCURRENCY = 8\n\n/**\n * @param {Object} config\n * @param {import('.').BlockService} config.blockService\n * @param {import('.').PinManager} config.pinManager\n * @param {import('.').GCLock} config.gcLock\n */\nmodule.exports = ({ blockService, gcLock, pinManager }) => {\n  /**\n  /**\n   * Remove one or more IPFS block(s).\n   *\n   * @param {CID[]|CID} cids - CID(s) corresponding to the block(s) to be removed.\n   * @param {RmOptions & AbortOptions} [options]\n   * @returns {AsyncIterable<RmResult>}\n   *\n   * @example\n   * ```js\n   * for await (const result of ipfs.block.rm(cid)) {\n   *   if (result.error) {\n   *     console.error(`Failed to remove block ${result.cid} due to ${result.error.message}`)\n   *   } else {\n   *    console.log(`Removed block ${result.cid}`)\n   *   }\n   * }\n   * ```\n   */\n  async function * rm (cids, options = {}) {\n    if (!Array.isArray(cids)) {\n      cids = [cids]\n    }\n\n    // We need to take a write lock here to ensure that adding and removing\n    // blocks are exclusive operations\n    const release = await gcLock.writeLock()\n\n    try {\n      yield * pipe(\n        cids,\n        parallelMap(BLOCK_RM_CONCURRENCY, async cid => {\n          cid = cleanCid(cid)\n\n          const result = { cid }\n\n          try {\n            const pinResult = await pinManager.isPinnedWithType(cid, PinTypes.all)\n\n            if (pinResult.pinned) {\n              if (CID.isCID(pinResult.reason)) { // eslint-disable-line max-depth\n                throw errCode(new Error(`pinned via ${pinResult.reason}`))\n              }\n\n              throw errCode(new Error(`pinned: ${pinResult.reason}`))\n            }\n\n            // remove has check when https://github.com/ipfs/js-ipfs-block-service/pull/88 is merged\n            // @ts-ignore - this accesses some internals\n            const has = await blockService._repo.blocks.has(cid)\n\n            if (!has) {\n              throw errCode(new Error('block not found'), 'ERR_BLOCK_NOT_FOUND')\n            }\n\n            await blockService.delete(cid)\n          } catch (err) {\n            if (!options.force) {\n              err.message = `cannot remove ${cid}: ${err.message}`\n              result.error = err\n            }\n          }\n\n          return result\n        }),\n        filter(() => !options.quiet)\n      )\n    } finally {\n      release()\n    }\n  }\n\n  return withTimeoutOption(rm)\n}\n\n/**\n * @typedef {Object} RmOptions\n * @property {boolean} [force=false] - Ignores nonexistent blocks\n * @property {boolean} [quiet=false] - Write minimal output\n *\n * @typedef {import('.').AbortOptions} AbortOptions\n *\n * @typedef {RmSucceess|RmFailure} RmResult\n * Note: If an error is present for a given object, the block with\n * that cid was not removed and the error will contain the reason why,\n * for example if the block was pinned.\n *\n * @typedef {Object} RmSucceess\n * @property {CID} cid\n * @property {void} [error]\n *\n * @typedef {Object} RmFailure\n * @property {CID} cid\n * @property {Error} error\n */\n"},"lineCount":115}},"error":null,"hash":"b5ccb4396e719044fb5c8b91fcc091fc","cacheData":{"env":{}}}