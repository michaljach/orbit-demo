{"id":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/package.json","includedInParent":true,"mtime":1612441378234},{"name":"events","loc":{"line":5,"column":29},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/events/events.js"},{"name":"it-length-prefixed","loc":{"line":7,"column":19},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","resolved":"/Users/michaljach/Sites/golf/node_modules/it-length-prefixed/src/index.js"},{"name":"it-pushable","loc":{"line":9,"column":25},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","resolved":"/Users/michaljach/Sites/golf/node_modules/it-pushable/index.js"},{"name":"it-pipe","loc":{"line":10,"column":25},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","resolved":"/Users/michaljach/Sites/golf/node_modules/it-pipe/index.js"},{"name":"abortable-iterator","loc":{"line":11,"column":38},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","resolved":"/Users/michaljach/Sites/golf/node_modules/abortable-iterator/index.js"},{"name":"abort-controller","loc":{"line":12,"column":32},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","resolved":"/Users/michaljach/Sites/golf/node_modules/abort-controller/browser.js"},{"name":"debug","loc":{"line":13,"column":22},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","resolved":"/Users/michaljach/Sites/golf/node_modules/debug/src/browser.js"}],"generated":{"js":"'use strict'\n\n/** @typedef {import('../types').EventEmitterFactory} Events */\n/** @type Events */\nconst EventEmitter = require('events')\n\nconst lp = require('it-length-prefixed')\n\nconst pushable = require('it-pushable')\nconst { pipe } = require('it-pipe')\nconst { source: abortable } = require('abortable-iterator')\nconst AbortController = require('abort-controller').default\nconst debug = require('debug')\n\nconst log = debug('libp2p-pubsub:peer-streams')\nlog.error = debug('libp2p-pubsub:peer-streams:error')\n\n/**\n * @typedef {import('../stream-muxer/types').MuxedStream} MuxedStream\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('it-pushable').Pushable<Uint8Array>} PushableStream\n */\n\n/**\n * Thin wrapper around a peer's inbound / outbound pubsub streams\n */\nclass PeerStreams extends EventEmitter {\n  /**\n   * @param {object} properties - properties of the PeerStreams.\n   * @param {PeerId} properties.id\n   * @param {string} properties.protocol\n   */\n  constructor ({ id, protocol }) {\n    super()\n\n    /**\n     * @type {import('peer-id')}\n     */\n    this.id = id\n    /**\n     * Established protocol\n     *\n     * @type {string}\n     */\n    this.protocol = protocol\n    /**\n     * The raw outbound stream, as retrieved from conn.newStream\n     *\n     * @private\n     * @type {null|MuxedStream}\n     */\n    this._rawOutboundStream = null\n    /**\n     * The raw inbound stream, as retrieved from the callback from libp2p.handle\n     *\n     * @private\n     * @type {null|MuxedStream}\n     */\n    this._rawInboundStream = null\n    /**\n     * An AbortController for controlled shutdown of the inbound stream\n     *\n     * @private\n     * @type {AbortController}\n     */\n    this._inboundAbortController = new AbortController()\n    /**\n     * Write stream -- its preferable to use the write method\n     *\n     * @type {null|PushableStream}\n     */\n    this.outboundStream = null\n    /**\n     * Read stream\n     *\n     * @type {null| AsyncIterable<Uint8Array>}\n     */\n    this.inboundStream = null\n  }\n\n  /**\n   * Do we have a connection to read from?\n   *\n   * @type {boolean}\n   */\n  get isReadable () {\n    return Boolean(this.inboundStream)\n  }\n\n  /**\n   * Do we have a connection to write on?\n   *\n   * @type {boolean}\n   */\n  get isWritable () {\n    return Boolean(this.outboundStream)\n  }\n\n  /**\n   * Send a message to this peer.\n   * Throws if there is no `stream` to write to available.\n   *\n   * @param {Uint8Array} data\n   * @returns {void}\n   */\n  write (data) {\n    if (!this.outboundStream) {\n      const id = this.id.toB58String()\n      throw new Error('No writable connection to ' + id)\n    }\n\n    this.outboundStream.push(data)\n  }\n\n  /**\n   * Attach a raw inbound stream and setup a read stream\n   *\n   * @param {MuxedStream} stream\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  attachInboundStream (stream) {\n    // Create and attach a new inbound stream\n    // The inbound stream is:\n    // - abortable, set to only return on abort, rather than throw\n    // - transformed with length-prefix transform\n    this._rawInboundStream = stream\n    this.inboundStream = abortable(\n      pipe(\n        this._rawInboundStream,\n        lp.decode()\n      ),\n      this._inboundAbortController.signal,\n      { returnOnAbort: true }\n    )\n\n    this.emit('stream:inbound')\n    return this.inboundStream\n  }\n\n  /**\n   * Attach a raw outbound stream and setup a write stream\n   *\n   * @param {MuxedStream} stream\n   * @returns {Promise<void>}\n   */\n  async attachOutboundStream (stream) {\n    // If an outbound stream already exists, gently close it\n    const _prevStream = this.outboundStream\n    if (this.outboundStream) {\n      // End the stream without emitting a close event\n      await this.outboundStream.end()\n    }\n\n    this._rawOutboundStream = stream\n    this.outboundStream = pushable({\n      onEnd: (shouldEmit) => {\n        // close writable side of the stream\n        this._rawOutboundStream && this._rawOutboundStream.reset && this._rawOutboundStream.reset()\n        this._rawOutboundStream = null\n        this.outboundStream = null\n        if (shouldEmit) {\n          this.emit('close')\n        }\n      }\n    })\n\n    pipe(\n      this.outboundStream,\n      lp.encode(),\n      this._rawOutboundStream\n    ).catch(err => {\n      log.error(err)\n    })\n\n    // Only emit if the connection is new\n    if (!_prevStream) {\n      this.emit('stream:outbound')\n    }\n  }\n\n  /**\n   * Closes the open connection to peer\n   *\n   * @returns {void}\n   */\n  close () {\n    // End the outbound stream\n    if (this.outboundStream) {\n      this.outboundStream.end()\n    }\n    // End the inbound stream\n    if (this.inboundStream) {\n      this._inboundAbortController.abort()\n    }\n\n    this._rawOutboundStream = null\n    this.outboundStream = null\n    this._rawInboundStream = null\n    this.inboundStream = null\n    this.emit('close')\n  }\n}\n\nmodule.exports = PeerStreams\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}}],"sources":{"../node_modules/libp2p-interfaces/src/pubsub/peer-streams.js":"'use strict'\n\n/** @typedef {import('../types').EventEmitterFactory} Events */\n/** @type Events */\nconst EventEmitter = require('events')\n\nconst lp = require('it-length-prefixed')\n\nconst pushable = require('it-pushable')\nconst { pipe } = require('it-pipe')\nconst { source: abortable } = require('abortable-iterator')\nconst AbortController = require('abort-controller').default\nconst debug = require('debug')\n\nconst log = debug('libp2p-pubsub:peer-streams')\nlog.error = debug('libp2p-pubsub:peer-streams:error')\n\n/**\n * @typedef {import('../stream-muxer/types').MuxedStream} MuxedStream\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('it-pushable').Pushable<Uint8Array>} PushableStream\n */\n\n/**\n * Thin wrapper around a peer's inbound / outbound pubsub streams\n */\nclass PeerStreams extends EventEmitter {\n  /**\n   * @param {object} properties - properties of the PeerStreams.\n   * @param {PeerId} properties.id\n   * @param {string} properties.protocol\n   */\n  constructor ({ id, protocol }) {\n    super()\n\n    /**\n     * @type {import('peer-id')}\n     */\n    this.id = id\n    /**\n     * Established protocol\n     *\n     * @type {string}\n     */\n    this.protocol = protocol\n    /**\n     * The raw outbound stream, as retrieved from conn.newStream\n     *\n     * @private\n     * @type {null|MuxedStream}\n     */\n    this._rawOutboundStream = null\n    /**\n     * The raw inbound stream, as retrieved from the callback from libp2p.handle\n     *\n     * @private\n     * @type {null|MuxedStream}\n     */\n    this._rawInboundStream = null\n    /**\n     * An AbortController for controlled shutdown of the inbound stream\n     *\n     * @private\n     * @type {AbortController}\n     */\n    this._inboundAbortController = new AbortController()\n    /**\n     * Write stream -- its preferable to use the write method\n     *\n     * @type {null|PushableStream}\n     */\n    this.outboundStream = null\n    /**\n     * Read stream\n     *\n     * @type {null| AsyncIterable<Uint8Array>}\n     */\n    this.inboundStream = null\n  }\n\n  /**\n   * Do we have a connection to read from?\n   *\n   * @type {boolean}\n   */\n  get isReadable () {\n    return Boolean(this.inboundStream)\n  }\n\n  /**\n   * Do we have a connection to write on?\n   *\n   * @type {boolean}\n   */\n  get isWritable () {\n    return Boolean(this.outboundStream)\n  }\n\n  /**\n   * Send a message to this peer.\n   * Throws if there is no `stream` to write to available.\n   *\n   * @param {Uint8Array} data\n   * @returns {void}\n   */\n  write (data) {\n    if (!this.outboundStream) {\n      const id = this.id.toB58String()\n      throw new Error('No writable connection to ' + id)\n    }\n\n    this.outboundStream.push(data)\n  }\n\n  /**\n   * Attach a raw inbound stream and setup a read stream\n   *\n   * @param {MuxedStream} stream\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  attachInboundStream (stream) {\n    // Create and attach a new inbound stream\n    // The inbound stream is:\n    // - abortable, set to only return on abort, rather than throw\n    // - transformed with length-prefix transform\n    this._rawInboundStream = stream\n    this.inboundStream = abortable(\n      pipe(\n        this._rawInboundStream,\n        lp.decode()\n      ),\n      this._inboundAbortController.signal,\n      { returnOnAbort: true }\n    )\n\n    this.emit('stream:inbound')\n    return this.inboundStream\n  }\n\n  /**\n   * Attach a raw outbound stream and setup a write stream\n   *\n   * @param {MuxedStream} stream\n   * @returns {Promise<void>}\n   */\n  async attachOutboundStream (stream) {\n    // If an outbound stream already exists, gently close it\n    const _prevStream = this.outboundStream\n    if (this.outboundStream) {\n      // End the stream without emitting a close event\n      await this.outboundStream.end()\n    }\n\n    this._rawOutboundStream = stream\n    this.outboundStream = pushable({\n      onEnd: (shouldEmit) => {\n        // close writable side of the stream\n        this._rawOutboundStream && this._rawOutboundStream.reset && this._rawOutboundStream.reset()\n        this._rawOutboundStream = null\n        this.outboundStream = null\n        if (shouldEmit) {\n          this.emit('close')\n        }\n      }\n    })\n\n    pipe(\n      this.outboundStream,\n      lp.encode(),\n      this._rawOutboundStream\n    ).catch(err => {\n      log.error(err)\n    })\n\n    // Only emit if the connection is new\n    if (!_prevStream) {\n      this.emit('stream:outbound')\n    }\n  }\n\n  /**\n   * Closes the open connection to peer\n   *\n   * @returns {void}\n   */\n  close () {\n    // End the outbound stream\n    if (this.outboundStream) {\n      this.outboundStream.end()\n    }\n    // End the inbound stream\n    if (this.inboundStream) {\n      this._inboundAbortController.abort()\n    }\n\n    this._rawOutboundStream = null\n    this.outboundStream = null\n    this._rawInboundStream = null\n    this.inboundStream = null\n    this.emit('close')\n  }\n}\n\nmodule.exports = PeerStreams\n"},"lineCount":205}},"error":null,"hash":"3c90d86e0e8b3c8c71a5db4448518783","cacheData":{"env":{}}}