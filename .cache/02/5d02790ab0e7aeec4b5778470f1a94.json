{"id":"../node_modules/ipfs-repo/src/blockstore-utils.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-repo/package.json","includedInParent":true,"mtime":1612441378235},{"name":"interface-datastore","loc":{"line":3,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-repo/src/blockstore-utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/interface-datastore/src/index.js"},{"name":"cids","loc":{"line":4,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-repo/src/blockstore-utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/cids/src/index.js"},{"name":"multibase","loc":{"line":5,"column":26},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-repo/src/blockstore-utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multibase/src/index.js"},{"name":"err-code","loc":{"line":6,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-repo/src/blockstore-utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/err-code/index.js"},{"name":"uint8arrays/to-string","loc":{"line":7,"column":35},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-repo/src/blockstore-utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/uint8arrays/to-string.js"}],"generated":{"js":"'use strict';\n\nconst {\n  Key\n} = require('interface-datastore');\n\nconst CID = require('cids');\n\nconst multibase = require('multibase');\n\nconst errcode = require('err-code');\n\nconst uint8ArrayToString = require('uint8arrays/to-string');\n/**\n * Transform a cid to the appropriate datastore key.\n *\n * @param {CID} cid\n * @returns {Key}\n */\n\n\nexports.cidToKey = cid => {\n  if (!CID.isCID(cid)) {\n    throw errcode(new Error('Not a valid cid'), 'ERR_INVALID_CID');\n  }\n\n  return new Key('/' + uint8ArrayToString(multibase.encode('base32', cid.multihash)).slice(1).toUpperCase(), false);\n};\n/**\n * Transform a datastore Key instance to a CID\n * As Key is a multihash of the CID, it is reconstructed using IPLD's RAW codec.\n * Hence it is highly probable that stored CID will differ from a CID retrieved from blockstore.\n *\n * @param {Key} key\n * @returns {CID}\n */\n\n\nexports.keyToCid = key => {\n  // Block key is of the form /<base32 encoded string>\n  return new CID(1, 'raw', multibase.decode('b' + key.toString().slice(1).toLowerCase()));\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":6},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":3,"column":6}},{"name":"Key","generated":{"line":4,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":3,"column":8}},{"name":"Key","generated":{"line":4,"column":2},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":3,"column":8}},{"generated":{"line":5,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":3,"column":6}},{"name":"require","generated":{"line":5,"column":4},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":3,"column":16}},{"generated":{"line":5,"column":11},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":3,"column":23}},{"generated":{"line":5,"column":12},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":3,"column":24}},{"generated":{"line":5,"column":33},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":3,"column":23}},{"generated":{"line":5,"column":34},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":3,"column":0}},{"generated":{"line":7,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":4,"column":0}},{"name":"CID","generated":{"line":7,"column":6},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":4,"column":6}},{"generated":{"line":7,"column":9},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":4,"column":9}},{"name":"require","generated":{"line":7,"column":12},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":4,"column":12}},{"generated":{"line":7,"column":19},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":4,"column":19}},{"generated":{"line":7,"column":20},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":4,"column":20}},{"generated":{"line":7,"column":26},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":4,"column":19}},{"generated":{"line":7,"column":27},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":4,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":5,"column":0}},{"name":"multibase","generated":{"line":9,"column":6},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":5,"column":6}},{"generated":{"line":9,"column":15},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":5,"column":15}},{"name":"require","generated":{"line":9,"column":18},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":5,"column":18}},{"generated":{"line":9,"column":25},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":5,"column":25}},{"generated":{"line":9,"column":26},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":5,"column":26}},{"generated":{"line":9,"column":37},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":5,"column":25}},{"generated":{"line":9,"column":38},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":5,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":6,"column":0}},{"name":"errcode","generated":{"line":11,"column":6},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":6,"column":6}},{"generated":{"line":11,"column":13},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":6,"column":13}},{"name":"require","generated":{"line":11,"column":16},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":6,"column":16}},{"generated":{"line":11,"column":23},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":6,"column":23}},{"generated":{"line":11,"column":24},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":6,"column":24}},{"generated":{"line":11,"column":34},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":6,"column":23}},{"generated":{"line":11,"column":35},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":7,"column":0}},{"name":"uint8ArrayToString","generated":{"line":13,"column":6},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":7,"column":6}},{"generated":{"line":13,"column":24},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":7,"column":24}},{"name":"require","generated":{"line":13,"column":27},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":7,"column":27}},{"generated":{"line":13,"column":34},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":7,"column":34}},{"generated":{"line":13,"column":35},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":7,"column":35}},{"generated":{"line":13,"column":58},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":7,"column":34}},{"generated":{"line":13,"column":59},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":9,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":10,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":11,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":12,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":13,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":14,"column":0}},{"name":"exports","generated":{"line":22,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":7},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":15,"column":7}},{"name":"cidToKey","generated":{"line":22,"column":8},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":15,"column":8}},{"generated":{"line":22,"column":16},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":15,"column":0}},{"name":"cid","generated":{"line":22,"column":19},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":15,"column":19}},{"generated":{"line":22,"column":22},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":15,"column":22}},{"generated":{"line":22,"column":26},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":15,"column":26}},{"generated":{"line":23,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":16,"column":2}},{"generated":{"line":23,"column":6},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":16,"column":6}},{"name":"CID","generated":{"line":23,"column":7},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":16,"column":7}},{"generated":{"line":23,"column":10},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":16,"column":10}},{"name":"isCID","generated":{"line":23,"column":11},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":16,"column":11}},{"generated":{"line":23,"column":16},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":16,"column":7}},{"name":"cid","generated":{"line":23,"column":17},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":16,"column":17}},{"generated":{"line":23,"column":20},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":16,"column":7}},{"generated":{"line":23,"column":21},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":16,"column":2}},{"generated":{"line":23,"column":23},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":16,"column":23}},{"generated":{"line":24,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":17,"column":4}},{"name":"errcode","generated":{"line":24,"column":10},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":17,"column":10}},{"generated":{"line":24,"column":17},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":17,"column":17}},{"generated":{"line":24,"column":18},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":17,"column":18}},{"name":"Error","generated":{"line":24,"column":22},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":17,"column":22}},{"generated":{"line":24,"column":27},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":17,"column":18}},{"generated":{"line":24,"column":28},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":17,"column":28}},{"generated":{"line":24,"column":45},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":17,"column":18}},{"generated":{"line":24,"column":46},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":17,"column":17}},{"generated":{"line":24,"column":48},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":17,"column":48}},{"generated":{"line":24,"column":65},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":17,"column":17}},{"generated":{"line":24,"column":66},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":17,"column":4}},{"generated":{"line":25,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":18,"column":3}},{"generated":{"line":27,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":2}},{"generated":{"line":27,"column":9},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":9}},{"name":"Key","generated":{"line":27,"column":13},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":13}},{"generated":{"line":27,"column":16},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":9}},{"generated":{"line":27,"column":17},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":17}},{"name":"uint8ArrayToString","generated":{"line":27,"column":23},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":23}},{"generated":{"line":27,"column":41},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":41}},{"name":"multibase","generated":{"line":27,"column":42},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":42}},{"generated":{"line":27,"column":51},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":51}},{"name":"encode","generated":{"line":27,"column":52},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":52}},{"generated":{"line":27,"column":58},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":42}},{"generated":{"line":27,"column":59},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":59}},{"generated":{"line":27,"column":67},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":42}},{"name":"cid","generated":{"line":27,"column":69},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":69}},{"generated":{"line":27,"column":72},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":72}},{"name":"multihash","generated":{"line":27,"column":73},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":73}},{"generated":{"line":27,"column":82},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":42}},{"generated":{"line":27,"column":83},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":41}},{"generated":{"line":27,"column":84},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":23}},{"name":"slice","generated":{"line":27,"column":85},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":85}},{"generated":{"line":27,"column":90},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":23}},{"generated":{"line":27,"column":91},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":91}},{"generated":{"line":27,"column":92},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":23}},{"name":"toUpperCase","generated":{"line":27,"column":94},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":94}},{"generated":{"line":27,"column":105},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":23}},{"generated":{"line":27,"column":107},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":9}},{"generated":{"line":27,"column":109},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":109}},{"generated":{"line":27,"column":114},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":9}},{"generated":{"line":27,"column":115},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":20,"column":2}},{"generated":{"line":28,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":21,"column":1}},{"generated":{"line":28,"column":1},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":15,"column":0}},{"generated":{"line":29,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":30,"column":0}},{"name":"exports","generated":{"line":39,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":31,"column":0}},{"generated":{"line":39,"column":7},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":31,"column":7}},{"name":"keyToCid","generated":{"line":39,"column":8},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":31,"column":8}},{"generated":{"line":39,"column":16},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":31,"column":0}},{"name":"key","generated":{"line":39,"column":19},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":31,"column":19}},{"generated":{"line":39,"column":22},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":31,"column":22}},{"generated":{"line":39,"column":26},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":31,"column":26}},{"generated":{"line":40,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":32,"column":2}},{"generated":{"line":41,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":2}},{"generated":{"line":41,"column":9},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":9}},{"name":"CID","generated":{"line":41,"column":13},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":13}},{"generated":{"line":41,"column":16},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":9}},{"generated":{"line":41,"column":17},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":17}},{"generated":{"line":41,"column":18},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":9}},{"generated":{"line":41,"column":20},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":20}},{"generated":{"line":41,"column":25},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":9}},{"name":"multibase","generated":{"line":41,"column":27},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":27}},{"generated":{"line":41,"column":36},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":36}},{"name":"decode","generated":{"line":41,"column":37},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":37}},{"generated":{"line":41,"column":43},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":27}},{"generated":{"line":41,"column":44},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":44}},{"name":"key","generated":{"line":41,"column":50},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":50}},{"generated":{"line":41,"column":53},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":53}},{"name":"toString","generated":{"line":41,"column":54},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":54}},{"generated":{"line":41,"column":62},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":50}},{"name":"slice","generated":{"line":41,"column":65},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":65}},{"generated":{"line":41,"column":70},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":50}},{"generated":{"line":41,"column":71},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":71}},{"generated":{"line":41,"column":72},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":50}},{"name":"toLowerCase","generated":{"line":41,"column":74},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":74}},{"generated":{"line":41,"column":85},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":50}},{"generated":{"line":41,"column":87},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":27}},{"generated":{"line":41,"column":88},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":9}},{"generated":{"line":41,"column":89},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":33,"column":2}},{"generated":{"line":42,"column":0},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":34,"column":1}},{"generated":{"line":42,"column":1},"source":"../node_modules/ipfs-repo/src/blockstore-utils.js","original":{"line":31,"column":0}}],"sources":{"../node_modules/ipfs-repo/src/blockstore-utils.js":"'use strict'\n\nconst { Key } = require('interface-datastore')\nconst CID = require('cids')\nconst multibase = require('multibase')\nconst errcode = require('err-code')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\n/**\n * Transform a cid to the appropriate datastore key.\n *\n * @param {CID} cid\n * @returns {Key}\n */\nexports.cidToKey = cid => {\n  if (!CID.isCID(cid)) {\n    throw errcode(new Error('Not a valid cid'), 'ERR_INVALID_CID')\n  }\n\n  return new Key('/' + uint8ArrayToString(multibase.encode('base32', cid.multihash)).slice(1).toUpperCase(), false)\n}\n\n/**\n * Transform a datastore Key instance to a CID\n * As Key is a multihash of the CID, it is reconstructed using IPLD's RAW codec.\n * Hence it is highly probable that stored CID will differ from a CID retrieved from blockstore.\n *\n * @param {Key} key\n * @returns {CID}\n */\nexports.keyToCid = key => {\n  // Block key is of the form /<base32 encoded string>\n  return new CID(1, 'raw', multibase.decode('b' + key.toString().slice(1).toLowerCase()))\n}\n"},"lineCount":null}},"error":null,"hash":"7d4da9abcb9a099694924e24bb5077ab","cacheData":{"env":{}}}