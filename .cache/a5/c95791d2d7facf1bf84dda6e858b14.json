{"id":"../node_modules/ipfs-core/src/components/dag/resolve.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"cids","loc":{"line":3,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dag/resolve.js","resolved":"/Users/michaljach/Sites/golf/node_modules/cids/src/index.js"},{"name":"ipfs-core-utils/src/with-timeout-option","loc":{"line":4,"column":34},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dag/resolve.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core-utils/src/with-timeout-option.js"},{"name":"ipfs-core-utils/src/to-cid-and-path","loc":{"line":5,"column":29},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dag/resolve.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core-utils/src/to-cid-and-path.js"}],"generated":{"js":"'use strict'\n\nconst CID = require('cids')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst toCidAndPath = require('ipfs-core-utils/src/to-cid-and-path')\n\n/**\n * @param {Object} config\n * @param {import('.').IPLD} config.ipld\n * @param {import('.').Preload} config.preload\n */\nmodule.exports = ({ ipld, preload }) => {\n  /**\n   * Returns the CID and remaining path of the node at the end of the passed IPFS path\n   *\n   * @param {CID|string} ipfsPath\n   * @param {ResolveOptions & AbortOptions} options\n   * @returns {Promise<ResolveResult>}\n   * @example\n   * ```JavaScript\n   * // example obj\n   * const obj = {\n   *   a: 1,\n   *   b: [1, 2, 3],\n   *   c: {\n   *     ca: [5, 6, 7],\n   *     cb: 'foo'\n   *   }\n   * }\n   *\n   * const cid = await ipfs.dag.put(obj, { format: 'dag-cbor', hashAlg: 'sha2-256' })\n   * console.log(cid.toString())\n   * // bafyreicyer3d34cutdzlsbe2nqu5ye62mesuhwkcnl2ypdwpccrsecfmjq\n   *\n   * const result = await ipfs.dag.resolve(`${cid}/c/cb`)\n   * console.log(result)\n   * // Logs:\n   * // {\n   * //   cid: CID(bafyreicyer3d34cutdzlsbe2nqu5ye62mesuhwkcnl2ypdwpccrsecfmjq),\n   * //   remainderPath: 'c/cb'\n   * // }\n   * ```\n   */\n  async function resolve (ipfsPath, options = {}) {\n    const {\n      cid,\n      path\n    } = toCidAndPath(ipfsPath)\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    if (path) {\n      options.path = path\n    }\n\n    let lastCid = cid\n    let lastRemainderPath = options.path || ''\n\n    if (lastRemainderPath.startsWith('/')) {\n      lastRemainderPath = lastRemainderPath.substring(1)\n    }\n\n    if (options.path) {\n      try {\n        for await (const { value, remainderPath } of ipld.resolve(cid, options.path, {\n          signal: options.signal\n        })) {\n          if (!CID.isCID(value)) {\n            break\n          }\n\n          lastRemainderPath = remainderPath\n          lastCid = value\n        }\n      } catch (err) {\n        // TODO: add error codes to IPLD\n        if (err.message.startsWith('Object has no property')) {\n          err.message = `no link named \"${lastRemainderPath.split('/')[0]}\" under ${lastCid}`\n          err.code = 'ERR_NO_LINK'\n        }\n        throw err\n      }\n    }\n\n    return {\n      cid: lastCid,\n      remainderPath: lastRemainderPath || ''\n    }\n  }\n\n  return withTimeoutOption(resolve)\n}\n\n/**\n * @typedef {Object} ResolveOptions\n * @property {string} [path] - If `ipfsPath` is a `CID`, you may pass a path here\n * @property {boolean} [preload]\n *\n * @typedef {Object} ResolveResult\n * @property {CID} cid - The last CID encountered during the traversal\n * @property {string} remainderPath - The path to the end of the IPFS path\n * inside the node referenced by the CID\n *\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/resolve.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/dag/resolve.js":"'use strict'\n\nconst CID = require('cids')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst toCidAndPath = require('ipfs-core-utils/src/to-cid-and-path')\n\n/**\n * @param {Object} config\n * @param {import('.').IPLD} config.ipld\n * @param {import('.').Preload} config.preload\n */\nmodule.exports = ({ ipld, preload }) => {\n  /**\n   * Returns the CID and remaining path of the node at the end of the passed IPFS path\n   *\n   * @param {CID|string} ipfsPath\n   * @param {ResolveOptions & AbortOptions} options\n   * @returns {Promise<ResolveResult>}\n   * @example\n   * ```JavaScript\n   * // example obj\n   * const obj = {\n   *   a: 1,\n   *   b: [1, 2, 3],\n   *   c: {\n   *     ca: [5, 6, 7],\n   *     cb: 'foo'\n   *   }\n   * }\n   *\n   * const cid = await ipfs.dag.put(obj, { format: 'dag-cbor', hashAlg: 'sha2-256' })\n   * console.log(cid.toString())\n   * // bafyreicyer3d34cutdzlsbe2nqu5ye62mesuhwkcnl2ypdwpccrsecfmjq\n   *\n   * const result = await ipfs.dag.resolve(`${cid}/c/cb`)\n   * console.log(result)\n   * // Logs:\n   * // {\n   * //   cid: CID(bafyreicyer3d34cutdzlsbe2nqu5ye62mesuhwkcnl2ypdwpccrsecfmjq),\n   * //   remainderPath: 'c/cb'\n   * // }\n   * ```\n   */\n  async function resolve (ipfsPath, options = {}) {\n    const {\n      cid,\n      path\n    } = toCidAndPath(ipfsPath)\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    if (path) {\n      options.path = path\n    }\n\n    let lastCid = cid\n    let lastRemainderPath = options.path || ''\n\n    if (lastRemainderPath.startsWith('/')) {\n      lastRemainderPath = lastRemainderPath.substring(1)\n    }\n\n    if (options.path) {\n      try {\n        for await (const { value, remainderPath } of ipld.resolve(cid, options.path, {\n          signal: options.signal\n        })) {\n          if (!CID.isCID(value)) {\n            break\n          }\n\n          lastRemainderPath = remainderPath\n          lastCid = value\n        }\n      } catch (err) {\n        // TODO: add error codes to IPLD\n        if (err.message.startsWith('Object has no property')) {\n          err.message = `no link named \"${lastRemainderPath.split('/')[0]}\" under ${lastCid}`\n          err.code = 'ERR_NO_LINK'\n        }\n        throw err\n      }\n    }\n\n    return {\n      cid: lastCid,\n      remainderPath: lastRemainderPath || ''\n    }\n  }\n\n  return withTimeoutOption(resolve)\n}\n\n/**\n * @typedef {Object} ResolveOptions\n * @property {string} [path] - If `ipfsPath` is a `CID`, you may pass a path here\n * @property {boolean} [preload]\n *\n * @typedef {Object} ResolveResult\n * @property {CID} cid - The last CID encountered during the traversal\n * @property {string} remainderPath - The path to the end of the IPFS path\n * inside the node referenced by the CID\n *\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"lineCount":108}},"error":null,"hash":"0762c4fb7e98b0026f59e35e88b02c14","cacheData":{"env":{}}}