{"id":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"ipld-dag-pb","loc":{"line":3,"column":28},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/patch/append-data.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipld-dag-pb/src/index.js"},{"name":"ipfs-core-utils/src/with-timeout-option","loc":{"line":4,"column":34},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/patch/append-data.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core-utils/src/with-timeout-option.js"},{"name":"uint8arrays/concat","loc":{"line":5,"column":33},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/patch/append-data.js","resolved":"/Users/michaljach/Sites/golf/node_modules/uint8arrays/concat.js"},{"name":"../get","loc":{"line":14,"column":22},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/patch/append-data.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/get.js"},{"name":"../put","loc":{"line":15,"column":22},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/patch/append-data.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/put.js"}],"generated":{"js":"'use strict'\n\nconst { DAGNode } = require('ipld-dag-pb')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst uint8ArrayConcat = require('uint8arrays/concat')\n\n/**\n * @param {Object} config\n * @param {import('.').IPLD} config.ipld\n * @param {import('.').Preload} config.preload\n * @param {import('.').GCLock} config.gcLock\n */\nmodule.exports = ({ ipld, gcLock, preload }) => {\n  const get = require('../get')({ ipld, preload })\n  const put = require('../put')({ ipld, gcLock, preload })\n  async function appendData (multihash, data, options) {\n    const node = await get(multihash, options)\n    const newData = uint8ArrayConcat([node.Data, data])\n    return put(new DAGNode(newData, node.Links), options)\n  }\n\n  return withTimeoutOption(appendData)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/patch/append-data.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/object/patch/append-data.js":"'use strict'\n\nconst { DAGNode } = require('ipld-dag-pb')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst uint8ArrayConcat = require('uint8arrays/concat')\n\n/**\n * @param {Object} config\n * @param {import('.').IPLD} config.ipld\n * @param {import('.').Preload} config.preload\n * @param {import('.').GCLock} config.gcLock\n */\nmodule.exports = ({ ipld, gcLock, preload }) => {\n  const get = require('../get')({ ipld, preload })\n  const put = require('../put')({ ipld, gcLock, preload })\n  async function appendData (multihash, data, options) {\n    const node = await get(multihash, options)\n    const newData = uint8ArrayConcat([node.Data, data])\n    return put(new DAGNode(newData, node.Links), options)\n  }\n\n  return withTimeoutOption(appendData)\n}\n"},"lineCount":24}},"error":null,"hash":"21ed720d57f3966d7892ae7c074ef083","cacheData":{"env":{}}}