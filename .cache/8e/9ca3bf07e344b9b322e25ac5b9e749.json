{"id":"../node_modules/ipfs-core/src/components/dns.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"../runtime/dns-nodejs","loc":{"line":4,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dns.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/runtime/dns-browser.js"},{"name":"ipfs-core-utils/src/with-timeout-option","loc":{"line":5,"column":34},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dns.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core-utils/src/with-timeout-option.js"}],"generated":{"js":"'use strict'\n\n// dns-nodejs gets replaced by dns-browser when webpacked/browserified\nconst dns = require('../runtime/dns-nodejs')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {string} domain\n * @returns {string}\n */\nfunction fqdnFixups (domain) {\n  // Allow resolution of .eth names via .eth.link\n  // More context at the go-ipfs counterpart: https://github.com/ipfs/go-ipfs/pull/6448\n  if (domain.endsWith('.eth')) {\n    domain = domain.replace(/.eth$/, '.eth.link')\n  }\n  return domain\n}\n\nmodule.exports = () => {\n  /**\n   * Resolve DNS links\n   *\n   * @param {string} domain\n   * @param {DNSOptions} [options]\n   * @returns {Promise<string>}\n   */\n  const resolveDNS = async (domain, options = {}) => { // eslint-disable-line require-await\n    if (typeof domain !== 'string') {\n      throw new Error('Invalid arguments, domain must be a string')\n    }\n\n    domain = fqdnFixups(domain)\n\n    return dns(domain, options)\n  }\n\n  return withTimeoutOption(resolveDNS)\n}\n\n/**\n * @typedef {DNSSettings & AbortOptions} DNSOptions\n *\n * @typedef {Object} DNSSettings\n * @property {boolean} [recursive=true] - Resolve until result is not a domain name\n *\n * @typedef {import('../utils').AbortOptions} AbortOptions\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dns.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/dns.js":"'use strict'\n\n// dns-nodejs gets replaced by dns-browser when webpacked/browserified\nconst dns = require('../runtime/dns-nodejs')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {string} domain\n * @returns {string}\n */\nfunction fqdnFixups (domain) {\n  // Allow resolution of .eth names via .eth.link\n  // More context at the go-ipfs counterpart: https://github.com/ipfs/go-ipfs/pull/6448\n  if (domain.endsWith('.eth')) {\n    domain = domain.replace(/.eth$/, '.eth.link')\n  }\n  return domain\n}\n\nmodule.exports = () => {\n  /**\n   * Resolve DNS links\n   *\n   * @param {string} domain\n   * @param {DNSOptions} [options]\n   * @returns {Promise<string>}\n   */\n  const resolveDNS = async (domain, options = {}) => { // eslint-disable-line require-await\n    if (typeof domain !== 'string') {\n      throw new Error('Invalid arguments, domain must be a string')\n    }\n\n    domain = fqdnFixups(domain)\n\n    return dns(domain, options)\n  }\n\n  return withTimeoutOption(resolveDNS)\n}\n\n/**\n * @typedef {DNSSettings & AbortOptions} DNSOptions\n *\n * @typedef {Object} DNSSettings\n * @property {boolean} [recursive=true] - Resolve until result is not a domain name\n *\n * @typedef {import('../utils').AbortOptions} AbortOptions\n */\n"},"lineCount":49}},"error":null,"hash":"029dc14feb78ce55277df333074deb8a","cacheData":{"env":{}}}