{"id":"../node_modules/ipfs-core/src/components/storage.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"debug","loc":{"line":3,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/storage.js","resolved":"/Users/michaljach/Sites/golf/node_modules/debug/src/browser.js"},{"name":"../runtime/repo-nodejs","loc":{"line":4,"column":27},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/storage.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/runtime/repo-browser.js"},{"name":"../runtime/config-nodejs","loc":{"line":5,"column":33},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/storage.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/runtime/config-browser.js"},{"name":"ipfs-repo","loc":{"line":6,"column":45},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/storage.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-repo/src/index.js"},{"name":"uint8arrays/from-string","loc":{"line":7,"column":37},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/storage.js","resolved":"/Users/michaljach/Sites/golf/node_modules/uint8arrays/from-string.js"},{"name":"uint8arrays/to-string","loc":{"line":8,"column":35},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/storage.js","resolved":"/Users/michaljach/Sites/golf/node_modules/uint8arrays/to-string.js"},{"name":"peer-id","loc":{"line":9,"column":23},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/storage.js","resolved":"/Users/michaljach/Sites/golf/node_modules/peer-id/src/index.js"},{"name":"../utils","loc":{"line":10,"column":33},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/storage.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/utils.js"},{"name":"./config","loc":{"line":11,"column":30},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/storage.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/config.js"},{"name":"../errors","loc":{"line":12,"column":36},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/storage.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/errors.js"},{"name":"./libp2p","loc":{"line":13,"column":29},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/storage.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/libp2p.js"}],"generated":{"js":"'use strict'\n\nconst log = require('debug')('ipfs:components:peer:storage')\nconst createRepo = require('../runtime/repo-nodejs')\nconst getDefaultConfig = require('../runtime/config-nodejs')\nconst { ERR_REPO_NOT_INITIALIZED } = require('ipfs-repo').errors\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst PeerId = require('peer-id')\nconst { mergeOptions } = require('../utils')\nconst configService = require('./config')\nconst { NotEnabledError } = require('../errors')\nconst createLibP2P = require('./libp2p')\n\nclass Storage {\n  /**\n   * @private\n   * @param {PeerId} peerId\n   * @param {Keychain} keychain\n   * @param {Repo} repo\n   * @param {Print} print\n   * @param {boolean} isNew\n   */\n  constructor (peerId, keychain, repo, print, isNew) {\n    this.print = print\n    this.peerId = peerId\n    this.keychain = keychain\n    this.repo = repo\n    this.print = print\n    this.isNew = isNew\n  }\n\n  /**\n   *\n   * @param {Options} options\n   */\n  static async start (options) {\n    const { repoAutoMigrate: autoMigrate, repo: inputRepo, print, silent } = options\n\n    const repo = (typeof inputRepo === 'string' || inputRepo == null)\n      ? createRepo({ path: inputRepo, autoMigrate, silent })\n      : inputRepo\n\n    const { peerId, keychain, isNew } = await loadRepo(repo, options)\n\n    // TODO: throw error?\n    // @ts-ignore On start, keychain will always be available\n    return new Storage(peerId, keychain, repo, print, isNew)\n  }\n}\nmodule.exports = Storage\n\n/**\n *\n * @param {Repo} repo\n * @param {RepoOptions & InitOptions} options\n * @returns {Promise<{peerId: PeerId, keychain?: Keychain, isNew:boolean }>}\n */\nconst loadRepo = async (repo, options) => {\n  const openError = await openRepo(repo)\n  if (openError == null) {\n    // If opened successfully configure repo\n    return { ...await configureRepo(repo, options), isNew: false }\n  } else if (openError.code === ERR_REPO_NOT_INITIALIZED) {\n    if (options.allowNew === false) {\n      throw new NotEnabledError('Initialization of new repos disabled by config, pass `config.init.isNew: true` to enable it')\n    } else {\n      // If failed to open, because repo isn't initilaized and initalizing a\n      // new repo allowed, init repo:\n      return { ...await initRepo(repo, options), isNew: true }\n    }\n  } else {\n    throw openError\n  }\n}\n\n/**\n * Attempts to open given repo unless it is already open and returns result\n * containing repo or an error if failed.\n *\n * @param {Repo} repo\n * @returns {Promise<(Error & { code: number }) | null>}\n */\nconst openRepo = async (repo) => {\n  // If repo is closed attempt to open it.\n  if (repo.closed) {\n    try {\n      await repo.open()\n      return null\n    } catch (error) {\n      return error\n    }\n  } else {\n    return null\n  }\n}\n\n/**\n * @param {Repo} repo\n * @param {RepoOptions & InitOptions} options\n * @returns {Promise<{peerId: PeerId, keychain?: Keychain}>}\n */\nconst initRepo = async (repo, options) => {\n  // 1. Verify that repo does not exist yet (if it does and we could not\n  // open it we give up)\n  const exists = await repo.exists()\n  log('repo exists?', exists)\n\n  if (exists === true) {\n    throw new Error('repo already exists')\n  }\n\n  // 2. Restore `peerId` from a given `.privateKey` or init new using\n  // provide options.\n  const peerId = options.privateKey\n    ? await decodePeerId(options.privateKey)\n    : await initPeerId(options)\n\n  const identity = peerIdToIdentity(peerId)\n\n  log('peer identity: %s', identity.PeerID)\n\n  // 3. Init new repo with provided `.config` and restored / initalized\n  // peerd identity.\n  const config = {\n    ...mergeOptions(applyProfiles(getDefaultConfig(), options.profiles), options.config),\n    Identity: identity\n  }\n  await repo.init(config)\n\n  // 4. Open initalized repo.\n  await repo.open()\n\n  log('repo opened')\n\n  // Create libp2p for Keychain creation\n  const libp2p = createLibP2P({\n    options: undefined,\n    multiaddrs: undefined,\n    peerId,\n    repo,\n    config,\n    keychainConfig: {\n      pass: options.pass\n    }\n  })\n\n  if (libp2p.keychain && libp2p.keychain.opts) {\n    await libp2p.loadKeychain()\n\n    await repo.config.set('Keychain', {\n      dek: libp2p.keychain.opts.dek\n    })\n  }\n\n  return { peerId, keychain: libp2p.keychain }\n}\n\n/**\n * Takes `peerId` either represented as a string serialized string or\n * an instance and returns a `PeerId` instance.\n *\n * @param {PeerId|string} peerId\n * @returns {Promise<PeerId>|PeerId}\n */\nconst decodePeerId = (peerId) => {\n  log('using user-supplied private-key')\n  return typeof peerId === 'object'\n    ? peerId\n    : PeerId.createFromPrivKey(uint8ArrayFromString(peerId, 'base64pad'))\n}\n\n/**\n * Initializes new PeerId by generting an underlying keypair.\n *\n * @param {Object} options\n * @param {KeyType} [options.algorithm='RSA']\n * @param {number} [options.bits=2048]\n * @param {Print} options.print\n * @returns {Promise<PeerId>}\n */\nconst initPeerId = ({ print, algorithm = 'RSA', bits = 2048 }) => {\n  // Generate peer identity keypair + transform to desired format + add to config.\n  print('generating %s-bit (rsa only) %s keypair...', bits, algorithm)\n  return PeerId.create({ keyType: algorithm, bits })\n}\n\n/**\n * @param {PeerId} peerId\n */\nconst peerIdToIdentity = (peerId) => ({\n  PeerID: peerId.toB58String(),\n  /** @type {string} */\n  PrivKey: uint8ArrayToString(peerId.privKey.bytes, 'base64pad')\n})\n\n/**\n * Applies passed `profiles` and a `config`  to an open repo.\n *\n * @param {Repo} repo\n * @param {ConfigureOptions} options\n * @returns {Promise<{peerId: PeerId, keychain?: Keychain}>}\n */\nconst configureRepo = async (repo, { config, profiles, pass }) => {\n  const original = await repo.config.getAll()\n  const changed = mergeConfigs(applyProfiles(original, profiles), config)\n\n  if (original !== changed) {\n    await repo.config.replace(changed)\n  }\n\n  // @ts-ignore - Identity may not be present\n  const peerId = await PeerId.createFromPrivKey(changed.Identity.PrivKey)\n  const libp2p = createLibP2P({\n    options: undefined,\n    multiaddrs: undefined,\n    peerId,\n    repo,\n    config: changed,\n    keychainConfig: {\n      pass,\n      ...changed.Keychain\n    }\n  })\n\n  if (libp2p.keychain) {\n    await libp2p.loadKeychain()\n  }\n\n  return { peerId, keychain: libp2p.keychain }\n}\n\n/**\n * @param {IPFSConfig} config\n * @param {Partial<IPFSConfig>} [changes]\n */\nconst mergeConfigs = (config, changes) =>\n  changes ? mergeOptions(config, changes) : config\n\n/**\n * Apply profiles (e.g. ['server', 'lowpower']) to config\n *\n * @param {IPFSConfig} config\n * @param {string[]} [profiles]\n */\nconst applyProfiles = (config, profiles) => {\n  return (profiles || []).reduce((config, name) => {\n    const profile = configService.profiles[name]\n    if (!profile) {\n      throw new Error(`Could not find profile with name '${name}'`)\n    }\n    log('applying profile %s', name)\n    return profile.transform(config)\n  }, config)\n}\n\n/**\n * @typedef {StorageOptions & RepoOptions & InitOptions} Options\n *\n * @typedef {Object} StorageOptions\n * @property {Repo|string} [repo='~/.jsipfs'] - The file path at which to store the\n * IPFS node’s data. Alternatively, you can set up a customized storage system\n * by providing an Repo implementation. (In browser default is 'ipfs').\n * @property {boolean} [repoAutoMigrate=true] - js-ipfs comes bundled with a tool\n * that automatically migrates your IPFS repository when a new version is\n * available.\n * @property {boolean} [repoOwner]\n * @property {IPLDOptions} [ipld]\n *\n *\n * @typedef {Object} RepoOptions\n * @property {Print} print\n * @property {IPFSConfig} [config]\n * @property {boolean} [silent]\n *\n * @typedef {Object} ConfigureOptions\n * @property {IPFSConfig} [options.config]\n * @property {string[]} [options.profiles]\n * @property {string} [options.pass]\n *\n * @typedef {Object} InitOptions - On Frist run js-ipfs will initalize a repo\n * which can be customized through this settings.\n * @property {boolean} [emptyRepo=false] - Whether to remove built-in assets,\n * like the instructional tour and empty mutable file system, from the repo.\n * @property {KeyType} [algorithm='RSA'] - The type of key to use.\n * @property {number} [bits=2048] - Number of bits to use in the generated key\n * pair (rsa only).\n * @property {PeerId|string} [privateKey] - A pre-generated private key to use.\n * **NOTE: This overrides `bits`.**\n * @property {string} [pass] - A passphrase to encrypt keys. You should\n * generally use the top-level `pass` option instead of the `init.pass`\n * option (this one will take its value from the top-level option if not set).\n * @property {string[]} [profiles] - Apply profile settings to config.\n * @property {boolean} [allowNew=true] - Set to `false` to disallow\n * initialization if the repo does not already exist.\n *\n * @typedef {import('.').IPLDOptions} IPLDOptions\n * @typedef {import('.').Print} Print\n * @typedef {import('.').IPFSConfig} IPFSConfig\n * @typedef {import('ipfs-core-types/src/repo').Repo<IPFSConfig>} Repo\n * @typedef {import('libp2p-crypto').KeyType} KeyType\n * @typedef {import('libp2p/src/keychain')} Keychain\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/ipfs-core/src/components/storage.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/storage.js":"'use strict'\n\nconst log = require('debug')('ipfs:components:peer:storage')\nconst createRepo = require('../runtime/repo-nodejs')\nconst getDefaultConfig = require('../runtime/config-nodejs')\nconst { ERR_REPO_NOT_INITIALIZED } = require('ipfs-repo').errors\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst PeerId = require('peer-id')\nconst { mergeOptions } = require('../utils')\nconst configService = require('./config')\nconst { NotEnabledError } = require('../errors')\nconst createLibP2P = require('./libp2p')\n\nclass Storage {\n  /**\n   * @private\n   * @param {PeerId} peerId\n   * @param {Keychain} keychain\n   * @param {Repo} repo\n   * @param {Print} print\n   * @param {boolean} isNew\n   */\n  constructor (peerId, keychain, repo, print, isNew) {\n    this.print = print\n    this.peerId = peerId\n    this.keychain = keychain\n    this.repo = repo\n    this.print = print\n    this.isNew = isNew\n  }\n\n  /**\n   *\n   * @param {Options} options\n   */\n  static async start (options) {\n    const { repoAutoMigrate: autoMigrate, repo: inputRepo, print, silent } = options\n\n    const repo = (typeof inputRepo === 'string' || inputRepo == null)\n      ? createRepo({ path: inputRepo, autoMigrate, silent })\n      : inputRepo\n\n    const { peerId, keychain, isNew } = await loadRepo(repo, options)\n\n    // TODO: throw error?\n    // @ts-ignore On start, keychain will always be available\n    return new Storage(peerId, keychain, repo, print, isNew)\n  }\n}\nmodule.exports = Storage\n\n/**\n *\n * @param {Repo} repo\n * @param {RepoOptions & InitOptions} options\n * @returns {Promise<{peerId: PeerId, keychain?: Keychain, isNew:boolean }>}\n */\nconst loadRepo = async (repo, options) => {\n  const openError = await openRepo(repo)\n  if (openError == null) {\n    // If opened successfully configure repo\n    return { ...await configureRepo(repo, options), isNew: false }\n  } else if (openError.code === ERR_REPO_NOT_INITIALIZED) {\n    if (options.allowNew === false) {\n      throw new NotEnabledError('Initialization of new repos disabled by config, pass `config.init.isNew: true` to enable it')\n    } else {\n      // If failed to open, because repo isn't initilaized and initalizing a\n      // new repo allowed, init repo:\n      return { ...await initRepo(repo, options), isNew: true }\n    }\n  } else {\n    throw openError\n  }\n}\n\n/**\n * Attempts to open given repo unless it is already open and returns result\n * containing repo or an error if failed.\n *\n * @param {Repo} repo\n * @returns {Promise<(Error & { code: number }) | null>}\n */\nconst openRepo = async (repo) => {\n  // If repo is closed attempt to open it.\n  if (repo.closed) {\n    try {\n      await repo.open()\n      return null\n    } catch (error) {\n      return error\n    }\n  } else {\n    return null\n  }\n}\n\n/**\n * @param {Repo} repo\n * @param {RepoOptions & InitOptions} options\n * @returns {Promise<{peerId: PeerId, keychain?: Keychain}>}\n */\nconst initRepo = async (repo, options) => {\n  // 1. Verify that repo does not exist yet (if it does and we could not\n  // open it we give up)\n  const exists = await repo.exists()\n  log('repo exists?', exists)\n\n  if (exists === true) {\n    throw new Error('repo already exists')\n  }\n\n  // 2. Restore `peerId` from a given `.privateKey` or init new using\n  // provide options.\n  const peerId = options.privateKey\n    ? await decodePeerId(options.privateKey)\n    : await initPeerId(options)\n\n  const identity = peerIdToIdentity(peerId)\n\n  log('peer identity: %s', identity.PeerID)\n\n  // 3. Init new repo with provided `.config` and restored / initalized\n  // peerd identity.\n  const config = {\n    ...mergeOptions(applyProfiles(getDefaultConfig(), options.profiles), options.config),\n    Identity: identity\n  }\n  await repo.init(config)\n\n  // 4. Open initalized repo.\n  await repo.open()\n\n  log('repo opened')\n\n  // Create libp2p for Keychain creation\n  const libp2p = createLibP2P({\n    options: undefined,\n    multiaddrs: undefined,\n    peerId,\n    repo,\n    config,\n    keychainConfig: {\n      pass: options.pass\n    }\n  })\n\n  if (libp2p.keychain && libp2p.keychain.opts) {\n    await libp2p.loadKeychain()\n\n    await repo.config.set('Keychain', {\n      dek: libp2p.keychain.opts.dek\n    })\n  }\n\n  return { peerId, keychain: libp2p.keychain }\n}\n\n/**\n * Takes `peerId` either represented as a string serialized string or\n * an instance and returns a `PeerId` instance.\n *\n * @param {PeerId|string} peerId\n * @returns {Promise<PeerId>|PeerId}\n */\nconst decodePeerId = (peerId) => {\n  log('using user-supplied private-key')\n  return typeof peerId === 'object'\n    ? peerId\n    : PeerId.createFromPrivKey(uint8ArrayFromString(peerId, 'base64pad'))\n}\n\n/**\n * Initializes new PeerId by generting an underlying keypair.\n *\n * @param {Object} options\n * @param {KeyType} [options.algorithm='RSA']\n * @param {number} [options.bits=2048]\n * @param {Print} options.print\n * @returns {Promise<PeerId>}\n */\nconst initPeerId = ({ print, algorithm = 'RSA', bits = 2048 }) => {\n  // Generate peer identity keypair + transform to desired format + add to config.\n  print('generating %s-bit (rsa only) %s keypair...', bits, algorithm)\n  return PeerId.create({ keyType: algorithm, bits })\n}\n\n/**\n * @param {PeerId} peerId\n */\nconst peerIdToIdentity = (peerId) => ({\n  PeerID: peerId.toB58String(),\n  /** @type {string} */\n  PrivKey: uint8ArrayToString(peerId.privKey.bytes, 'base64pad')\n})\n\n/**\n * Applies passed `profiles` and a `config`  to an open repo.\n *\n * @param {Repo} repo\n * @param {ConfigureOptions} options\n * @returns {Promise<{peerId: PeerId, keychain?: Keychain}>}\n */\nconst configureRepo = async (repo, { config, profiles, pass }) => {\n  const original = await repo.config.getAll()\n  const changed = mergeConfigs(applyProfiles(original, profiles), config)\n\n  if (original !== changed) {\n    await repo.config.replace(changed)\n  }\n\n  // @ts-ignore - Identity may not be present\n  const peerId = await PeerId.createFromPrivKey(changed.Identity.PrivKey)\n  const libp2p = createLibP2P({\n    options: undefined,\n    multiaddrs: undefined,\n    peerId,\n    repo,\n    config: changed,\n    keychainConfig: {\n      pass,\n      ...changed.Keychain\n    }\n  })\n\n  if (libp2p.keychain) {\n    await libp2p.loadKeychain()\n  }\n\n  return { peerId, keychain: libp2p.keychain }\n}\n\n/**\n * @param {IPFSConfig} config\n * @param {Partial<IPFSConfig>} [changes]\n */\nconst mergeConfigs = (config, changes) =>\n  changes ? mergeOptions(config, changes) : config\n\n/**\n * Apply profiles (e.g. ['server', 'lowpower']) to config\n *\n * @param {IPFSConfig} config\n * @param {string[]} [profiles]\n */\nconst applyProfiles = (config, profiles) => {\n  return (profiles || []).reduce((config, name) => {\n    const profile = configService.profiles[name]\n    if (!profile) {\n      throw new Error(`Could not find profile with name '${name}'`)\n    }\n    log('applying profile %s', name)\n    return profile.transform(config)\n  }, config)\n}\n\n/**\n * @typedef {StorageOptions & RepoOptions & InitOptions} Options\n *\n * @typedef {Object} StorageOptions\n * @property {Repo|string} [repo='~/.jsipfs'] - The file path at which to store the\n * IPFS node’s data. Alternatively, you can set up a customized storage system\n * by providing an Repo implementation. (In browser default is 'ipfs').\n * @property {boolean} [repoAutoMigrate=true] - js-ipfs comes bundled with a tool\n * that automatically migrates your IPFS repository when a new version is\n * available.\n * @property {boolean} [repoOwner]\n * @property {IPLDOptions} [ipld]\n *\n *\n * @typedef {Object} RepoOptions\n * @property {Print} print\n * @property {IPFSConfig} [config]\n * @property {boolean} [silent]\n *\n * @typedef {Object} ConfigureOptions\n * @property {IPFSConfig} [options.config]\n * @property {string[]} [options.profiles]\n * @property {string} [options.pass]\n *\n * @typedef {Object} InitOptions - On Frist run js-ipfs will initalize a repo\n * which can be customized through this settings.\n * @property {boolean} [emptyRepo=false] - Whether to remove built-in assets,\n * like the instructional tour and empty mutable file system, from the repo.\n * @property {KeyType} [algorithm='RSA'] - The type of key to use.\n * @property {number} [bits=2048] - Number of bits to use in the generated key\n * pair (rsa only).\n * @property {PeerId|string} [privateKey] - A pre-generated private key to use.\n * **NOTE: This overrides `bits`.**\n * @property {string} [pass] - A passphrase to encrypt keys. You should\n * generally use the top-level `pass` option instead of the `init.pass`\n * option (this one will take its value from the top-level option if not set).\n * @property {string[]} [profiles] - Apply profile settings to config.\n * @property {boolean} [allowNew=true] - Set to `false` to disallow\n * initialization if the repo does not already exist.\n *\n * @typedef {import('.').IPLDOptions} IPLDOptions\n * @typedef {import('.').Print} Print\n * @typedef {import('.').IPFSConfig} IPFSConfig\n * @typedef {import('ipfs-core-types/src/repo').Repo<IPFSConfig>} Repo\n * @typedef {import('libp2p-crypto').KeyType} KeyType\n * @typedef {import('libp2p/src/keychain')} Keychain\n */\n"},"lineCount":304}},"error":null,"hash":"353cbc2d7fc0a20a0e08f0dbed8016d7","cacheData":{"env":{}}}