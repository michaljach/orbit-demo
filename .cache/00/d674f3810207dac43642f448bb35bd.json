{"id":"../node_modules/ipfs-core/src/components/object/new.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"ipld-dag-pb","loc":{"line":3,"column":22},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/new.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipld-dag-pb/src/index.js"},{"name":"multicodec","loc":{"line":5,"column":27},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/new.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multicodec/src/index.js"},{"name":"ipfs-unixfs","loc":{"line":6,"column":23},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/new.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-unixfs/src/index.js"},{"name":"ipfs-core-utils/src/with-timeout-option","loc":{"line":7,"column":34},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/object/new.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core-utils/src/with-timeout-option.js"}],"generated":{"js":"'use strict'\n\nconst dagPB = require('ipld-dag-pb')\nconst DAGNode = dagPB.DAGNode\nconst multicodec = require('multicodec')\nconst Unixfs = require('ipfs-unixfs')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('.').IPLD} config.ipld\n * @param {import('.').Preload} config.preload\n */\nmodule.exports = ({ ipld, preload }) => {\n  /**\n   *\n   * @param {NewOptions & AbortOptions} options\n   * @returns {Promise<CID>}\n   */\n  async function _new (options = {}) {\n    let data\n\n    if (options.template) {\n      if (options.template === 'unixfs-dir') {\n        data = (new Unixfs('directory')).marshal()\n      } else {\n        throw new Error('unknown template')\n      }\n    } else {\n      data = new Uint8Array(0)\n    }\n\n    const node = new DAGNode(data)\n\n    const cid = await ipld.put(node, multicodec.DAG_PB, {\n      cidVersion: 0,\n      hashAlg: multicodec.SHA2_256,\n      signal: options.signal\n    })\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    return cid\n  }\n\n  return withTimeoutOption(_new)\n}\n\n/**\n * @typedef {Object} NewOptions\n * @property {string} [template]\n * @property {boolean} [recursive]\n * @property {boolean} [nocache]\n * @property {boolean} [preload]\n * @property {string} [enc]\n *\n * @typedef {import('.').CID} CID\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/object/new.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/object/new.js":"'use strict'\n\nconst dagPB = require('ipld-dag-pb')\nconst DAGNode = dagPB.DAGNode\nconst multicodec = require('multicodec')\nconst Unixfs = require('ipfs-unixfs')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('.').IPLD} config.ipld\n * @param {import('.').Preload} config.preload\n */\nmodule.exports = ({ ipld, preload }) => {\n  /**\n   *\n   * @param {NewOptions & AbortOptions} options\n   * @returns {Promise<CID>}\n   */\n  async function _new (options = {}) {\n    let data\n\n    if (options.template) {\n      if (options.template === 'unixfs-dir') {\n        data = (new Unixfs('directory')).marshal()\n      } else {\n        throw new Error('unknown template')\n      }\n    } else {\n      data = new Uint8Array(0)\n    }\n\n    const node = new DAGNode(data)\n\n    const cid = await ipld.put(node, multicodec.DAG_PB, {\n      cidVersion: 0,\n      hashAlg: multicodec.SHA2_256,\n      signal: options.signal\n    })\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    return cid\n  }\n\n  return withTimeoutOption(_new)\n}\n\n/**\n * @typedef {Object} NewOptions\n * @property {string} [template]\n * @property {boolean} [recursive]\n * @property {boolean} [nocache]\n * @property {boolean} [preload]\n * @property {string} [enc]\n *\n * @typedef {import('.').CID} CID\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"lineCount":62}},"error":null,"hash":"0f190c4822a59550c09f123b24041da6","cacheData":{"env":{}}}