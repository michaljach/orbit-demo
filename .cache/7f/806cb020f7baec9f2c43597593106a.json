{"id":"../node_modules/ipfs-core/src/components/gc-lock.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"mortice","loc":{"line":3,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/gc-lock.js","resolved":"/Users/michaljach/Sites/golf/node_modules/mortice/lib/index.js"}],"generated":{"js":"'use strict'\n\nconst mortice = require('mortice')\n\n/**\n * @param {Object} config\n * @param {string} config.path\n * @param {boolean} [config.repoOwner]\n * @returns {GCLock}\n */\nmodule.exports = ({ path, repoOwner }) =>\n  mortice(path, {\n    singleProcess: repoOwner !== false\n  })\n\n/**\n * @typedef {RWLock} GCLock\n *\n * @typedef {Object} RWLock\n * @property {() => Promise<Lock>} readLock\n * @property {() => Promise<Lock>} writeLock\n *\n * @typedef {() => void} Lock\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/gc-lock.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/gc-lock.js":"'use strict'\n\nconst mortice = require('mortice')\n\n/**\n * @param {Object} config\n * @param {string} config.path\n * @param {boolean} [config.repoOwner]\n * @returns {GCLock}\n */\nmodule.exports = ({ path, repoOwner }) =>\n  mortice(path, {\n    singleProcess: repoOwner !== false\n  })\n\n/**\n * @typedef {RWLock} GCLock\n *\n * @typedef {Object} RWLock\n * @property {() => Promise<Lock>} readLock\n * @property {() => Promise<Lock>} writeLock\n *\n * @typedef {() => void} Lock\n */\n"},"lineCount":25}},"error":null,"hash":"966bb646fb316b788ad6eb5ded66ea03","cacheData":{"env":{}}}