{"id":"../node_modules/ipfs-core/src/components/libp2p.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"dlv","loc":{"line":3,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/libp2p.js","resolved":"/Users/michaljach/Sites/golf/node_modules/dlv/dist/dlv.umd.js"},{"name":"merge-options","loc":{"line":4,"column":29},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/libp2p.js","resolved":"/Users/michaljach/Sites/golf/node_modules/merge-options/index.js"},{"name":"err-code","loc":{"line":5,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/libp2p.js","resolved":"/Users/michaljach/Sites/golf/node_modules/err-code/index.js"},{"name":"../runtime/libp2p-pubsub-routers-nodejs","loc":{"line":6,"column":30},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/libp2p.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/runtime/libp2p-pubsub-routers-browser.js"},{"name":"libp2p","loc":{"line":43,"column":25},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/libp2p.js","resolved":"/Users/michaljach/Sites/golf/node_modules/libp2p/src/index.js"},{"name":"../runtime/libp2p-nodejs","loc":{"line":142,"column":38},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/libp2p.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/runtime/libp2p-browser.js"},{"name":"libp2p-bootstrap","loc":{"line":161,"column":52},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/libp2p.js","resolved":"/Users/michaljach/Sites/golf/node_modules/libp2p-bootstrap/src/index.js"}],"generated":{"js":"'use strict'\n\nconst get = require('dlv')\nconst mergeOptions = require('merge-options')\nconst errCode = require('err-code')\nconst PubsubRouters = require('../runtime/libp2p-pubsub-routers-nodejs')\n\n/**\n * @param {Object} config\n * @param {Repo} config.repo\n * @param {IPFSOptions|undefined} config.options\n * @param {PeerId} config.peerId\n * @param {Multiaddr[]|undefined} config.multiaddrs\n * @param {KeychainConfig|undefined} config.keychainConfig\n * @param {Partial<IPFSConfig>|undefined} config.config\n * @returns {LibP2P}\n */\nmodule.exports = ({\n  options = {},\n  peerId,\n  multiaddrs = [],\n  repo,\n  keychainConfig = {},\n  config = {}\n}) => {\n  const { datastore, keys } = repo\n\n  const libp2pOptions = getLibp2pOptions({\n    options,\n    config,\n    datastore,\n    keys,\n    keychainConfig,\n    peerId,\n    multiaddrs\n  })\n\n  if (typeof options.libp2p === 'function') {\n    return options.libp2p({ libp2pOptions, options, config, datastore, peerId })\n  }\n\n  // Required inline to reduce startup time\n  const Libp2p = require('libp2p')\n\n  return new Libp2p(libp2pOptions)\n}\n\n/**\n * @param {Object} input\n * @param {IPFSOptions} input.options\n * @param {Partial<IPFSConfig>} input.config\n * @param {Repo['datastore']} input.datastore\n * @param {Repo['keys']} input.keys\n * @param {KeychainConfig} input.keychainConfig\n * @param {PeerId} input.peerId\n * @param {Multiaddr[]} input.multiaddrs\n */\nfunction getLibp2pOptions ({ options, config, datastore, keys, keychainConfig, peerId, multiaddrs }) {\n  const getPubsubRouter = () => {\n    const router = get(config, 'Pubsub.Router') || 'gossipsub'\n\n    if (!PubsubRouters[router]) {\n      throw errCode(new Error(`Router unavailable. Configure libp2p.modules.pubsub to use the ${router} router.`), 'ERR_NOT_SUPPORTED')\n    }\n\n    return PubsubRouters[router]\n  }\n\n  const libp2pDefaults = {\n    datastore,\n    peerId: peerId,\n    modules: {}\n  }\n\n  const libp2pOptions = {\n    modules: {\n      pubsub: getPubsubRouter()\n    },\n    config: {\n      peerDiscovery: {\n        mdns: {\n          enabled: get(options, 'config.Discovery.MDNS.Enabled',\n            get(config, 'Discovery.MDNS.Enabled', true))\n        },\n        webRTCStar: {\n          enabled: get(options, 'config.Discovery.webRTCStar.Enabled',\n            get(config, 'Discovery.webRTCStar.Enabled', true))\n        },\n        bootstrap: {\n          list: get(options, 'config.Bootstrap', get(config, 'Bootstrap', []))\n        }\n      },\n      relay: {\n        enabled: get(options, 'relay.enabled',\n          get(config, 'relay.enabled', true)),\n        hop: {\n          enabled: get(options, 'relay.hop.enabled',\n            get(config, 'relay.hop.enabled', false)),\n          active: get(options, 'relay.hop.active',\n            get(config, 'relay.hop.active', false))\n        }\n      },\n      dht: {\n        enabled: get(config, 'Routing.Type', 'none') !== 'none',\n        clientMode: get(config, 'Routing.Type', 'dht') !== 'dhtserver',\n        kBucketSize: get(options, 'dht.kBucketSize', 20)\n      },\n      pubsub: {\n        enabled: get(options, 'config.Pubsub.Enabled',\n          get(config, 'Pubsub.Enabled', true))\n      },\n      nat: {\n        enabled: get(options, 'nat.enabled', !get(config, 'Swarm.DisableNatPortMap', false)),\n        ttl: get(options, 'nat.ttl', 7200),\n        autoUpdate: get(options, 'nat.autoUpdate', true),\n        gateway: get(options, 'nat.gateway'),\n        externalIp: get(options, 'nat.externalIp'),\n        pmp: {\n          enabled: get(options, 'nat.pmp.enabled', false)\n        }\n      }\n    },\n    addresses: {\n      listen: multiaddrs,\n      announce: get(options, 'addresses.announce',\n        get(config, 'Addresses.Announce', []))\n    },\n    connectionManager: get(options, 'connectionManager', {\n      maxConnections: get(options, 'config.Swarm.ConnMgr.HighWater',\n        get(config, 'Swarm.ConnMgr.HighWater')),\n      minConnections: get(options, 'config.Swarm.ConnMgr.LowWater',\n        get(config, 'Swarm.ConnMgr.LowWater'))\n    }),\n    keychain: {\n      datastore: keys,\n      ...keychainConfig\n    }\n  }\n\n  // Required inline to reduce startup time\n  // Note: libp2p-nodejs gets replaced by libp2p-browser when webpacked/browserified\n  const getEnvLibp2pOptions = require('../runtime/libp2p-nodejs')\n\n  let constructorOptions = get(options, 'libp2p', {})\n\n  if (typeof constructorOptions === 'function') {\n    constructorOptions = {}\n  }\n\n  // Merge defaults with Node.js/browser/other environments options and configuration\n  const libp2pConfig = mergeOptions(\n    libp2pDefaults,\n    getEnvLibp2pOptions(),\n    libp2pOptions,\n    constructorOptions\n  )\n\n  const bootstrapList = get(libp2pConfig, 'config.peerDiscovery.bootstrap.list', [])\n\n  if (bootstrapList.length > 0) {\n    libp2pConfig.modules.peerDiscovery.push(require('libp2p-bootstrap'))\n  }\n\n  return libp2pConfig\n}\n\n/**\n * @typedef {Object} KeychainConfig\n * @property {string} [pass]\n *\n * @typedef {import('.').Repo} Repo\n * @typedef {import('.').Multiaddr} Multiaddr\n * @typedef {import('.').PeerId} PeerId\n * @typedef {import('.').Options} IPFSOptions\n * @typedef {import('libp2p')} LibP2P\n * @typedef {import('libp2p').Libp2pOptions & import('libp2p').constructorOptions} Options\n * @typedef {import('.').IPFSConfig} IPFSConfig\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/ipfs-core/src/components/libp2p.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/libp2p.js":"'use strict'\n\nconst get = require('dlv')\nconst mergeOptions = require('merge-options')\nconst errCode = require('err-code')\nconst PubsubRouters = require('../runtime/libp2p-pubsub-routers-nodejs')\n\n/**\n * @param {Object} config\n * @param {Repo} config.repo\n * @param {IPFSOptions|undefined} config.options\n * @param {PeerId} config.peerId\n * @param {Multiaddr[]|undefined} config.multiaddrs\n * @param {KeychainConfig|undefined} config.keychainConfig\n * @param {Partial<IPFSConfig>|undefined} config.config\n * @returns {LibP2P}\n */\nmodule.exports = ({\n  options = {},\n  peerId,\n  multiaddrs = [],\n  repo,\n  keychainConfig = {},\n  config = {}\n}) => {\n  const { datastore, keys } = repo\n\n  const libp2pOptions = getLibp2pOptions({\n    options,\n    config,\n    datastore,\n    keys,\n    keychainConfig,\n    peerId,\n    multiaddrs\n  })\n\n  if (typeof options.libp2p === 'function') {\n    return options.libp2p({ libp2pOptions, options, config, datastore, peerId })\n  }\n\n  // Required inline to reduce startup time\n  const Libp2p = require('libp2p')\n\n  return new Libp2p(libp2pOptions)\n}\n\n/**\n * @param {Object} input\n * @param {IPFSOptions} input.options\n * @param {Partial<IPFSConfig>} input.config\n * @param {Repo['datastore']} input.datastore\n * @param {Repo['keys']} input.keys\n * @param {KeychainConfig} input.keychainConfig\n * @param {PeerId} input.peerId\n * @param {Multiaddr[]} input.multiaddrs\n */\nfunction getLibp2pOptions ({ options, config, datastore, keys, keychainConfig, peerId, multiaddrs }) {\n  const getPubsubRouter = () => {\n    const router = get(config, 'Pubsub.Router') || 'gossipsub'\n\n    if (!PubsubRouters[router]) {\n      throw errCode(new Error(`Router unavailable. Configure libp2p.modules.pubsub to use the ${router} router.`), 'ERR_NOT_SUPPORTED')\n    }\n\n    return PubsubRouters[router]\n  }\n\n  const libp2pDefaults = {\n    datastore,\n    peerId: peerId,\n    modules: {}\n  }\n\n  const libp2pOptions = {\n    modules: {\n      pubsub: getPubsubRouter()\n    },\n    config: {\n      peerDiscovery: {\n        mdns: {\n          enabled: get(options, 'config.Discovery.MDNS.Enabled',\n            get(config, 'Discovery.MDNS.Enabled', true))\n        },\n        webRTCStar: {\n          enabled: get(options, 'config.Discovery.webRTCStar.Enabled',\n            get(config, 'Discovery.webRTCStar.Enabled', true))\n        },\n        bootstrap: {\n          list: get(options, 'config.Bootstrap', get(config, 'Bootstrap', []))\n        }\n      },\n      relay: {\n        enabled: get(options, 'relay.enabled',\n          get(config, 'relay.enabled', true)),\n        hop: {\n          enabled: get(options, 'relay.hop.enabled',\n            get(config, 'relay.hop.enabled', false)),\n          active: get(options, 'relay.hop.active',\n            get(config, 'relay.hop.active', false))\n        }\n      },\n      dht: {\n        enabled: get(config, 'Routing.Type', 'none') !== 'none',\n        clientMode: get(config, 'Routing.Type', 'dht') !== 'dhtserver',\n        kBucketSize: get(options, 'dht.kBucketSize', 20)\n      },\n      pubsub: {\n        enabled: get(options, 'config.Pubsub.Enabled',\n          get(config, 'Pubsub.Enabled', true))\n      },\n      nat: {\n        enabled: get(options, 'nat.enabled', !get(config, 'Swarm.DisableNatPortMap', false)),\n        ttl: get(options, 'nat.ttl', 7200),\n        autoUpdate: get(options, 'nat.autoUpdate', true),\n        gateway: get(options, 'nat.gateway'),\n        externalIp: get(options, 'nat.externalIp'),\n        pmp: {\n          enabled: get(options, 'nat.pmp.enabled', false)\n        }\n      }\n    },\n    addresses: {\n      listen: multiaddrs,\n      announce: get(options, 'addresses.announce',\n        get(config, 'Addresses.Announce', []))\n    },\n    connectionManager: get(options, 'connectionManager', {\n      maxConnections: get(options, 'config.Swarm.ConnMgr.HighWater',\n        get(config, 'Swarm.ConnMgr.HighWater')),\n      minConnections: get(options, 'config.Swarm.ConnMgr.LowWater',\n        get(config, 'Swarm.ConnMgr.LowWater'))\n    }),\n    keychain: {\n      datastore: keys,\n      ...keychainConfig\n    }\n  }\n\n  // Required inline to reduce startup time\n  // Note: libp2p-nodejs gets replaced by libp2p-browser when webpacked/browserified\n  const getEnvLibp2pOptions = require('../runtime/libp2p-nodejs')\n\n  let constructorOptions = get(options, 'libp2p', {})\n\n  if (typeof constructorOptions === 'function') {\n    constructorOptions = {}\n  }\n\n  // Merge defaults with Node.js/browser/other environments options and configuration\n  const libp2pConfig = mergeOptions(\n    libp2pDefaults,\n    getEnvLibp2pOptions(),\n    libp2pOptions,\n    constructorOptions\n  )\n\n  const bootstrapList = get(libp2pConfig, 'config.peerDiscovery.bootstrap.list', [])\n\n  if (bootstrapList.length > 0) {\n    libp2pConfig.modules.peerDiscovery.push(require('libp2p-bootstrap'))\n  }\n\n  return libp2pConfig\n}\n\n/**\n * @typedef {Object} KeychainConfig\n * @property {string} [pass]\n *\n * @typedef {import('.').Repo} Repo\n * @typedef {import('.').Multiaddr} Multiaddr\n * @typedef {import('.').PeerId} PeerId\n * @typedef {import('.').Options} IPFSOptions\n * @typedef {import('libp2p')} LibP2P\n * @typedef {import('libp2p').Libp2pOptions & import('libp2p').constructorOptions} Options\n * @typedef {import('.').IPFSConfig} IPFSConfig\n */\n"},"lineCount":179}},"error":null,"hash":"9623dc980accf92d582c405f562e131b","cacheData":{"env":{}}}