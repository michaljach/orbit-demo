{"id":"../node_modules/datastore-core/src/shard-readme.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/datastore-core/package.json","includedInParent":true,"mtime":1612441378460}],"generated":{"js":"'use strict';\n\nmodule.exports = `This is a repository of IPLD objects. Each IPLD object is in a single file,\nnamed <base32 encoding of cid>.data. Where <base32 encoding of cid> is the\n\"base32\" encoding of the CID (as specified in\nhttps://github.com/multiformats/multibase) without the 'B' prefix.\nAll the object files are placed in a tree of directories, based on a\nfunction of the CID. This is a form of sharding similar to\nthe objects directory in git repositories. Previously, we used\nprefixes, we now use the next-to-last two charters.\n    func NextToLast(base32cid string) {\n      nextToLastLen := 2\n      offset := len(base32cid) - nextToLastLen - 1\n      return str[offset : offset+nextToLastLen]\n    }\nFor example, an object with a base58 CIDv1 of\n    zb2rhYSxw4ZjuzgCnWSt19Q94ERaeFhu9uSqRgjSdx9bsgM6f\nhas a base32 CIDv1 of\n    BAFKREIA22FLID5AJ2KU7URG47MDLROZIH6YF2KALU2PWEFPVI37YLKRSCA\nand will be placed at\n    SC/AFKREIA22FLID5AJ2KU7URG47MDLROZIH6YF2KALU2PWEFPVI37YLKRSCA.data\nwith 'SC' being the last-to-next two characters and the 'B' at the\nbeginning of the CIDv1 string is the multibase prefix that is not\nstored in the filename.\n`;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":1,"column":0}},{"name":"module","generated":{"line":3,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":6},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":3,"column":6}},{"name":"exports","generated":{"line":3,"column":7},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":3,"column":7}},{"generated":{"line":3,"column":14},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":17},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":3,"column":18}},{"generated":{"line":4,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":12,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":13,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":14,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":15,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":16,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":17,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":18,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":19,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":20,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":21,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":22,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":23,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":24,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":25,"column":0}},{"generated":{"line":25,"column":1},"source":"../node_modules/datastore-core/src/shard-readme.js","original":{"line":3,"column":0}}],"sources":{"../node_modules/datastore-core/src/shard-readme.js":"'use strict'\n\nmodule.exports = `This is a repository of IPLD objects. Each IPLD object is in a single file,\nnamed <base32 encoding of cid>.data. Where <base32 encoding of cid> is the\n\"base32\" encoding of the CID (as specified in\nhttps://github.com/multiformats/multibase) without the 'B' prefix.\nAll the object files are placed in a tree of directories, based on a\nfunction of the CID. This is a form of sharding similar to\nthe objects directory in git repositories. Previously, we used\nprefixes, we now use the next-to-last two charters.\n    func NextToLast(base32cid string) {\n      nextToLastLen := 2\n      offset := len(base32cid) - nextToLastLen - 1\n      return str[offset : offset+nextToLastLen]\n    }\nFor example, an object with a base58 CIDv1 of\n    zb2rhYSxw4ZjuzgCnWSt19Q94ERaeFhu9uSqRgjSdx9bsgM6f\nhas a base32 CIDv1 of\n    BAFKREIA22FLID5AJ2KU7URG47MDLROZIH6YF2KALU2PWEFPVI37YLKRSCA\nand will be placed at\n    SC/AFKREIA22FLID5AJ2KU7URG47MDLROZIH6YF2KALU2PWEFPVI37YLKRSCA.data\nwith 'SC' being the last-to-next two characters and the 'B' at the\nbeginning of the CIDv1 string is the multibase prefix that is not\nstored in the filename.\n`\n"},"lineCount":null}},"error":null,"hash":"5965def6b467fbf3b00046979862943b","cacheData":{"env":{}}}