{"id":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/orbit-db-counterstore/package.json","includedInParent":true,"mtime":1612441846205},{"name":"crdts/src/G-Counter","loc":{"line":3,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/orbit-db-counterstore/src/CounterIndex.js","resolved":"/Users/michaljach/Sites/golf/node_modules/crdts/src/G-Counter.js"}],"generated":{"js":"'use strict'\n\nconst Counter = require('crdts/src/G-Counter')\n\nclass CounterIndex {\n  constructor (id) {\n    this._index = new Counter(id)\n  }\n\n  get () {\n    return this._index\n  }\n\n  updateIndex (oplog) {\n    if (this._index) {\n      const createCounter = e => Counter.from(e.payload.value)\n      const mergeToIndex = e => this._index.merge(e)\n      oplog.values.filter(e => e && e.payload.op === 'COUNTER')\n        .map(createCounter)\n        .forEach(mergeToIndex)\n    }\n  }\n}\n\nmodule.exports = CounterIndex\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/orbit-db-counterstore/src/CounterIndex.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}}],"sources":{"../node_modules/orbit-db-counterstore/src/CounterIndex.js":"'use strict'\n\nconst Counter = require('crdts/src/G-Counter')\n\nclass CounterIndex {\n  constructor (id) {\n    this._index = new Counter(id)\n  }\n\n  get () {\n    return this._index\n  }\n\n  updateIndex (oplog) {\n    if (this._index) {\n      const createCounter = e => Counter.from(e.payload.value)\n      const mergeToIndex = e => this._index.merge(e)\n      oplog.values.filter(e => e && e.payload.op === 'COUNTER')\n        .map(createCounter)\n        .forEach(mergeToIndex)\n    }\n  }\n}\n\nmodule.exports = CounterIndex\n"},"lineCount":26}},"error":null,"hash":"0c128c182a6d5ebbdcb29b3af2853786","cacheData":{"env":{}}}