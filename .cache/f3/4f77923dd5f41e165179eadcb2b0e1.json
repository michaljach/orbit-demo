{"id":"../node_modules/ipfs-core/src/components/dag/put.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"multicodec","loc":{"line":3,"column":27},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dag/put.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multicodec/src/index.js"},{"name":"ipfs-core-utils/src/with-timeout-option","loc":{"line":10,"column":34},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dag/put.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core-utils/src/with-timeout-option.js"}],"generated":{"js":"'use strict'\n\nconst multicodec = require('multicodec')\n\n/**\n * @param {string} name\n * @returns {number}\n */\nconst nameToCodec = name => multicodec[name.toUpperCase().replace(/-/g, '_')]\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('.').IPLD} config.ipld\n * @param {import('.').Pin} config.pin\n * @param {import('.').Preload} config.preload\n * @param {import('.').GCLock} config.gcLock\n */\nmodule.exports = ({ ipld, pin, gcLock, preload }) => {\n  /**\n   * Store an IPLD format node\n   *\n   * @param {Object} dagNode\n   * @param {PutOptions & AbortOptions} [options]\n   * @returns {Promise<CID>}\n   * @example\n   * ```js\n   * const obj = { simple: 'object' }\n   * const cid = await ipfs.dag.put(obj, { format: 'dag-cbor', hashAlg: 'sha3-512' })\n   *\n   * console.log(cid.toString())\n   * // zBwWX9ecx5F4X54WAjmFLErnBT6ByfNxStr5ovowTL7AhaUR98RWvXPS1V3HqV1qs3r5Ec5ocv7eCdbqYQREXNUfYNuKG\n   * ```\n   */\n  async function put (dagNode, options = {}) {\n    const { cidVersion, format, hashAlg } = readEncodingOptions(options)\n\n    const release = options.pin ? await gcLock.readLock() : null\n\n    try {\n      const cid = await ipld.put(dagNode, format, {\n        hashAlg,\n        cidVersion,\n        signal: options.signal\n      })\n\n      if (options.pin) {\n        await pin.add(cid, {\n          lock: false\n        })\n      }\n\n      if (options.preload !== false) {\n        preload(cid)\n      }\n\n      return cid\n    } finally {\n      if (release) {\n        release()\n      }\n    }\n  }\n\n  return withTimeoutOption(put)\n}\n\n/**\n *\n * @param {PutOptions} options\n */\nconst readEncodingOptions = (options) => {\n  if (options.cid && (options.format || options.hashAlg)) {\n    throw new Error('Can\\'t put dag node. Please provide either `cid` OR `format` and `hashAlg` options.')\n  } else if (((options.format && !options.hashAlg) || (!options.format && options.hashAlg))) {\n    throw new Error('Can\\'t put dag node. Please provide `format` AND `hashAlg` options.')\n  }\n\n  const { hashAlg, format } = options.cid != null\n    ? { format: options.cid.code, hashAlg: undefined }\n    : encodingCodes({ ...defaultCIDOptions, ...options })\n  const cidVersion = readVersion({ ...options, format, hashAlg })\n\n  return {\n    cidVersion,\n    format,\n    hashAlg\n  }\n}\n\n/**\n *\n * @param {Object} options\n * @param {number|string} options.format\n * @param {number|string} [options.hashAlg]\n */\nconst encodingCodes = ({ format, hashAlg }) => ({\n  format: typeof format === 'string' ? nameToCodec(format) : format,\n  hashAlg: typeof hashAlg === 'string' ? nameToCodec(hashAlg) : hashAlg\n})\n\n/**\n * Figures out what version of CID should be used given the options.\n *\n * @param {Object} options\n * @param {0|1} [options.version]\n * @param {CID} [options.cid]\n * @param {number} [options.format]\n * @param {number} [options.hashAlg]\n */\nconst readVersion = ({ version, cid, format, hashAlg }) => {\n  // If version is passed just use that.\n  if (typeof version === 'number') {\n    return version\n  // If cid is provided use version field from it.\n  } else if (cid) {\n    return cid.version\n  // If it's dag-pb nodes use version 0\n  } else if (format === multicodec.DAG_PB && hashAlg === multicodec.SHA2_256) {\n    return 0\n  } else {\n  // Otherwise use version 1\n    return 1\n  }\n}\n\n/** @type {WithCIDOptions} */\nconst defaultCIDOptions = {\n  format: multicodec.DAG_CBOR,\n  hashAlg: multicodec.SHA2_256\n}\n\n/**\n * @typedef {PutWith & OtherPutOptions} PutOptions\n * @typedef {WithCID | WithCIDOptions} PutWith\n *\n *\n * @typedef {Object} WithCID\n * @property {CID} [cid]\n * // Note: We still stil need to reserve these fields otherwise it implies\n * // that those fields can still be there and have very different types.\n * @property {undefined} [format]\n * @property {undefined} [hashAlg]\n * @property {undefined} [version]\n *\n * @typedef {Object} WithCIDOptions\n * @property {undefined} [cid]\n * @property {string|number} format\n * @property {string|number} hashAlg\n * @property {0|1} [version]\n *\n * @typedef {Object} OtherPutOptions\n * @property {boolean} [pin=false]\n * @property {boolean} [preload=false]\n *\n * @typedef {import('.').CID} CID\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/put.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/dag/put.js":"'use strict'\n\nconst multicodec = require('multicodec')\n\n/**\n * @param {string} name\n * @returns {number}\n */\nconst nameToCodec = name => multicodec[name.toUpperCase().replace(/-/g, '_')]\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('.').IPLD} config.ipld\n * @param {import('.').Pin} config.pin\n * @param {import('.').Preload} config.preload\n * @param {import('.').GCLock} config.gcLock\n */\nmodule.exports = ({ ipld, pin, gcLock, preload }) => {\n  /**\n   * Store an IPLD format node\n   *\n   * @param {Object} dagNode\n   * @param {PutOptions & AbortOptions} [options]\n   * @returns {Promise<CID>}\n   * @example\n   * ```js\n   * const obj = { simple: 'object' }\n   * const cid = await ipfs.dag.put(obj, { format: 'dag-cbor', hashAlg: 'sha3-512' })\n   *\n   * console.log(cid.toString())\n   * // zBwWX9ecx5F4X54WAjmFLErnBT6ByfNxStr5ovowTL7AhaUR98RWvXPS1V3HqV1qs3r5Ec5ocv7eCdbqYQREXNUfYNuKG\n   * ```\n   */\n  async function put (dagNode, options = {}) {\n    const { cidVersion, format, hashAlg } = readEncodingOptions(options)\n\n    const release = options.pin ? await gcLock.readLock() : null\n\n    try {\n      const cid = await ipld.put(dagNode, format, {\n        hashAlg,\n        cidVersion,\n        signal: options.signal\n      })\n\n      if (options.pin) {\n        await pin.add(cid, {\n          lock: false\n        })\n      }\n\n      if (options.preload !== false) {\n        preload(cid)\n      }\n\n      return cid\n    } finally {\n      if (release) {\n        release()\n      }\n    }\n  }\n\n  return withTimeoutOption(put)\n}\n\n/**\n *\n * @param {PutOptions} options\n */\nconst readEncodingOptions = (options) => {\n  if (options.cid && (options.format || options.hashAlg)) {\n    throw new Error('Can\\'t put dag node. Please provide either `cid` OR `format` and `hashAlg` options.')\n  } else if (((options.format && !options.hashAlg) || (!options.format && options.hashAlg))) {\n    throw new Error('Can\\'t put dag node. Please provide `format` AND `hashAlg` options.')\n  }\n\n  const { hashAlg, format } = options.cid != null\n    ? { format: options.cid.code, hashAlg: undefined }\n    : encodingCodes({ ...defaultCIDOptions, ...options })\n  const cidVersion = readVersion({ ...options, format, hashAlg })\n\n  return {\n    cidVersion,\n    format,\n    hashAlg\n  }\n}\n\n/**\n *\n * @param {Object} options\n * @param {number|string} options.format\n * @param {number|string} [options.hashAlg]\n */\nconst encodingCodes = ({ format, hashAlg }) => ({\n  format: typeof format === 'string' ? nameToCodec(format) : format,\n  hashAlg: typeof hashAlg === 'string' ? nameToCodec(hashAlg) : hashAlg\n})\n\n/**\n * Figures out what version of CID should be used given the options.\n *\n * @param {Object} options\n * @param {0|1} [options.version]\n * @param {CID} [options.cid]\n * @param {number} [options.format]\n * @param {number} [options.hashAlg]\n */\nconst readVersion = ({ version, cid, format, hashAlg }) => {\n  // If version is passed just use that.\n  if (typeof version === 'number') {\n    return version\n  // If cid is provided use version field from it.\n  } else if (cid) {\n    return cid.version\n  // If it's dag-pb nodes use version 0\n  } else if (format === multicodec.DAG_PB && hashAlg === multicodec.SHA2_256) {\n    return 0\n  } else {\n  // Otherwise use version 1\n    return 1\n  }\n}\n\n/** @type {WithCIDOptions} */\nconst defaultCIDOptions = {\n  format: multicodec.DAG_CBOR,\n  hashAlg: multicodec.SHA2_256\n}\n\n/**\n * @typedef {PutWith & OtherPutOptions} PutOptions\n * @typedef {WithCID | WithCIDOptions} PutWith\n *\n *\n * @typedef {Object} WithCID\n * @property {CID} [cid]\n * // Note: We still stil need to reserve these fields otherwise it implies\n * // that those fields can still be there and have very different types.\n * @property {undefined} [format]\n * @property {undefined} [hashAlg]\n * @property {undefined} [version]\n *\n * @typedef {Object} WithCIDOptions\n * @property {undefined} [cid]\n * @property {string|number} format\n * @property {string|number} hashAlg\n * @property {0|1} [version]\n *\n * @typedef {Object} OtherPutOptions\n * @property {boolean} [pin=false]\n * @property {boolean} [preload=false]\n *\n * @typedef {import('.').CID} CID\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"lineCount":159}},"error":null,"hash":"50d646b87ffe72e486ecb72a47d4ff1d","cacheData":{"env":{}}}