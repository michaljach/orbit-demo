{"id":"../node_modules/ipfs-core/src/components/bitswap/stat.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"bignumber.js","loc":{"line":3,"column":33},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/bitswap/stat.js","resolved":"/Users/michaljach/Sites/golf/node_modules/bignumber.js/bignumber.js"},{"name":"cids","loc":{"line":4,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/bitswap/stat.js","resolved":"/Users/michaljach/Sites/golf/node_modules/cids/src/index.js"},{"name":"ipfs-core-utils/src/with-timeout-option","loc":{"line":5,"column":34},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/bitswap/stat.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core-utils/src/with-timeout-option.js"}],"generated":{"js":"'use strict'\n\nconst { default: Big } = require('bignumber.js')\nconst CID = require('cids')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('.').NetworkService} config.network\n */\nmodule.exports = ({ network }) => {\n  /**\n   * Show diagnostic information on the bitswap agent.\n   * Note: `bitswap.stat` and `stats.bitswap` can be used interchangeably.\n   *\n   * @example\n   * ```js\n   * const stats = await ipfs.bitswap.stat()\n   * console.log(stats)\n   * // {\n   * //   provideBufLen: 0,\n   * //   wantlist: [ CID('QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM') ],\n   * //   peers:\n   * //    [ 'QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM',\n   * //      'QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu',\n   * //      'QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd' ],\n   * //   blocksReceived: 0,\n   * //   dataReceived: 0,\n   * //   blocksSent: 0,\n   * //   dataSent: 0,\n   * //   dupBlksReceived: 0,\n   * //   dupDataReceived: 0\n   * // }\n   * ```\n   * @param {import('.').AbortOptions} [options]\n   * @returns {Promise<BitswapStats>}\n   */\n  async function stat (options) {\n    const { bitswap } = await network.use(options)\n    const snapshot = bitswap.stat().snapshot\n\n    return {\n      provideBufLen: parseInt(snapshot.providesBufferLength.toString()),\n      blocksReceived: new Big(snapshot.blocksReceived),\n      wantlist: Array.from(bitswap.getWantlist()).map(e => e[1].cid),\n      peers: bitswap.peers().map(id => new CID(id.toB58String())),\n      dupBlksReceived: new Big(snapshot.dupBlksReceived),\n      dupDataReceived: new Big(snapshot.dupDataReceived),\n      dataReceived: new Big(snapshot.dataReceived),\n      blocksSent: new Big(snapshot.blocksSent),\n      dataSent: new Big(snapshot.dataSent)\n    }\n  }\n\n  return withTimeoutOption(stat)\n}\n\n/**\n * @typedef {object} BitswapStats - An object that contains information about the bitswap agent\n * @property {number} provideBufLen - an integer\n * @property {CID[]} wantlist\n * @property {CID[]} peers - array of peer IDs\n * @property {Big} blocksReceived\n * @property {Big} dataReceived\n * @property {Big} blocksSent\n * @property {Big} dataSent\n * @property {Big} dupBlksReceived\n * @property {Big} dupDataReceived\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/stat.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/bitswap/stat.js":"'use strict'\n\nconst { default: Big } = require('bignumber.js')\nconst CID = require('cids')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('.').NetworkService} config.network\n */\nmodule.exports = ({ network }) => {\n  /**\n   * Show diagnostic information on the bitswap agent.\n   * Note: `bitswap.stat` and `stats.bitswap` can be used interchangeably.\n   *\n   * @example\n   * ```js\n   * const stats = await ipfs.bitswap.stat()\n   * console.log(stats)\n   * // {\n   * //   provideBufLen: 0,\n   * //   wantlist: [ CID('QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM') ],\n   * //   peers:\n   * //    [ 'QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM',\n   * //      'QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu',\n   * //      'QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd' ],\n   * //   blocksReceived: 0,\n   * //   dataReceived: 0,\n   * //   blocksSent: 0,\n   * //   dataSent: 0,\n   * //   dupBlksReceived: 0,\n   * //   dupDataReceived: 0\n   * // }\n   * ```\n   * @param {import('.').AbortOptions} [options]\n   * @returns {Promise<BitswapStats>}\n   */\n  async function stat (options) {\n    const { bitswap } = await network.use(options)\n    const snapshot = bitswap.stat().snapshot\n\n    return {\n      provideBufLen: parseInt(snapshot.providesBufferLength.toString()),\n      blocksReceived: new Big(snapshot.blocksReceived),\n      wantlist: Array.from(bitswap.getWantlist()).map(e => e[1].cid),\n      peers: bitswap.peers().map(id => new CID(id.toB58String())),\n      dupBlksReceived: new Big(snapshot.dupBlksReceived),\n      dupDataReceived: new Big(snapshot.dupDataReceived),\n      dataReceived: new Big(snapshot.dataReceived),\n      blocksSent: new Big(snapshot.blocksSent),\n      dataSent: new Big(snapshot.dataSent)\n    }\n  }\n\n  return withTimeoutOption(stat)\n}\n\n/**\n * @typedef {object} BitswapStats - An object that contains information about the bitswap agent\n * @property {number} provideBufLen - an integer\n * @property {CID[]} wantlist\n * @property {CID[]} peers - array of peer IDs\n * @property {Big} blocksReceived\n * @property {Big} dataReceived\n * @property {Big} blocksSent\n * @property {Big} dataSent\n * @property {Big} dupBlksReceived\n * @property {Big} dupDataReceived\n */\n"},"lineCount":70}},"error":null,"hash":"05c1360a89d68117f1b139f6b4a5b3af","cacheData":{"env":{}}}