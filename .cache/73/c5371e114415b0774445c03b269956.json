{"id":"../node_modules/ipfs-core/src/index.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"ipfs-utils/src/files/glob-source","loc":{"line":3,"column":27},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"ipfs-utils/src/files/url-source","loc":{"line":4,"column":26},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-utils/src/files/url-source.js"},{"name":"peer-id","loc":{"line":5,"column":23},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/peer-id/src/index.js"},{"name":"libp2p-crypto","loc":{"line":6,"column":23},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/libp2p-crypto/src/index.js"},{"name":"is-ipfs","loc":{"line":7,"column":23},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/is-ipfs/src/index.js"},{"name":"multiaddr","loc":{"line":8,"column":26},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multiaddr/src/index.js"},{"name":"multibase","loc":{"line":9,"column":26},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multibase/src/index.js"},{"name":"multicodec","loc":{"line":10,"column":27},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multicodec/src/index.js"},{"name":"multihashing-async","loc":{"line":11,"column":29},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multihashing-async/src/index.js"},{"name":"cids","loc":{"line":13,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/cids/src/index.js"},{"name":"./components","loc":{"line":14,"column":27},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/index.js"}],"generated":{"js":"'use strict'\n\nconst globSource = require('ipfs-utils/src/files/glob-source')\nconst urlSource = require('ipfs-utils/src/files/url-source')\nconst PeerId = require('peer-id')\nconst crypto = require('libp2p-crypto')\nconst isIPFS = require('is-ipfs')\nconst multiaddr = require('multiaddr')\nconst multibase = require('multibase')\nconst multicodec = require('multicodec')\nconst multihashing = require('multihashing-async')\nconst multihash = multihashing.multihash\nconst CID = require('cids')\nconst { create } = require('./components')\n\n/**\n * @typedef {import('./components')} IPFS\n */\n\nmodule.exports = {\n  create,\n  crypto,\n  isIPFS,\n  CID,\n  multiaddr,\n  multibase,\n  multihash,\n  multihashing,\n  multicodec,\n  PeerId,\n  globSource,\n  urlSource\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"../node_modules/ipfs-core/src/index.js":"'use strict'\n\nconst globSource = require('ipfs-utils/src/files/glob-source')\nconst urlSource = require('ipfs-utils/src/files/url-source')\nconst PeerId = require('peer-id')\nconst crypto = require('libp2p-crypto')\nconst isIPFS = require('is-ipfs')\nconst multiaddr = require('multiaddr')\nconst multibase = require('multibase')\nconst multicodec = require('multicodec')\nconst multihashing = require('multihashing-async')\nconst multihash = multihashing.multihash\nconst CID = require('cids')\nconst { create } = require('./components')\n\n/**\n * @typedef {import('./components')} IPFS\n */\n\nmodule.exports = {\n  create,\n  crypto,\n  isIPFS,\n  CID,\n  multiaddr,\n  multibase,\n  multihash,\n  multihashing,\n  multicodec,\n  PeerId,\n  globSource,\n  urlSource\n}\n"},"lineCount":34}},"error":null,"hash":"8cf004a2e0b7c989f1804d7bff0b34b0","cacheData":{"env":{}}}