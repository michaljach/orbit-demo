{"id":"../node_modules/ipfs-core/src/components/dag/index.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"./get","loc":{"line":3,"column":26},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dag/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dag/get.js"},{"name":"./resolve","loc":{"line":4,"column":30},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dag/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dag/resolve.js"},{"name":"./tree","loc":{"line":5,"column":27},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dag/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dag/tree.js"},{"name":"./put","loc":{"line":6,"column":26},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dag/index.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/dag/put.js"}],"generated":{"js":"'use strict'\n\nconst createGet = require('./get')\nconst createResolve = require('./resolve')\nconst createTree = require('./tree')\nconst createPut = require('./put')\n\nclass Reader {\n  /**\n   * @param {ReaderConfig} config\n   */\n  constructor (config) {\n    this.get = createGet(config)\n    this.resolve = createResolve(config)\n    this.tree = createTree(config)\n  }\n}\n\nclass DagAPI {\n  /**\n   * @param {Object} config\n   * @param {IPLD} config.ipld\n   * @param {Preload} config.preload\n   * @param {Pin} config.pin\n   * @param {GCLock} config.gcLock\n   * @param {DagReader} config.dagReader\n   */\n  constructor ({ ipld, pin, preload, gcLock, dagReader }) {\n    const { get, resolve, tree } = dagReader\n    const put = createPut({ ipld, preload, pin, gcLock })\n\n    this.get = get\n    this.resolve = resolve\n    this.tree = tree\n    this.put = put\n  }\n\n  /**\n   * Creates a reader part of the DAG API. This allows other APIs that require\n   * reader parts of the DAG API to be instantiated before components required\n   * by writer end are.\n   *\n   * @param {ReaderConfig} config\n   * @returns {DagReader}\n   */\n  static reader (config) {\n    return new Reader(config)\n  }\n}\n\nmodule.exports = DagAPI\n\n/**\n * @typedef {Object} DagReader\n * @property {ReturnType<typeof createGet>} get\n * @property {ReturnType<typeof createResolve>} resolve\n * @property {ReturnType<typeof createTree>} tree\n *\n * @typedef {Object} ReaderConfig\n * @property {IPLD} ipld\n * @property {Preload} preload\n *\n * @typedef {import('..').IPLD} IPLD\n * @typedef {import('..').Preload} Preload\n * @typedef {import('..').Pin} Pin\n * @typedef {import('..').GCLock} GCLock\n * @typedef {import('..').CID} CID\n * @typedef {import('..').AbortOptions} AbortOptions\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/dag/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/dag/index.js":"'use strict'\n\nconst createGet = require('./get')\nconst createResolve = require('./resolve')\nconst createTree = require('./tree')\nconst createPut = require('./put')\n\nclass Reader {\n  /**\n   * @param {ReaderConfig} config\n   */\n  constructor (config) {\n    this.get = createGet(config)\n    this.resolve = createResolve(config)\n    this.tree = createTree(config)\n  }\n}\n\nclass DagAPI {\n  /**\n   * @param {Object} config\n   * @param {IPLD} config.ipld\n   * @param {Preload} config.preload\n   * @param {Pin} config.pin\n   * @param {GCLock} config.gcLock\n   * @param {DagReader} config.dagReader\n   */\n  constructor ({ ipld, pin, preload, gcLock, dagReader }) {\n    const { get, resolve, tree } = dagReader\n    const put = createPut({ ipld, preload, pin, gcLock })\n\n    this.get = get\n    this.resolve = resolve\n    this.tree = tree\n    this.put = put\n  }\n\n  /**\n   * Creates a reader part of the DAG API. This allows other APIs that require\n   * reader parts of the DAG API to be instantiated before components required\n   * by writer end are.\n   *\n   * @param {ReaderConfig} config\n   * @returns {DagReader}\n   */\n  static reader (config) {\n    return new Reader(config)\n  }\n}\n\nmodule.exports = DagAPI\n\n/**\n * @typedef {Object} DagReader\n * @property {ReturnType<typeof createGet>} get\n * @property {ReturnType<typeof createResolve>} resolve\n * @property {ReturnType<typeof createTree>} tree\n *\n * @typedef {Object} ReaderConfig\n * @property {IPLD} ipld\n * @property {Preload} preload\n *\n * @typedef {import('..').IPLD} IPLD\n * @typedef {import('..').Preload} Preload\n * @typedef {import('..').Pin} Pin\n * @typedef {import('..').GCLock} GCLock\n * @typedef {import('..').CID} CID\n * @typedef {import('..').AbortOptions} AbortOptions\n */\n"},"lineCount":70}},"error":null,"hash":"7dd3831e9d261b4e63f9007bd4448597","cacheData":{"env":{}}}