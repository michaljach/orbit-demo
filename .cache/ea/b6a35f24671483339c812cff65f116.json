{"id":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612441996706},{"name":"/Users/michaljach/Sites/golf/node_modules/orbit-db-access-controllers/package.json","includedInParent":true,"mtime":1612441959053},{"name":"orbit-db-io","loc":{"line":2,"column":19},"parent":"/Users/michaljach/Sites/golf/node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","resolved":"/Users/michaljach/Sites/golf/node_modules/orbit-db-access-controllers/node_modules/orbit-db-io/index.js"},{"name":"safe-buffer/","loc":{"line":3,"column":23},"parent":"/Users/michaljach/Sites/golf/node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","resolved":"/Users/michaljach/Sites/golf/node_modules/safe-buffer/index.js"},{"name":"./access-controller-interface","loc":{"line":4,"column":33},"parent":"/Users/michaljach/Sites/golf/node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","resolved":"/Users/michaljach/Sites/golf/node_modules/orbit-db-access-controllers/src/access-controller-interface.js"}],"generated":{"js":"\n'use strict'\nconst io = require('orbit-db-io')\nconst Buffer = require('safe-buffer/').Buffer\nconst AccessController = require('./access-controller-interface')\nconst type = 'legacy-ipfs'\n\nclass LegacyIPFSAccessController extends AccessController {\n  constructor (ipfs, options) {\n    super()\n    this._ipfs = ipfs\n    this._write = Array.from(options.write || [])\n  }\n\n  // Returns the type of the access controller\n  static get type () { return type }\n\n  // Return a Set of keys that have `access` capability\n  get write () {\n    return this._write\n  }\n\n  async canAppend (entry, identityProvider) {\n    // Allow if access list contain the writer's publicKey or is '*'\n    const publicKey = entry.key\n    if (this.write.includes(publicKey) ||\n      this.write.includes('*')) {\n      return true\n    }\n    return false\n  }\n\n  async load (address) {\n    // Transform '/ipfs/QmPFtHi3cmfZerxtH9ySLdzpg1yFhocYDZgEZywdUXHxFU'\n    // to 'QmPFtHi3cmfZerxtH9ySLdzpg1yFhocYDZgEZywdUXHxFU'\n    if (address.indexOf('/ipfs') === 0) { address = address.split('/')[2] }\n\n    try {\n      const access = await io.read(this._ipfs, address)\n      this._write = access.write\n    } catch (e) {\n      console.log('LegacyIPFSAccessController.load ERROR:', e)\n    }\n  }\n\n  async save (options) {\n    let cid\n    const access = { admin: [], write: this.write, read: [] }\n    try {\n      cid = await io.write(this._ipfs, 'raw', Buffer.from(JSON.stringify(access, null, 2)), { format: 'dag-pb' })\n    } catch (e) {\n      console.log('LegacyIPFSAccessController.save ERROR:', e)\n    }\n    // return the manifest data\n    return { address: cid, skipManifest: true }\n  }\n\n  static async create (orbitdb, options = {}) {\n    options = { ...options, ...{ write: options.write || [orbitdb.identity.publicKey] } }\n    return new LegacyIPFSAccessController(orbitdb._ipfs, options)\n  }\n}\n\nmodule.exports = LegacyIPFSAccessController\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}}],"sources":{"../node_modules/orbit-db-access-controllers/src/legacy-ipfs-access-controller.js":"'use strict'\nconst io = require('orbit-db-io')\nconst Buffer = require('safe-buffer/').Buffer\nconst AccessController = require('./access-controller-interface')\nconst type = 'legacy-ipfs'\n\nclass LegacyIPFSAccessController extends AccessController {\n  constructor (ipfs, options) {\n    super()\n    this._ipfs = ipfs\n    this._write = Array.from(options.write || [])\n  }\n\n  // Returns the type of the access controller\n  static get type () { return type }\n\n  // Return a Set of keys that have `access` capability\n  get write () {\n    return this._write\n  }\n\n  async canAppend (entry, identityProvider) {\n    // Allow if access list contain the writer's publicKey or is '*'\n    const publicKey = entry.key\n    if (this.write.includes(publicKey) ||\n      this.write.includes('*')) {\n      return true\n    }\n    return false\n  }\n\n  async load (address) {\n    // Transform '/ipfs/QmPFtHi3cmfZerxtH9ySLdzpg1yFhocYDZgEZywdUXHxFU'\n    // to 'QmPFtHi3cmfZerxtH9ySLdzpg1yFhocYDZgEZywdUXHxFU'\n    if (address.indexOf('/ipfs') === 0) { address = address.split('/')[2] }\n\n    try {\n      const access = await io.read(this._ipfs, address)\n      this._write = access.write\n    } catch (e) {\n      console.log('LegacyIPFSAccessController.load ERROR:', e)\n    }\n  }\n\n  async save (options) {\n    let cid\n    const access = { admin: [], write: this.write, read: [] }\n    try {\n      cid = await io.write(this._ipfs, 'raw', Buffer.from(JSON.stringify(access, null, 2)), { format: 'dag-pb' })\n    } catch (e) {\n      console.log('LegacyIPFSAccessController.save ERROR:', e)\n    }\n    // return the manifest data\n    return { address: cid, skipManifest: true }\n  }\n\n  static async create (orbitdb, options = {}) {\n    options = { ...options, ...{ write: options.write || [orbitdb.identity.publicKey] } }\n    return new LegacyIPFSAccessController(orbitdb._ipfs, options)\n  }\n}\n\nmodule.exports = LegacyIPFSAccessController\n"},"lineCount":65}},"error":null,"hash":"6d75276c07385fada391cdb1feb71e29","cacheData":{"env":{}}}