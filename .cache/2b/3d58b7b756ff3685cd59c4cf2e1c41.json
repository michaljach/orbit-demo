{"id":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"ipld-dag-pb","loc":{"line":5,"column":12},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipld-dag-pb/src/index.js"},{"name":"hamt-sharding/src/bucket","loc":{"line":6,"column":23},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/hamt-sharding/src/bucket.js"},{"name":"ipfs-unixfs-importer/src/dir-sharded","loc":{"line":7,"column":27},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-unixfs-importer/src/dir-sharded.js"},{"name":"debug","loc":{"line":8,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/debug/src/browser.js"},{"name":"ipfs-unixfs","loc":{"line":9,"column":23},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-unixfs/src/index.js"},{"name":"multicodec","loc":{"line":10,"column":19},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multicodec/src/index.js"},{"name":"multihashing-async","loc":{"line":11,"column":19},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multihashing-async/src/index.js"},{"name":"it-last","loc":{"line":12,"column":21},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/it-last/index.js"}],"generated":{"js":"'use strict'\n\nconst {\n  DAGNode\n} = require('ipld-dag-pb')\nconst Bucket = require('hamt-sharding/src/bucket')\nconst DirSharded = require('ipfs-unixfs-importer/src/dir-sharded')\nconst log = require('debug')('ipfs:mfs:core:utils:hamt-utils')\nconst UnixFS = require('ipfs-unixfs')\nconst mc = require('multicodec')\nconst mh = require('multihashing-async').multihash\nconst last = require('it-last')\n\nconst updateHamtDirectory = async (context, links, bucket, options) => {\n  // update parent with new bit field\n  const data = Uint8Array.from(bucket._children.bitField().reverse())\n  const node = UnixFS.unmarshal(options.parent.Data)\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: bucket.tableSize(),\n    hashType: DirSharded.hashFn.code,\n    mode: node.mode,\n    mtime: node.mtime\n  })\n\n  const hashAlg = mh.names[options.hashAlg]\n  const parent = new DAGNode(dir.marshal(), links)\n  const cid = await context.ipld.put(parent, mc.DAG_PB, {\n    cidVersion: options.cidVersion,\n    hashAlg,\n    onlyHash: !options.flush\n  })\n\n  return {\n    node: parent,\n    cid,\n    size: parent.size\n  }\n}\n\nconst recreateHamtLevel = async (links, rootBucket, parentBucket, positionAtParent) => {\n  // recreate this level of the HAMT\n  const bucket = new Bucket({\n    hashFn: DirSharded.hashFn,\n    hash: parentBucket ? parentBucket._options.hash : undefined\n  }, parentBucket, positionAtParent)\n\n  if (parentBucket) {\n    parentBucket._putObjectAt(positionAtParent, bucket)\n  }\n\n  await addLinksToHamtBucket(links, bucket, rootBucket)\n\n  return bucket\n}\n\nconst addLinksToHamtBucket = async (links, bucket, rootBucket) => {\n  await Promise.all(\n    links.map(link => {\n      if (link.Name.length === 2) {\n        const pos = parseInt(link.Name, 16)\n\n        bucket._putObjectAt(pos, new Bucket({\n          hashFn: DirSharded.hashFn\n        }, bucket, pos))\n\n        return Promise.resolve()\n      }\n\n      return (rootBucket || bucket).put(link.Name.substring(2), {\n        size: link.Tsize,\n        cid: link.Hash\n      })\n    })\n  )\n}\n\nconst toPrefix = (position) => {\n  return position\n    .toString('16')\n    .toUpperCase()\n    .padStart(2, '0')\n    .substring(0, 2)\n}\n\nconst generatePath = async (context, fileName, rootNode) => {\n  // start at the root bucket and descend, loading nodes as we go\n  const rootBucket = await recreateHamtLevel(rootNode.Links, null, null, null)\n  const position = await rootBucket._findNewBucketAndPos(fileName)\n\n  // the path to the root bucket\n  const path = [{\n    bucket: position.bucket,\n    prefix: toPrefix(position.pos)\n  }]\n  let currentBucket = position.bucket\n\n  while (currentBucket !== rootBucket) {\n    path.push({\n      bucket: currentBucket,\n      prefix: toPrefix(currentBucket._posAtParent)\n    })\n\n    currentBucket = currentBucket._parent\n  }\n\n  path.reverse()\n  path[0].node = rootNode\n\n  // load DAGNode for each path segment\n  for (let i = 0; i < path.length; i++) {\n    const segment = path[i]\n\n    // find prefix in links\n    const link = segment.node.Links\n      .filter(link => link.Name.substring(0, 2) === segment.prefix)\n      .pop()\n\n    // entry was not in shard\n    if (!link) {\n      // reached bottom of tree, file will be added to the current bucket\n      log(`Link ${segment.prefix}${fileName} will be added`)\n      // return path\n      continue\n    }\n\n    // found entry\n    if (link.Name === `${segment.prefix}${fileName}`) {\n      log(`Link ${segment.prefix}${fileName} will be replaced`)\n      // file already existed, file will be added to the current bucket\n      // return path\n      continue\n    }\n\n    // found subshard\n    log(`Found subshard ${segment.prefix}`)\n    const node = await context.ipld.get(link.Hash)\n\n    // subshard hasn't been loaded, descend to the next level of the HAMT\n    if (!path[i + 1]) {\n      log(`Loaded new subshard ${segment.prefix}`)\n\n      await recreateHamtLevel(node.Links, rootBucket, segment.bucket, parseInt(segment.prefix, 16))\n      const position = await rootBucket._findNewBucketAndPos(fileName)\n\n      // i--\n      path.push({\n        bucket: position.bucket,\n        prefix: toPrefix(position.pos),\n        node: node\n      })\n\n      continue\n    }\n\n    const nextSegment = path[i + 1]\n\n    // add intermediate links to bucket\n    await addLinksToHamtBucket(node.Links, nextSegment.bucket, rootBucket)\n\n    nextSegment.node = node\n  }\n\n  await rootBucket.put(fileName, true)\n\n  path.reverse()\n\n  return {\n    rootBucket,\n    path\n  }\n}\n\nconst createShard = async (context, contents, options) => {\n  const shard = new DirSharded({\n    root: true,\n    dir: true,\n    parent: null,\n    parentKey: null,\n    path: '',\n    dirty: true,\n    flat: false,\n    mtime: options.mtime,\n    mode: options.mode\n  }, {\n    ...options,\n    codec: 'dag-pb'\n  })\n\n  for (let i = 0; i < contents.length; i++) {\n    await shard._bucket.put(contents[i].name, {\n      size: contents[i].size,\n      cid: contents[i].cid\n    })\n  }\n\n  return last(shard.flush('', context.block, null))\n}\n\nmodule.exports = {\n  generatePath,\n  updateHamtDirectory,\n  recreateHamtLevel,\n  addLinksToHamtBucket,\n  toPrefix,\n  createShard\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/files/utils/hamt-utils.js":"'use strict'\n\nconst {\n  DAGNode\n} = require('ipld-dag-pb')\nconst Bucket = require('hamt-sharding/src/bucket')\nconst DirSharded = require('ipfs-unixfs-importer/src/dir-sharded')\nconst log = require('debug')('ipfs:mfs:core:utils:hamt-utils')\nconst UnixFS = require('ipfs-unixfs')\nconst mc = require('multicodec')\nconst mh = require('multihashing-async').multihash\nconst last = require('it-last')\n\nconst updateHamtDirectory = async (context, links, bucket, options) => {\n  // update parent with new bit field\n  const data = Uint8Array.from(bucket._children.bitField().reverse())\n  const node = UnixFS.unmarshal(options.parent.Data)\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: bucket.tableSize(),\n    hashType: DirSharded.hashFn.code,\n    mode: node.mode,\n    mtime: node.mtime\n  })\n\n  const hashAlg = mh.names[options.hashAlg]\n  const parent = new DAGNode(dir.marshal(), links)\n  const cid = await context.ipld.put(parent, mc.DAG_PB, {\n    cidVersion: options.cidVersion,\n    hashAlg,\n    onlyHash: !options.flush\n  })\n\n  return {\n    node: parent,\n    cid,\n    size: parent.size\n  }\n}\n\nconst recreateHamtLevel = async (links, rootBucket, parentBucket, positionAtParent) => {\n  // recreate this level of the HAMT\n  const bucket = new Bucket({\n    hashFn: DirSharded.hashFn,\n    hash: parentBucket ? parentBucket._options.hash : undefined\n  }, parentBucket, positionAtParent)\n\n  if (parentBucket) {\n    parentBucket._putObjectAt(positionAtParent, bucket)\n  }\n\n  await addLinksToHamtBucket(links, bucket, rootBucket)\n\n  return bucket\n}\n\nconst addLinksToHamtBucket = async (links, bucket, rootBucket) => {\n  await Promise.all(\n    links.map(link => {\n      if (link.Name.length === 2) {\n        const pos = parseInt(link.Name, 16)\n\n        bucket._putObjectAt(pos, new Bucket({\n          hashFn: DirSharded.hashFn\n        }, bucket, pos))\n\n        return Promise.resolve()\n      }\n\n      return (rootBucket || bucket).put(link.Name.substring(2), {\n        size: link.Tsize,\n        cid: link.Hash\n      })\n    })\n  )\n}\n\nconst toPrefix = (position) => {\n  return position\n    .toString('16')\n    .toUpperCase()\n    .padStart(2, '0')\n    .substring(0, 2)\n}\n\nconst generatePath = async (context, fileName, rootNode) => {\n  // start at the root bucket and descend, loading nodes as we go\n  const rootBucket = await recreateHamtLevel(rootNode.Links, null, null, null)\n  const position = await rootBucket._findNewBucketAndPos(fileName)\n\n  // the path to the root bucket\n  const path = [{\n    bucket: position.bucket,\n    prefix: toPrefix(position.pos)\n  }]\n  let currentBucket = position.bucket\n\n  while (currentBucket !== rootBucket) {\n    path.push({\n      bucket: currentBucket,\n      prefix: toPrefix(currentBucket._posAtParent)\n    })\n\n    currentBucket = currentBucket._parent\n  }\n\n  path.reverse()\n  path[0].node = rootNode\n\n  // load DAGNode for each path segment\n  for (let i = 0; i < path.length; i++) {\n    const segment = path[i]\n\n    // find prefix in links\n    const link = segment.node.Links\n      .filter(link => link.Name.substring(0, 2) === segment.prefix)\n      .pop()\n\n    // entry was not in shard\n    if (!link) {\n      // reached bottom of tree, file will be added to the current bucket\n      log(`Link ${segment.prefix}${fileName} will be added`)\n      // return path\n      continue\n    }\n\n    // found entry\n    if (link.Name === `${segment.prefix}${fileName}`) {\n      log(`Link ${segment.prefix}${fileName} will be replaced`)\n      // file already existed, file will be added to the current bucket\n      // return path\n      continue\n    }\n\n    // found subshard\n    log(`Found subshard ${segment.prefix}`)\n    const node = await context.ipld.get(link.Hash)\n\n    // subshard hasn't been loaded, descend to the next level of the HAMT\n    if (!path[i + 1]) {\n      log(`Loaded new subshard ${segment.prefix}`)\n\n      await recreateHamtLevel(node.Links, rootBucket, segment.bucket, parseInt(segment.prefix, 16))\n      const position = await rootBucket._findNewBucketAndPos(fileName)\n\n      // i--\n      path.push({\n        bucket: position.bucket,\n        prefix: toPrefix(position.pos),\n        node: node\n      })\n\n      continue\n    }\n\n    const nextSegment = path[i + 1]\n\n    // add intermediate links to bucket\n    await addLinksToHamtBucket(node.Links, nextSegment.bucket, rootBucket)\n\n    nextSegment.node = node\n  }\n\n  await rootBucket.put(fileName, true)\n\n  path.reverse()\n\n  return {\n    rootBucket,\n    path\n  }\n}\n\nconst createShard = async (context, contents, options) => {\n  const shard = new DirSharded({\n    root: true,\n    dir: true,\n    parent: null,\n    parentKey: null,\n    path: '',\n    dirty: true,\n    flat: false,\n    mtime: options.mtime,\n    mode: options.mode\n  }, {\n    ...options,\n    codec: 'dag-pb'\n  })\n\n  for (let i = 0; i < contents.length; i++) {\n    await shard._bucket.put(contents[i].name, {\n      size: contents[i].size,\n      cid: contents[i].cid\n    })\n  }\n\n  return last(shard.flush('', context.block, null))\n}\n\nmodule.exports = {\n  generatePath,\n  updateHamtDirectory,\n  recreateHamtLevel,\n  addLinksToHamtBucket,\n  toPrefix,\n  createShard\n}\n"},"lineCount":209}},"error":null,"hash":"0bdd74efcb63610fcebef87fa1faa5ec","cacheData":{"env":{}}}