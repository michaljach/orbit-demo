{"id":"../node_modules/libp2p/src/circuit/utils.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/libp2p/package.json","includedInParent":true,"mtime":1612441378238},{"name":"cids","loc":{"line":3,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p/src/circuit/utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/cids/src/index.js"},{"name":"multihashing-async","loc":{"line":4,"column":29},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p/src/circuit/utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multihashing-async/src/index.js"},{"name":"ipfs-utils/src/text-encoder","loc":{"line":6,"column":28},"parent":"/Users/michaljach/Sites/golf/node_modules/libp2p/src/circuit/utils.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-utils/src/text-encoder.js"}],"generated":{"js":"'use strict';\n\nconst CID = require('cids');\n\nconst multihashing = require('multihashing-async');\n\nconst TextEncoder = require('ipfs-utils/src/text-encoder');\n/**\n * Convert a namespace string into a cid.\n *\n * @param {string} namespace\n * @returns {Promise<CID>}\n */\n\n\nmodule.exports.namespaceToCid = async namespace => {\n  const bytes = new TextEncoder().encode(namespace);\n  const hash = await multihashing(bytes, 'sha2-256');\n  return new CID(hash);\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":3,"column":0}},{"name":"CID","generated":{"line":3,"column":6},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":3,"column":6}},{"generated":{"line":3,"column":9},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":3,"column":9}},{"name":"require","generated":{"line":3,"column":12},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":3,"column":12}},{"generated":{"line":3,"column":19},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":3,"column":19}},{"generated":{"line":3,"column":20},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":3,"column":20}},{"generated":{"line":3,"column":26},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":3,"column":19}},{"generated":{"line":3,"column":27},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":3,"column":0}},{"generated":{"line":5,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":4,"column":0}},{"name":"multihashing","generated":{"line":5,"column":6},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":4,"column":6}},{"generated":{"line":5,"column":18},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":4,"column":18}},{"name":"require","generated":{"line":5,"column":21},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":4,"column":21}},{"generated":{"line":5,"column":28},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":4,"column":28}},{"generated":{"line":5,"column":29},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":4,"column":29}},{"generated":{"line":5,"column":49},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":4,"column":28}},{"generated":{"line":5,"column":50},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":4,"column":0}},{"generated":{"line":7,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":6,"column":0}},{"name":"TextEncoder","generated":{"line":7,"column":6},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":6,"column":6}},{"generated":{"line":7,"column":17},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":6,"column":17}},{"name":"require","generated":{"line":7,"column":20},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":6,"column":20}},{"generated":{"line":7,"column":27},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":6,"column":27}},{"generated":{"line":7,"column":28},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":6,"column":28}},{"generated":{"line":7,"column":57},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":6,"column":27}},{"generated":{"line":7,"column":58},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":6,"column":0}},{"generated":{"line":8,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":12,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":13,"column":0}},{"name":"module","generated":{"line":16,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":14,"column":0}},{"generated":{"line":16,"column":6},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":14,"column":6}},{"name":"exports","generated":{"line":16,"column":7},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":14,"column":7}},{"generated":{"line":16,"column":14},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":14,"column":0}},{"name":"namespaceToCid","generated":{"line":16,"column":15},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":14,"column":15}},{"generated":{"line":16,"column":29},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":14,"column":0}},{"generated":{"line":16,"column":32},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":14,"column":32}},{"name":"namespace","generated":{"line":16,"column":38},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":14,"column":39}},{"generated":{"line":16,"column":47},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":14,"column":32}},{"generated":{"line":16,"column":51},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":14,"column":53}},{"generated":{"line":17,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":15,"column":2}},{"name":"bytes","generated":{"line":17,"column":8},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":15,"column":8}},{"generated":{"line":17,"column":13},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":15,"column":13}},{"generated":{"line":17,"column":16},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":15,"column":16}},{"name":"TextEncoder","generated":{"line":17,"column":20},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":15,"column":20}},{"generated":{"line":17,"column":31},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":15,"column":16}},{"name":"encode","generated":{"line":17,"column":34},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":15,"column":34}},{"generated":{"line":17,"column":40},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":15,"column":16}},{"name":"namespace","generated":{"line":17,"column":41},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":15,"column":41}},{"generated":{"line":17,"column":50},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":15,"column":16}},{"generated":{"line":17,"column":51},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":15,"column":2}},{"generated":{"line":18,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":16,"column":2}},{"name":"hash","generated":{"line":18,"column":8},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":16,"column":8}},{"generated":{"line":18,"column":12},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":16,"column":12}},{"generated":{"line":18,"column":15},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":16,"column":15}},{"name":"multihashing","generated":{"line":18,"column":21},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":16,"column":21}},{"generated":{"line":18,"column":33},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":16,"column":33}},{"name":"bytes","generated":{"line":18,"column":34},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":16,"column":34}},{"generated":{"line":18,"column":39},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":16,"column":33}},{"generated":{"line":18,"column":41},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":16,"column":41}},{"generated":{"line":18,"column":51},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":16,"column":33}},{"generated":{"line":18,"column":52},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":16,"column":2}},{"generated":{"line":19,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":18,"column":2}},{"generated":{"line":19,"column":9},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":18,"column":9}},{"name":"CID","generated":{"line":19,"column":13},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":18,"column":13}},{"generated":{"line":19,"column":16},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":18,"column":9}},{"name":"hash","generated":{"line":19,"column":17},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":18,"column":17}},{"generated":{"line":19,"column":21},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":18,"column":9}},{"generated":{"line":19,"column":22},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":18,"column":2}},{"generated":{"line":20,"column":0},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":19,"column":1}},{"generated":{"line":20,"column":1},"source":"../node_modules/libp2p/src/circuit/utils.js","original":{"line":14,"column":0}}],"sources":{"../node_modules/libp2p/src/circuit/utils.js":"'use strict'\n\nconst CID = require('cids')\nconst multihashing = require('multihashing-async')\n\nconst TextEncoder = require('ipfs-utils/src/text-encoder')\n\n/**\n * Convert a namespace string into a cid.\n *\n * @param {string} namespace\n * @returns {Promise<CID>}\n */\nmodule.exports.namespaceToCid = async (namespace) => {\n  const bytes = new TextEncoder().encode(namespace)\n  const hash = await multihashing(bytes, 'sha2-256')\n\n  return new CID(hash)\n}\n"},"lineCount":null}},"error":null,"hash":"46b13c0c23b328cf96a99ab3a88ff65e","cacheData":{"env":{}}}