{"id":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/package.json","includedInParent":true,"mtime":1612441943157}],"generated":{"js":"'use strict'\n\nclass IdentityProvider {\n  /* Return id of identity (to be signed by orbit-db public key) */\n  async getId (options) {}\n\n  /* Return signature of OrbitDB public key signature */\n  async signIdentity (data, options) {}\n\n  /* Verify a signature of OrbitDB public key signature */\n  static async verifyIdentity (identity) {}\n\n  /* Return the type for this identity provider */\n  static get type () {\n    throw new Error(`'static get type ()' needs to be defined in the inheriting class`)\n  }\n\n  /*\n    Return the type for this identity-procider\n    NOTE! This is the only property of the interface that\n    shouldn't be overridden in the inherited IdentityProvider\n  */\n  get type () {\n    return this.constructor.type\n  }\n}\n\nmodule.exports = IdentityProvider\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"../node_modules/orbit-db-identity-provider/src/identity-provider-interface.js":"'use strict'\n\nclass IdentityProvider {\n  /* Return id of identity (to be signed by orbit-db public key) */\n  async getId (options) {}\n\n  /* Return signature of OrbitDB public key signature */\n  async signIdentity (data, options) {}\n\n  /* Verify a signature of OrbitDB public key signature */\n  static async verifyIdentity (identity) {}\n\n  /* Return the type for this identity provider */\n  static get type () {\n    throw new Error(`'static get type ()' needs to be defined in the inheriting class`)\n  }\n\n  /*\n    Return the type for this identity-procider\n    NOTE! This is the only property of the interface that\n    shouldn't be overridden in the inherited IdentityProvider\n  */\n  get type () {\n    return this.constructor.type\n  }\n}\n\nmodule.exports = IdentityProvider\n"},"lineCount":29}},"error":null,"hash":"e1f21de64ead7db6f3ae7a5e01a360e0","cacheData":{"env":{}}}