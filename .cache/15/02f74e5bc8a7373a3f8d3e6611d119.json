{"id":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/package.json","includedInParent":true,"mtime":1612441943157},{"name":"./identity-provider-interface","loc":{"line":2,"column":33},"parent":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","resolved":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/src/identity-provider-interface.js"},{"name":"orbit-db-keystore","loc":{"line":3,"column":25},"parent":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","resolved":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/keystore.js"}],"generated":{"js":"'use strict'\nconst IdentityProvider = require('./identity-provider-interface')\nconst Keystore = require('orbit-db-keystore')\nconst type = 'orbitdb'\n\nclass OrbitDBIdentityProvider extends IdentityProvider {\n  constructor (keystore) {\n    super()\n    if (!keystore) {\n      throw new Error('OrbitDBIdentityProvider requires a keystore')\n    }\n    this._keystore = keystore\n  }\n\n  // Returns the type of the identity provider\n  static get type () { return type }\n\n  async getId (options = {}) {\n    const id = options.id\n    if (!id) {\n      throw new Error('id is required')\n    }\n\n    const keystore = this._keystore\n    const key = await keystore.getKey(id) || await keystore.createKey(id)\n    return key.public.marshal().toString('hex')\n  }\n\n  async signIdentity (data, options = {}) {\n    const id = options.id\n    if (!id) {\n      throw new Error('id is required')\n    }\n    const keystore = this._keystore\n    const key = await keystore.getKey(id)\n    if (!key) {\n      throw new Error(`Signing key for '${id}' not found`)\n    }\n\n    return keystore.sign(key, data)\n  }\n\n  static async verifyIdentity (identity) {\n    // Verify that identity was signed by the ID\n    return Keystore.verify(\n      identity.signatures.publicKey,\n      identity.id,\n      identity.publicKey + identity.signatures.id\n    )\n  }\n}\n\nmodule.exports = OrbitDBIdentityProvider\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}}],"sources":{"../node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js":"'use strict'\nconst IdentityProvider = require('./identity-provider-interface')\nconst Keystore = require('orbit-db-keystore')\nconst type = 'orbitdb'\n\nclass OrbitDBIdentityProvider extends IdentityProvider {\n  constructor (keystore) {\n    super()\n    if (!keystore) {\n      throw new Error('OrbitDBIdentityProvider requires a keystore')\n    }\n    this._keystore = keystore\n  }\n\n  // Returns the type of the identity provider\n  static get type () { return type }\n\n  async getId (options = {}) {\n    const id = options.id\n    if (!id) {\n      throw new Error('id is required')\n    }\n\n    const keystore = this._keystore\n    const key = await keystore.getKey(id) || await keystore.createKey(id)\n    return key.public.marshal().toString('hex')\n  }\n\n  async signIdentity (data, options = {}) {\n    const id = options.id\n    if (!id) {\n      throw new Error('id is required')\n    }\n    const keystore = this._keystore\n    const key = await keystore.getKey(id)\n    if (!key) {\n      throw new Error(`Signing key for '${id}' not found`)\n    }\n\n    return keystore.sign(key, data)\n  }\n\n  static async verifyIdentity (identity) {\n    // Verify that identity was signed by the ID\n    return Keystore.verify(\n      identity.signatures.publicKey,\n      identity.id,\n      identity.publicKey + identity.signatures.id\n    )\n  }\n}\n\nmodule.exports = OrbitDBIdentityProvider\n"},"lineCount":54}},"error":null,"hash":"ff01fdae831a376adb8943a7a67ed4f8","cacheData":{"env":{}}}