{"id":"../node_modules/ipfs-core/src/components/pin/add.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"it-last","loc":{"line":3,"column":21},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/pin/add.js","resolved":"/Users/michaljach/Sites/golf/node_modules/it-last/index.js"}],"generated":{"js":"'use strict'\n\nconst last = require('it-last')\n\n/**\n * @param {Object} config\n * @param {ReturnType<typeof import('./add-all')>} config.addAll\n */\nmodule.exports = ({ addAll }) =>\n  /**\n   * @param {CID|string} path\n   * @param {AddOptions & AbortOptions} [options]\n   * @returns {Promise<CID>}\n   */\n  async (path, options = {}) =>\n    /** @type {CID} - Need to loosen check here because it could be void */\n    (await last(addAll({ path, ...options }, options)))\n\n/**\n * @typedef {Object} AddOptions\n * @property {boolean} [lock]\n * @property {boolean} [recursive] - Recursively pin all links contained by the object\n *\n * @typedef {import('../../utils').AbortOptions} AbortOptions\n * @typedef {import('..').CID} CID\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/add.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/pin/add.js":"'use strict'\n\nconst last = require('it-last')\n\n/**\n * @param {Object} config\n * @param {ReturnType<typeof import('./add-all')>} config.addAll\n */\nmodule.exports = ({ addAll }) =>\n  /**\n   * @param {CID|string} path\n   * @param {AddOptions & AbortOptions} [options]\n   * @returns {Promise<CID>}\n   */\n  async (path, options = {}) =>\n    /** @type {CID} - Need to loosen check here because it could be void */\n    (await last(addAll({ path, ...options }, options)))\n\n/**\n * @typedef {Object} AddOptions\n * @property {boolean} [lock]\n * @property {boolean} [recursive] - Recursively pin all links contained by the object\n *\n * @typedef {import('../../utils').AbortOptions} AbortOptions\n * @typedef {import('..').CID} CID\n */\n"},"lineCount":27}},"error":null,"hash":"fa0bda267fdab716530a14ce3504a38b","cacheData":{"env":{}}}