{"id":"../node_modules/orbit-db-identity-provider/src/identities.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/package.json","includedInParent":true,"mtime":1612441943157},{"name":"./identity","loc":{"line":2,"column":25},"parent":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/src/identities.js","resolved":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/src/identity.js"},{"name":"./identity-provider-interface.js","loc":{"line":3,"column":33},"parent":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/src/identities.js","resolved":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/src/identity-provider-interface.js"},{"name":"./orbit-db-identity-provider","loc":{"line":4,"column":40},"parent":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/src/identities.js","resolved":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/src/orbit-db-identity-provider.js"},{"name":"orbit-db-keystore","loc":{"line":5,"column":25},"parent":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/src/identities.js","resolved":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/node_modules/orbit-db-keystore/src/keystore.js"},{"name":"lru","loc":{"line":7,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/src/identities.js","resolved":"/Users/michaljach/Sites/golf/node_modules/lru/index.js"},{"name":"path","loc":{"line":8,"column":21},"parent":"/Users/michaljach/Sites/golf/node_modules/orbit-db-identity-provider/src/identities.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/path-browserify/index.js"}],"generated":{"js":"'use strict'\nconst Identity = require('./identity')\nconst IdentityProvider = require('./identity-provider-interface.js')\nconst OrbitDBIdentityProvider = require('./orbit-db-identity-provider')\nconst Keystore = require('orbit-db-keystore')\n\nconst LRU = require('lru')\nconst path = require('path')\n\nconst defaultType = 'orbitdb'\nconst identityKeysPath = path.join('./orbitdb', 'identity', 'identitykeys')\n\nconst supportedTypes = {\n  orbitdb: OrbitDBIdentityProvider\n}\n\nconst getHandlerFor = (type) => {\n  if (!Identities.isSupported(type)) {\n    throw new Error(`IdentityProvider type '${type}' is not supported`)\n  }\n  return supportedTypes[type]\n}\n\nclass Identities {\n  constructor (options) {\n    this._keystore = options.keystore\n    this._signingKeystore = options.signingKeystore || this._keystore\n    this._knownIdentities = options.cache || new LRU(options.cacheSize || 100)\n  }\n\n  static get IdentityProvider () { return IdentityProvider }\n\n  get keystore () { return this._keystore }\n\n  get signingKeystore () { return this._signingKeystore }\n\n  async sign (identity, data) {\n    const signingKey = await this.keystore.getKey(identity.id)\n    if (!signingKey) {\n      throw new Error(`Private signing key not found from Keystore`)\n    }\n    const sig = await this.keystore.sign(signingKey, data)\n    return sig\n  }\n\n  async verify (signature, publicKey, data, verifier = 'v1') {\n    return this.keystore.verify(signature, publicKey, data, verifier)\n  }\n\n  async createIdentity (options = {}) {\n    const keystore = options.keystore || this.keystore\n    const type = options.type || defaultType\n    const identityProvider = type === defaultType ? new OrbitDBIdentityProvider(options.signingKeystore || keystore) : new (getHandlerFor(type))(options)\n    const id = await identityProvider.getId(options)\n\n    if (options.migrate) {\n      await options.migrate({ targetStore: keystore._store, targetId: id })\n    }\n    const { publicKey, idSignature } = await this.signId(id)\n    const pubKeyIdSignature = await identityProvider.signIdentity(publicKey + idSignature, options)\n    return new Identity(id, publicKey, idSignature, pubKeyIdSignature, type, this)\n  }\n\n  async signId (id) {\n    const keystore = this.keystore\n    const key = await keystore.getKey(id) || await keystore.createKey(id)\n    const publicKey = keystore.getPublic(key)\n    const idSignature = await keystore.sign(key, id)\n    return { publicKey, idSignature }\n  }\n\n  async verifyIdentity (identity) {\n    if (!Identity.isIdentity(identity)) {\n      return false\n    }\n\n    const knownID = this._knownIdentities.get(identity.signatures.id)\n    if (knownID) {\n      return identity.id === knownID.id &&\n             identity.publicKey === knownID.publicKey &&\n             identity.signatures.id === knownID.signatures.id &&\n             identity.signatures.publicKey === knownID.signatures.publicKey\n    }\n\n    const verifyIdSig = await this.keystore.verify(\n      identity.signatures.id,\n      identity.publicKey,\n      identity.id\n    )\n    if (!verifyIdSig) return false\n\n    const IdentityProvider = getHandlerFor(identity.type)\n    const verified = await IdentityProvider.verifyIdentity(identity)\n    if (verified) {\n      this._knownIdentities.set(identity.signatures.id, Identity.toJSON(identity))\n    }\n\n    return verified\n  }\n\n  static async verifyIdentity (identity) {\n    if (!Identity.isIdentity(identity)) {\n      return false\n    }\n\n    const verifyIdSig = await Keystore.verify(\n      identity.signatures.id,\n      identity.publicKey,\n      identity.id\n    )\n\n    if (!verifyIdSig) return false\n\n    const IdentityProvider = getHandlerFor(identity.type)\n    return IdentityProvider.verifyIdentity(identity)\n  }\n\n  static async createIdentity (options = {}) {\n    if (!options.keystore) {\n      options.keystore = new Keystore(options.identityKeysPath || identityKeysPath)\n    }\n    if (!options.signingKeystore) {\n      if (options.signingKeysPath) {\n        options.signingKeystore = new Keystore(options.signingKeysPath)\n      } else {\n        options.signingKeystore = options.keystore\n      }\n    }\n    options = Object.assign({}, { type: defaultType }, options)\n    const identities = new Identities(options)\n    return identities.createIdentity(options)\n  }\n\n  static isSupported (type) {\n    return Object.keys(supportedTypes).includes(type)\n  }\n\n  static addIdentityProvider (IdentityProvider) {\n    if (!IdentityProvider) {\n      throw new Error('IdentityProvider class needs to be given as an option')\n    }\n\n    if (!IdentityProvider.type ||\n      typeof IdentityProvider.type !== 'string') {\n      throw new Error('Given IdentityProvider class needs to implement: static get type() { /* return a string */}.')\n    }\n\n    supportedTypes[IdentityProvider.type] = IdentityProvider\n  }\n\n  static removeIdentityProvider (type) {\n    delete supportedTypes[type]\n  }\n}\n\nmodule.exports = Identities\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/orbit-db-identity-provider/src/identities.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}}],"sources":{"../node_modules/orbit-db-identity-provider/src/identities.js":"'use strict'\nconst Identity = require('./identity')\nconst IdentityProvider = require('./identity-provider-interface.js')\nconst OrbitDBIdentityProvider = require('./orbit-db-identity-provider')\nconst Keystore = require('orbit-db-keystore')\n\nconst LRU = require('lru')\nconst path = require('path')\n\nconst defaultType = 'orbitdb'\nconst identityKeysPath = path.join('./orbitdb', 'identity', 'identitykeys')\n\nconst supportedTypes = {\n  orbitdb: OrbitDBIdentityProvider\n}\n\nconst getHandlerFor = (type) => {\n  if (!Identities.isSupported(type)) {\n    throw new Error(`IdentityProvider type '${type}' is not supported`)\n  }\n  return supportedTypes[type]\n}\n\nclass Identities {\n  constructor (options) {\n    this._keystore = options.keystore\n    this._signingKeystore = options.signingKeystore || this._keystore\n    this._knownIdentities = options.cache || new LRU(options.cacheSize || 100)\n  }\n\n  static get IdentityProvider () { return IdentityProvider }\n\n  get keystore () { return this._keystore }\n\n  get signingKeystore () { return this._signingKeystore }\n\n  async sign (identity, data) {\n    const signingKey = await this.keystore.getKey(identity.id)\n    if (!signingKey) {\n      throw new Error(`Private signing key not found from Keystore`)\n    }\n    const sig = await this.keystore.sign(signingKey, data)\n    return sig\n  }\n\n  async verify (signature, publicKey, data, verifier = 'v1') {\n    return this.keystore.verify(signature, publicKey, data, verifier)\n  }\n\n  async createIdentity (options = {}) {\n    const keystore = options.keystore || this.keystore\n    const type = options.type || defaultType\n    const identityProvider = type === defaultType ? new OrbitDBIdentityProvider(options.signingKeystore || keystore) : new (getHandlerFor(type))(options)\n    const id = await identityProvider.getId(options)\n\n    if (options.migrate) {\n      await options.migrate({ targetStore: keystore._store, targetId: id })\n    }\n    const { publicKey, idSignature } = await this.signId(id)\n    const pubKeyIdSignature = await identityProvider.signIdentity(publicKey + idSignature, options)\n    return new Identity(id, publicKey, idSignature, pubKeyIdSignature, type, this)\n  }\n\n  async signId (id) {\n    const keystore = this.keystore\n    const key = await keystore.getKey(id) || await keystore.createKey(id)\n    const publicKey = keystore.getPublic(key)\n    const idSignature = await keystore.sign(key, id)\n    return { publicKey, idSignature }\n  }\n\n  async verifyIdentity (identity) {\n    if (!Identity.isIdentity(identity)) {\n      return false\n    }\n\n    const knownID = this._knownIdentities.get(identity.signatures.id)\n    if (knownID) {\n      return identity.id === knownID.id &&\n             identity.publicKey === knownID.publicKey &&\n             identity.signatures.id === knownID.signatures.id &&\n             identity.signatures.publicKey === knownID.signatures.publicKey\n    }\n\n    const verifyIdSig = await this.keystore.verify(\n      identity.signatures.id,\n      identity.publicKey,\n      identity.id\n    )\n    if (!verifyIdSig) return false\n\n    const IdentityProvider = getHandlerFor(identity.type)\n    const verified = await IdentityProvider.verifyIdentity(identity)\n    if (verified) {\n      this._knownIdentities.set(identity.signatures.id, Identity.toJSON(identity))\n    }\n\n    return verified\n  }\n\n  static async verifyIdentity (identity) {\n    if (!Identity.isIdentity(identity)) {\n      return false\n    }\n\n    const verifyIdSig = await Keystore.verify(\n      identity.signatures.id,\n      identity.publicKey,\n      identity.id\n    )\n\n    if (!verifyIdSig) return false\n\n    const IdentityProvider = getHandlerFor(identity.type)\n    return IdentityProvider.verifyIdentity(identity)\n  }\n\n  static async createIdentity (options = {}) {\n    if (!options.keystore) {\n      options.keystore = new Keystore(options.identityKeysPath || identityKeysPath)\n    }\n    if (!options.signingKeystore) {\n      if (options.signingKeysPath) {\n        options.signingKeystore = new Keystore(options.signingKeysPath)\n      } else {\n        options.signingKeystore = options.keystore\n      }\n    }\n    options = Object.assign({}, { type: defaultType }, options)\n    const identities = new Identities(options)\n    return identities.createIdentity(options)\n  }\n\n  static isSupported (type) {\n    return Object.keys(supportedTypes).includes(type)\n  }\n\n  static addIdentityProvider (IdentityProvider) {\n    if (!IdentityProvider) {\n      throw new Error('IdentityProvider class needs to be given as an option')\n    }\n\n    if (!IdentityProvider.type ||\n      typeof IdentityProvider.type !== 'string') {\n      throw new Error('Given IdentityProvider class needs to implement: static get type() { /* return a string */}.')\n    }\n\n    supportedTypes[IdentityProvider.type] = IdentityProvider\n  }\n\n  static removeIdentityProvider (type) {\n    delete supportedTypes[type]\n  }\n}\n\nmodule.exports = Identities\n"},"lineCount":157}},"error":null,"hash":"3c16eb4fd07dd9e79bdf4308670af1e3","cacheData":{"env":{}}}