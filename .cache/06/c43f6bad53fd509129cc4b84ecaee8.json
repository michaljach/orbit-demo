{"id":"../node_modules/multicodec/src/constants.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/multicodec/package.json","includedInParent":true,"mtime":1612441378454},{"name":"./base-table","loc":{"line":5,"column":30},"parent":"/Users/michaljach/Sites/golf/node_modules/multicodec/src/constants.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multicodec/src/base-table.js"}],"generated":{"js":"'use strict'\n\n/** @typedef {import('./generated-types').ConstantNumberMap} ConstantNumberMap */\n\nconst { baseTable } = require('./base-table')\n\nconst constants = /** @type {ConstantNumberMap} */({})\n\nfor (const [name, code] of Object.entries(baseTable)) {\n  const constant = name.toUpperCase().replace(/-/g, '_')\n  constants[constant] = code\n}\n\nmodule.exports = Object.freeze(constants)\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/multicodec/src/constants.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/multicodec/src/constants.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/multicodec/src/constants.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/multicodec/src/constants.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/multicodec/src/constants.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/multicodec/src/constants.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/multicodec/src/constants.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/multicodec/src/constants.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/multicodec/src/constants.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/multicodec/src/constants.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/multicodec/src/constants.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/multicodec/src/constants.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/multicodec/src/constants.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/multicodec/src/constants.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/multicodec/src/constants.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}}],"sources":{"../node_modules/multicodec/src/constants.js":"'use strict'\n\n/** @typedef {import('./generated-types').ConstantNumberMap} ConstantNumberMap */\n\nconst { baseTable } = require('./base-table')\n\nconst constants = /** @type {ConstantNumberMap} */({})\n\nfor (const [name, code] of Object.entries(baseTable)) {\n  const constant = name.toUpperCase().replace(/-/g, '_')\n  constants[constant] = code\n}\n\nmodule.exports = Object.freeze(constants)\n"},"lineCount":15}},"error":null,"hash":"81eb69ff184cd348000a6de5972f9aab","cacheData":{"env":{}}}