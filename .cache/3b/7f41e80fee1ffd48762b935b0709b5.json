{"id":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/package.json","includedInParent":true,"mtime":1612441378236},{"name":"protons","loc":{"line":2,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-bitswap/src/types/message/message.proto.js","resolved":"/Users/michaljach/Sites/golf/node_modules/protons/src/index.js"}],"generated":{"js":"'use strict'\nconst protons = require('protons')\n// from: https://github.com/ipfs/go-ipfs/blob/master/exchange/bitswap/message/pb/message.proto\n\nmodule.exports = protons(`\n  message Message {\n    message Wantlist {\n      enum WantType {\n        Block = 0;\n        Have = 1;\n      }\n\n      message Entry {\n        // changed from string to bytes, it makes a difference in JavaScript\n        optional bytes block = 1;      // the block cid (cidV0 in bitswap 1.0.0, cidV1 in bitswap 1.1.0)\n        optional int32 priority = 2;    // the priority (normalized). default to 1\n        optional bool cancel = 3;       // whether this revokes an entry\n        WantType wantType = 4;         // Note: defaults to enum 0, ie Block\n        bool sendDontHave = 5;        // Note: defaults to false\n      }\n\n      repeated Entry entries = 1;       // a list of wantlist entries\n      optional bool full = 2;           // whether this is the full wantlist. default to false\n    }\n\n    message Block {\n      optional bytes prefix = 1;        // CID prefix (cid version, multicodec and multihash prefix (type + length)\n      optional bytes data = 2;\n    }\n\n    enum BlockPresenceType {\n      Have = 0;\n      DontHave = 1;\n    }\n    message BlockPresence {\n      bytes cid = 1;\n      BlockPresenceType type = 2;\n    }\n\n    optional Wantlist wantlist = 1;\n    repeated bytes blocks = 2;          // used to send Blocks in bitswap 1.0.0\n    repeated Block payload = 3;         // used to send Blocks in bitswap 1.1.0\n    repeated BlockPresence blockPresences = 4;\n    int32 pendingBytes = 5;\n  }\n`)\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-bitswap/src/types/message/message.proto.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}}],"sources":{"../node_modules/ipfs-bitswap/src/types/message/message.proto.js":"'use strict'\nconst protons = require('protons')\n// from: https://github.com/ipfs/go-ipfs/blob/master/exchange/bitswap/message/pb/message.proto\n\nmodule.exports = protons(`\n  message Message {\n    message Wantlist {\n      enum WantType {\n        Block = 0;\n        Have = 1;\n      }\n\n      message Entry {\n        // changed from string to bytes, it makes a difference in JavaScript\n        optional bytes block = 1;      // the block cid (cidV0 in bitswap 1.0.0, cidV1 in bitswap 1.1.0)\n        optional int32 priority = 2;    // the priority (normalized). default to 1\n        optional bool cancel = 3;       // whether this revokes an entry\n        WantType wantType = 4;         // Note: defaults to enum 0, ie Block\n        bool sendDontHave = 5;        // Note: defaults to false\n      }\n\n      repeated Entry entries = 1;       // a list of wantlist entries\n      optional bool full = 2;           // whether this is the full wantlist. default to false\n    }\n\n    message Block {\n      optional bytes prefix = 1;        // CID prefix (cid version, multicodec and multihash prefix (type + length)\n      optional bytes data = 2;\n    }\n\n    enum BlockPresenceType {\n      Have = 0;\n      DontHave = 1;\n    }\n    message BlockPresence {\n      bytes cid = 1;\n      BlockPresenceType type = 2;\n    }\n\n    optional Wantlist wantlist = 1;\n    repeated bytes blocks = 2;          // used to send Blocks in bitswap 1.0.0\n    repeated Block payload = 3;         // used to send Blocks in bitswap 1.1.0\n    repeated BlockPresence blockPresences = 4;\n    int32 pendingBytes = 5;\n  }\n`)\n"},"lineCount":47}},"error":null,"hash":"35f90fb7cfec13eb1bbbbae4cc765a73","cacheData":{"env":{}}}