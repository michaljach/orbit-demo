{"id":"../node_modules/level-js/util/serialize.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/level-js/package.json","includedInParent":true,"mtime":1612441378237},{"name":"buffer","loc":{"line":3,"column":21},"parent":"/Users/michaljach/Sites/golf/node_modules/level-js/util/serialize.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"\nvar global = arguments[3];\n'use strict'\n\nvar Buffer = require('buffer').Buffer\n// Returns either a Uint8Array or Buffer (doesn't matter to\n// IndexedDB, because Buffer is a subclass of Uint8Array)\nvar str2bin = (function () {\n  if (global.TextEncoder) {\n    var encoder = new TextEncoder('utf-8')\n    return encoder.encode.bind(encoder)\n  } else {\n    return Buffer.from\n  }\n})()\n\nmodule.exports = function (data, asBuffer) {\n  if (asBuffer) {\n    return Buffer.isBuffer(data) ? data : str2bin(String(data))\n  } else {\n    return String(data)\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/level-js/util/serialize.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/level-js/util/serialize.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}}],"sources":{"../node_modules/level-js/util/serialize.js":"'use strict'\n\nvar Buffer = require('buffer').Buffer\n// Returns either a Uint8Array or Buffer (doesn't matter to\n// IndexedDB, because Buffer is a subclass of Uint8Array)\nvar str2bin = (function () {\n  if (global.TextEncoder) {\n    var encoder = new TextEncoder('utf-8')\n    return encoder.encode.bind(encoder)\n  } else {\n    return Buffer.from\n  }\n})()\n\nmodule.exports = function (data, asBuffer) {\n  if (asBuffer) {\n    return Buffer.isBuffer(data) ? data : str2bin(String(data))\n  } else {\n    return String(data)\n  }\n}\n"},"lineCount":24}},"error":null,"hash":"5b20d9a13a04673edf13e8d1962a78e4","cacheData":{"env":{}}}