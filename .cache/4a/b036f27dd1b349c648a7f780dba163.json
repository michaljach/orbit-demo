{"id":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"err-code","loc":{"line":3,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","resolved":"/Users/michaljach/Sites/golf/node_modules/err-code/index.js"},{"name":"debug","loc":{"line":4,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","resolved":"/Users/michaljach/Sites/golf/node_modules/debug/src/browser.js"},{"name":"../../../utils","loc":{"line":7,"column":12},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/utils.js"},{"name":"uint8arrays/from-string","loc":{"line":8,"column":37},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","resolved":"/Users/michaljach/Sites/golf/node_modules/uint8arrays/from-string.js"}],"generated":{"js":"var global = arguments[3];\n'use strict'\n\nconst errCode = require('err-code')\nconst log = require('debug')('ipfs:mfs:utils:to-async-iterator')\nconst {\n  MFS_MAX_CHUNK_SIZE\n} = require('../../../utils')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nconst toAsyncIterator = (content) => {\n  if (!content) {\n    throw errCode(new Error('paths must start with a leading slash'), 'ERR_INVALID_PATH')\n  }\n\n  if (typeof content === 'string' || content instanceof String) {\n    log('Content was a string')\n\n    content = uint8ArrayFromString(content.toString())\n  }\n\n  if (content.length) {\n    log('Content was array-like')\n\n    return {\n      [Symbol.asyncIterator]: function * bufferContent () {\n        yield content\n      }\n    }\n  }\n\n  if (content[Symbol.asyncIterator]) {\n    log('Content was an async iterator')\n    return content\n  }\n\n  if (content[Symbol.iterator]) {\n    log('Content was an iterator')\n    return content\n  }\n\n  if (global.Blob && content instanceof global.Blob) {\n    // HTML5 Blob objects (including Files)\n    log('Content was an HTML5 Blob')\n\n    let index = 0\n\n    const iterator = {\n      next: () => {\n        if (index > content.size) {\n          return {\n            done: true\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          const chunk = content.slice(index, MFS_MAX_CHUNK_SIZE)\n          index += MFS_MAX_CHUNK_SIZE\n\n          const reader = new global.FileReader()\n\n          const handleLoad = (ev) => {\n            reader.removeEventListener('loadend', handleLoad, false)\n\n            if (ev.error) {\n              return reject(ev.error)\n            }\n\n            resolve({\n              done: false,\n              value: new Uint8Array(/** @type {ArrayBuffer} */(reader.result))\n            })\n          }\n\n          reader.addEventListener('loadend', handleLoad)\n          reader.readAsArrayBuffer(chunk)\n        })\n      }\n    }\n\n    return {\n      [Symbol.asyncIterator]: () => {\n        return iterator\n      }\n    }\n  }\n\n  throw errCode(new Error(`Don't know how to convert ${content} into an async iterator`), 'ERR_INVALID_PARAMS')\n}\n\nmodule.exports = toAsyncIterator\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js":"'use strict'\n\nconst errCode = require('err-code')\nconst log = require('debug')('ipfs:mfs:utils:to-async-iterator')\nconst {\n  MFS_MAX_CHUNK_SIZE\n} = require('../../../utils')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nconst toAsyncIterator = (content) => {\n  if (!content) {\n    throw errCode(new Error('paths must start with a leading slash'), 'ERR_INVALID_PATH')\n  }\n\n  if (typeof content === 'string' || content instanceof String) {\n    log('Content was a string')\n\n    content = uint8ArrayFromString(content.toString())\n  }\n\n  if (content.length) {\n    log('Content was array-like')\n\n    return {\n      [Symbol.asyncIterator]: function * bufferContent () {\n        yield content\n      }\n    }\n  }\n\n  if (content[Symbol.asyncIterator]) {\n    log('Content was an async iterator')\n    return content\n  }\n\n  if (content[Symbol.iterator]) {\n    log('Content was an iterator')\n    return content\n  }\n\n  if (global.Blob && content instanceof global.Blob) {\n    // HTML5 Blob objects (including Files)\n    log('Content was an HTML5 Blob')\n\n    let index = 0\n\n    const iterator = {\n      next: () => {\n        if (index > content.size) {\n          return {\n            done: true\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          const chunk = content.slice(index, MFS_MAX_CHUNK_SIZE)\n          index += MFS_MAX_CHUNK_SIZE\n\n          const reader = new global.FileReader()\n\n          const handleLoad = (ev) => {\n            reader.removeEventListener('loadend', handleLoad, false)\n\n            if (ev.error) {\n              return reject(ev.error)\n            }\n\n            resolve({\n              done: false,\n              value: new Uint8Array(/** @type {ArrayBuffer} */(reader.result))\n            })\n          }\n\n          reader.addEventListener('loadend', handleLoad)\n          reader.readAsArrayBuffer(chunk)\n        })\n      }\n    }\n\n    return {\n      [Symbol.asyncIterator]: () => {\n        return iterator\n      }\n    }\n  }\n\n  throw errCode(new Error(`Don't know how to convert ${content} into an async iterator`), 'ERR_INVALID_PARAMS')\n}\n\nmodule.exports = toAsyncIterator\n"},"lineCount":92}},"error":null,"hash":"96320c285e25bc69e696b4f64e60e1f0","cacheData":{"env":{}}}