{"id":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"cids","loc":{"line":4,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/pin/pin-manager.js","resolved":"/Users/michaljach/Sites/golf/node_modules/cids/src/index.js"},{"name":"err-code","loc":{"line":5,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/pin/pin-manager.js","resolved":"/Users/michaljach/Sites/golf/node_modules/err-code/index.js"},{"name":"dag-cbor-links","loc":{"line":6,"column":29},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/pin/pin-manager.js","resolved":"/Users/michaljach/Sites/golf/node_modules/dag-cbor-links/index.js"},{"name":"debug","loc":{"line":7,"column":22},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/pin/pin-manager.js","resolved":"/Users/michaljach/Sites/golf/node_modules/debug/src/browser.js"},{"name":"it-first","loc":{"line":9,"column":22},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/pin/pin-manager.js","resolved":"/Users/michaljach/Sites/golf/node_modules/it-first/index.js"},{"name":"it-all","loc":{"line":10,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/pin/pin-manager.js","resolved":"/Users/michaljach/Sites/golf/node_modules/it-all/index.js"},{"name":"cbor","loc":{"line":11,"column":21},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/pin/pin-manager.js","resolved":"/Users/michaljach/Sites/golf/node_modules/cbor/lib/cbor.js"},{"name":"multibase","loc":{"line":12,"column":26},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/pin/pin-manager.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multibase/src/index.js"},{"name":"multicodec","loc":{"line":13,"column":27},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/pin/pin-manager.js","resolved":"/Users/michaljach/Sites/golf/node_modules/multicodec/src/index.js"}],"generated":{"js":"/* eslint max-nested-callbacks: [\"error\", 8] */\n'use strict'\n\nconst CID = require('cids')\nconst errCode = require('err-code')\nconst dagCborLinks = require('dag-cbor-links')\nconst debug = require('debug')\n// const parallelBatch = require('it-parallel-batch')\nconst first = require('it-first')\nconst all = require('it-all')\nconst cbor = require('cbor')\nconst multibase = require('multibase')\nconst multicodec = require('multicodec')\n\n// arbitrary limit to the number of concurrent dag operations\n// const WALK_DAG_CONCURRENCY_LIMIT = 300\n// const IS_PINNED_WITH_TYPE_CONCURRENCY_LIMIT = 300\n// const PIN_DS_KEY = new Key('/local/pins')\n\nfunction invalidPinTypeErr (type) {\n  const errMsg = `Invalid type '${type}', must be one of {direct, indirect, recursive, all}`\n  return errCode(new Error(errMsg), 'ERR_INVALID_PIN_TYPE')\n}\n\nconst encoder = multibase.encoding('base32upper')\n\nfunction cidToKey (cid) {\n  return `/${encoder.encode(cid.multihash)}`\n}\n\nfunction keyToMultihash (key) {\n  return encoder.decode(key.toString().slice(1))\n}\n\n/**\n * @typedef {'direct'|'recursive'|'indirect'} PinType\n * @typedef {PinType|'all'} PinQueryType\n */\n\nconst PinTypes = {\n  /** @type {'direct'} */\n  direct: ('direct'),\n  /** @type {'recursive'} */\n  recursive: ('recursive'),\n  /** @type {'indirect'} */\n  indirect: ('indirect'),\n  /** @type {'all'} */\n  all: ('all')\n}\n\nclass PinManager {\n  /**\n   * @param {Object} config\n   * @param {import('.').Repo} config.repo\n   * @param {import('.').DagReader} config.dagReader\n   */\n  constructor ({ repo, dagReader }) {\n    this.repo = repo\n    this.dag = dagReader\n    this.log = debug('ipfs:pin')\n    this.directPins = new Set()\n    this.recursivePins = new Set()\n  }\n\n  /**\n   * @private\n   * @param {CID} cid\n   * @param {Object} options\n   * @param {boolean} [options.preload]\n   */\n  async * _walkDag (cid, { preload = false }) {\n    const { value: node } = await this.dag.get(cid, { preload })\n\n    if (cid.codec === 'dag-pb') {\n      for (const link of node.Links) {\n        yield link.Hash\n        yield * this._walkDag(link.Hash, { preload })\n      }\n    } else if (cid.codec === 'dag-cbor') {\n      for (const [, childCid] of dagCborLinks(node)) {\n        yield childCid\n        yield * this._walkDag(childCid, { preload })\n      }\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinOptions & AbortOptions} [options]\n   * @returns {Promise<void>}\n   */\n  async pinDirectly (cid, options = {}) {\n    await this.dag.get(cid, options)\n\n    const pin = {\n      depth: 0\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.codec !== 'dag-pb') {\n      pin.codec = multicodec.getNumber(cid.codec)\n    }\n\n    if (options.metadata) {\n      pin.metadata = options.metadata\n    }\n\n    return this.repo.pins.put(cidToKey(cid), cbor.encode(pin))\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {AbortOptions} [options]\n   * @returns {Promise<void>}\n   */\n  // eslint-disable-next-line require-await\n  async unpin (cid, options) {\n    return this.repo.pins.delete(cidToKey(cid))\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PreloadOptions & PinOptions & AbortOptions} [options]\n   * @returns {Promise<void>}\n   */\n  async pinRecursively (cid, options = {}) {\n    await this.fetchCompleteDag(cid, options)\n\n    const pin = {\n      depth: Infinity\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.codec !== 'dag-pb') {\n      pin.codec = multicodec.getNumber(cid.codec)\n    }\n\n    if (options.metadata) {\n      pin.metadata = options.metadata\n    }\n\n    await this.repo.pins.put(cidToKey(cid), cbor.encode(pin))\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   * @returns {AsyncIterable<{ cid: CID, metadata: any }>}\n   */\n  async * directKeys (options) {\n    for await (const entry of this.repo.pins.query({\n      filters: [(entry) => {\n        const pin = cbor.decode(entry.value)\n\n        return pin.depth === 0\n      }]\n    })) {\n      const pin = cbor.decode(entry.value)\n      const version = pin.version || 0\n      const codec = pin.codec ? multicodec.getName(pin.codec) : 'dag-pb'\n      const multihash = keyToMultihash(entry.key)\n\n      yield {\n        cid: new CID(version, codec, multihash),\n        metadata: pin.metadata\n      }\n    }\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   * @returns {AsyncIterable<{ cid: CID, metadata: any }>}\n   */\n  async * recursiveKeys (options) {\n    for await (const entry of this.repo.pins.query({\n      filters: [(entry) => {\n        const pin = cbor.decode(entry.value)\n\n        return pin.depth === Infinity\n      }]\n    })) {\n      const pin = cbor.decode(entry.value)\n      const version = pin.version || 0\n      const codec = pin.codec ? multicodec.getName(pin.codec) : 'dag-pb'\n      const multihash = keyToMultihash(entry.key)\n\n      yield {\n        cid: new CID(version, codec, multihash),\n        metadata: pin.metadata\n      }\n    }\n  }\n\n  /**\n   * @param {Object} options\n   * @param {boolean} [options.preload]\n   */\n  async * indirectKeys ({ preload }) {\n    for await (const { cid } of this.recursiveKeys()) {\n      for await (const childCid of this._walkDag(cid, { preload })) {\n        // recursive pins override indirect pins\n        const types = [\n          PinTypes.recursive\n        ]\n\n        const result = await this.isPinnedWithType(childCid, types)\n\n        if (result.pinned) {\n          continue\n        }\n\n        yield childCid\n      }\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinQueryType|PinQueryType[]} types\n   * @param {AbortOptions} [options]\n   */\n  async isPinnedWithType (cid, types, options) {\n    if (!Array.isArray(types)) {\n      types = [types]\n    }\n\n    const all = types.includes(PinTypes.all)\n    const direct = types.includes(PinTypes.direct)\n    const recursive = types.includes(PinTypes.recursive)\n    const indirect = types.includes(PinTypes.indirect)\n\n    if (recursive || direct || all) {\n      const result = await first(this.repo.pins.query({\n        prefix: cidToKey(cid),\n        filters: [entry => {\n          if (all) {\n            return true\n          }\n\n          const pin = cbor.decode(entry.value)\n\n          return types.includes(pin.depth === 0 ? PinTypes.direct : PinTypes.recursive)\n        }],\n        limit: 1\n      }))\n\n      if (result) {\n        const pin = cbor.decode(result.value)\n\n        return {\n          cid,\n          pinned: true,\n          reason: pin.depth === 0 ? PinTypes.direct : PinTypes.recursive,\n          metadata: pin.metadata\n        }\n      }\n    }\n\n    const self = this\n\n    async function * findChild (key, source) {\n      for await (const { cid: parentCid } of source) {\n        for await (const childCid of self._walkDag(parentCid, { preload: false })) {\n          if (childCid.equals(key)) {\n            yield parentCid\n            return\n          }\n        }\n      }\n    }\n\n    if (all || indirect) {\n      // indirect (default)\n      // check each recursive key to see if multihash is under it\n\n      const parentCid = await first(findChild(cid, this.recursiveKeys()))\n\n      if (parentCid) {\n        return {\n          cid,\n          pinned: true,\n          reason: PinTypes.indirect,\n          parent: parentCid\n        }\n      }\n    }\n\n    return {\n      cid,\n      pinned: false\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PreloadOptions & AbortOptions} options\n   */\n  async fetchCompleteDag (cid, options) {\n    await all(this._walkDag(cid, { preload: options.preload }))\n  }\n\n  /**\n   * Throws an error if the pin type is invalid\n   *\n   * @param {any} type\n   * @returns {type is PinType}\n   */\n  static checkPinType (type) {\n    if (typeof type !== 'string' || !Object.keys(PinTypes).includes(type)) {\n      throw invalidPinTypeErr(type)\n    }\n    return true\n  }\n}\n\nPinManager.PinTypes = PinTypes\n\nmodule.exports = PinManager\n\n/**\n * @typedef {Object} PinOptions\n * @property {any} [metadata]\n *\n * @typedef {Object} PreloadOptions\n * @property {boolean} [preload]\n *\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/ipfs-core/src/components/pin/pin-manager.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/pin/pin-manager.js":"/* eslint max-nested-callbacks: [\"error\", 8] */\n'use strict'\n\nconst CID = require('cids')\nconst errCode = require('err-code')\nconst dagCborLinks = require('dag-cbor-links')\nconst debug = require('debug')\n// const parallelBatch = require('it-parallel-batch')\nconst first = require('it-first')\nconst all = require('it-all')\nconst cbor = require('cbor')\nconst multibase = require('multibase')\nconst multicodec = require('multicodec')\n\n// arbitrary limit to the number of concurrent dag operations\n// const WALK_DAG_CONCURRENCY_LIMIT = 300\n// const IS_PINNED_WITH_TYPE_CONCURRENCY_LIMIT = 300\n// const PIN_DS_KEY = new Key('/local/pins')\n\nfunction invalidPinTypeErr (type) {\n  const errMsg = `Invalid type '${type}', must be one of {direct, indirect, recursive, all}`\n  return errCode(new Error(errMsg), 'ERR_INVALID_PIN_TYPE')\n}\n\nconst encoder = multibase.encoding('base32upper')\n\nfunction cidToKey (cid) {\n  return `/${encoder.encode(cid.multihash)}`\n}\n\nfunction keyToMultihash (key) {\n  return encoder.decode(key.toString().slice(1))\n}\n\n/**\n * @typedef {'direct'|'recursive'|'indirect'} PinType\n * @typedef {PinType|'all'} PinQueryType\n */\n\nconst PinTypes = {\n  /** @type {'direct'} */\n  direct: ('direct'),\n  /** @type {'recursive'} */\n  recursive: ('recursive'),\n  /** @type {'indirect'} */\n  indirect: ('indirect'),\n  /** @type {'all'} */\n  all: ('all')\n}\n\nclass PinManager {\n  /**\n   * @param {Object} config\n   * @param {import('.').Repo} config.repo\n   * @param {import('.').DagReader} config.dagReader\n   */\n  constructor ({ repo, dagReader }) {\n    this.repo = repo\n    this.dag = dagReader\n    this.log = debug('ipfs:pin')\n    this.directPins = new Set()\n    this.recursivePins = new Set()\n  }\n\n  /**\n   * @private\n   * @param {CID} cid\n   * @param {Object} options\n   * @param {boolean} [options.preload]\n   */\n  async * _walkDag (cid, { preload = false }) {\n    const { value: node } = await this.dag.get(cid, { preload })\n\n    if (cid.codec === 'dag-pb') {\n      for (const link of node.Links) {\n        yield link.Hash\n        yield * this._walkDag(link.Hash, { preload })\n      }\n    } else if (cid.codec === 'dag-cbor') {\n      for (const [, childCid] of dagCborLinks(node)) {\n        yield childCid\n        yield * this._walkDag(childCid, { preload })\n      }\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinOptions & AbortOptions} [options]\n   * @returns {Promise<void>}\n   */\n  async pinDirectly (cid, options = {}) {\n    await this.dag.get(cid, options)\n\n    const pin = {\n      depth: 0\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.codec !== 'dag-pb') {\n      pin.codec = multicodec.getNumber(cid.codec)\n    }\n\n    if (options.metadata) {\n      pin.metadata = options.metadata\n    }\n\n    return this.repo.pins.put(cidToKey(cid), cbor.encode(pin))\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {AbortOptions} [options]\n   * @returns {Promise<void>}\n   */\n  // eslint-disable-next-line require-await\n  async unpin (cid, options) {\n    return this.repo.pins.delete(cidToKey(cid))\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PreloadOptions & PinOptions & AbortOptions} [options]\n   * @returns {Promise<void>}\n   */\n  async pinRecursively (cid, options = {}) {\n    await this.fetchCompleteDag(cid, options)\n\n    const pin = {\n      depth: Infinity\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.codec !== 'dag-pb') {\n      pin.codec = multicodec.getNumber(cid.codec)\n    }\n\n    if (options.metadata) {\n      pin.metadata = options.metadata\n    }\n\n    await this.repo.pins.put(cidToKey(cid), cbor.encode(pin))\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   * @returns {AsyncIterable<{ cid: CID, metadata: any }>}\n   */\n  async * directKeys (options) {\n    for await (const entry of this.repo.pins.query({\n      filters: [(entry) => {\n        const pin = cbor.decode(entry.value)\n\n        return pin.depth === 0\n      }]\n    })) {\n      const pin = cbor.decode(entry.value)\n      const version = pin.version || 0\n      const codec = pin.codec ? multicodec.getName(pin.codec) : 'dag-pb'\n      const multihash = keyToMultihash(entry.key)\n\n      yield {\n        cid: new CID(version, codec, multihash),\n        metadata: pin.metadata\n      }\n    }\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   * @returns {AsyncIterable<{ cid: CID, metadata: any }>}\n   */\n  async * recursiveKeys (options) {\n    for await (const entry of this.repo.pins.query({\n      filters: [(entry) => {\n        const pin = cbor.decode(entry.value)\n\n        return pin.depth === Infinity\n      }]\n    })) {\n      const pin = cbor.decode(entry.value)\n      const version = pin.version || 0\n      const codec = pin.codec ? multicodec.getName(pin.codec) : 'dag-pb'\n      const multihash = keyToMultihash(entry.key)\n\n      yield {\n        cid: new CID(version, codec, multihash),\n        metadata: pin.metadata\n      }\n    }\n  }\n\n  /**\n   * @param {Object} options\n   * @param {boolean} [options.preload]\n   */\n  async * indirectKeys ({ preload }) {\n    for await (const { cid } of this.recursiveKeys()) {\n      for await (const childCid of this._walkDag(cid, { preload })) {\n        // recursive pins override indirect pins\n        const types = [\n          PinTypes.recursive\n        ]\n\n        const result = await this.isPinnedWithType(childCid, types)\n\n        if (result.pinned) {\n          continue\n        }\n\n        yield childCid\n      }\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinQueryType|PinQueryType[]} types\n   * @param {AbortOptions} [options]\n   */\n  async isPinnedWithType (cid, types, options) {\n    if (!Array.isArray(types)) {\n      types = [types]\n    }\n\n    const all = types.includes(PinTypes.all)\n    const direct = types.includes(PinTypes.direct)\n    const recursive = types.includes(PinTypes.recursive)\n    const indirect = types.includes(PinTypes.indirect)\n\n    if (recursive || direct || all) {\n      const result = await first(this.repo.pins.query({\n        prefix: cidToKey(cid),\n        filters: [entry => {\n          if (all) {\n            return true\n          }\n\n          const pin = cbor.decode(entry.value)\n\n          return types.includes(pin.depth === 0 ? PinTypes.direct : PinTypes.recursive)\n        }],\n        limit: 1\n      }))\n\n      if (result) {\n        const pin = cbor.decode(result.value)\n\n        return {\n          cid,\n          pinned: true,\n          reason: pin.depth === 0 ? PinTypes.direct : PinTypes.recursive,\n          metadata: pin.metadata\n        }\n      }\n    }\n\n    const self = this\n\n    async function * findChild (key, source) {\n      for await (const { cid: parentCid } of source) {\n        for await (const childCid of self._walkDag(parentCid, { preload: false })) {\n          if (childCid.equals(key)) {\n            yield parentCid\n            return\n          }\n        }\n      }\n    }\n\n    if (all || indirect) {\n      // indirect (default)\n      // check each recursive key to see if multihash is under it\n\n      const parentCid = await first(findChild(cid, this.recursiveKeys()))\n\n      if (parentCid) {\n        return {\n          cid,\n          pinned: true,\n          reason: PinTypes.indirect,\n          parent: parentCid\n        }\n      }\n    }\n\n    return {\n      cid,\n      pinned: false\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PreloadOptions & AbortOptions} options\n   */\n  async fetchCompleteDag (cid, options) {\n    await all(this._walkDag(cid, { preload: options.preload }))\n  }\n\n  /**\n   * Throws an error if the pin type is invalid\n   *\n   * @param {any} type\n   * @returns {type is PinType}\n   */\n  static checkPinType (type) {\n    if (typeof type !== 'string' || !Object.keys(PinTypes).includes(type)) {\n      throw invalidPinTypeErr(type)\n    }\n    return true\n  }\n}\n\nPinManager.PinTypes = PinTypes\n\nmodule.exports = PinManager\n\n/**\n * @typedef {Object} PinOptions\n * @property {any} [metadata]\n *\n * @typedef {Object} PreloadOptions\n * @property {boolean} [preload]\n *\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"lineCount":334}},"error":null,"hash":"29cd1edaf3702d22608c661243783693","cacheData":{"env":{}}}