{"id":"../node_modules/ipfs-core/src/components/block/stat.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"./utils","loc":{"line":3,"column":29},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/block/stat.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/block/utils.js"},{"name":"ipfs-core-utils/src/with-timeout-option","loc":{"line":4,"column":34},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/block/stat.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core-utils/src/with-timeout-option.js"}],"generated":{"js":"'use strict'\n\nconst { cleanCid } = require('./utils')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('.').BlockService} config.blockService\n * @param {import('.').Preload} config.preload\n */\n\nmodule.exports = ({ blockService, preload }) => {\n  /**\n  /**\n   * Print information of a raw IPFS block.\n   *\n   * @param {CID} cid - CID of the block to get a stats for.\n   * @param {StatOptions & AbortOptions} options\n   * @returns {Promise<Stat>}\n   * @example\n   * ```js\n   * const cid = CID.from('QmQULBtTjNcMwMr4VMNknnVv3RpytrLSdgpvMcTnfNhrBJ')\n   * const stats = await ipfs.block.stat(cid)\n   * console.log(stats.cid.toString())\n   * // Logs: QmQULBtTjNcMwMr4VMNknnVv3RpytrLSdgpvMcTnfNhrBJ\n   * console.log(stat.size)\n   * // Logs: 3739\n   * ```\n   */\n  async function stat (cid, options = {}) {\n    cid = cleanCid(cid)\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    const block = await blockService.get(cid)\n\n    return { cid, size: block.data.length }\n  }\n\n  return withTimeoutOption(stat)\n}\n\n/**\n * @typedef {Object} Stat\n * An object containing the block's info\n * @property {CID} cid\n * @property {number} size\n *\n * @typedef {Object} StatOptions\n * @property {boolean} [preload]\n *\n * @typedef {import('.').AbortOptions} AbortOptions\n * @typedef {import('.').CID} CID\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/block/stat.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/block/stat.js":"'use strict'\n\nconst { cleanCid } = require('./utils')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('.').BlockService} config.blockService\n * @param {import('.').Preload} config.preload\n */\n\nmodule.exports = ({ blockService, preload }) => {\n  /**\n  /**\n   * Print information of a raw IPFS block.\n   *\n   * @param {CID} cid - CID of the block to get a stats for.\n   * @param {StatOptions & AbortOptions} options\n   * @returns {Promise<Stat>}\n   * @example\n   * ```js\n   * const cid = CID.from('QmQULBtTjNcMwMr4VMNknnVv3RpytrLSdgpvMcTnfNhrBJ')\n   * const stats = await ipfs.block.stat(cid)\n   * console.log(stats.cid.toString())\n   * // Logs: QmQULBtTjNcMwMr4VMNknnVv3RpytrLSdgpvMcTnfNhrBJ\n   * console.log(stat.size)\n   * // Logs: 3739\n   * ```\n   */\n  async function stat (cid, options = {}) {\n    cid = cleanCid(cid)\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    const block = await blockService.get(cid)\n\n    return { cid, size: block.data.length }\n  }\n\n  return withTimeoutOption(stat)\n}\n\n/**\n * @typedef {Object} Stat\n * An object containing the block's info\n * @property {CID} cid\n * @property {number} size\n *\n * @typedef {Object} StatOptions\n * @property {boolean} [preload]\n *\n * @typedef {import('.').AbortOptions} AbortOptions\n * @typedef {import('.').CID} CID\n */\n"},"lineCount":57}},"error":null,"hash":"871313627b72e36d48a76e251ffd595b","cacheData":{"env":{}}}