{"id":"../node_modules/ipfs-core/src/components/add-all/utils.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238}],"generated":{"js":"'use strict'\n\n/**\n * @typedef {Object} FixedChunkerOptions\n * @property {'fixed'} chunker\n * @property {number} [maxChunkSize]\n *\n * @typedef {Object} RabinChunkerOptions\n * @property {'rabin'} chunker\n * @property {number} avgChunkSize\n * @property {number} [minChunkSize]\n * @property {number} [maxChunkSize]\n *\n * @typedef {FixedChunkerOptions|RabinChunkerOptions} ChunkerOptions\n *\n * Parses chunker string into options used by DAGBuilder in ipfs-unixfs-engine\n *\n *\n * @param  {string} [chunker] - Chunker algorithm supported formats:\n * \"size-{size}\"\n * \"rabin\"\n * \"rabin-{avg}\"\n * \"rabin-{min}-{avg}-{max}\"\n *\n * @returns {ChunkerOptions}   Chunker options for DAGBuilder\n */\nconst parseChunkerString = (chunker) => {\n  if (!chunker) {\n    return {\n      chunker: 'fixed'\n    }\n  } else if (chunker.startsWith('size-')) {\n    const sizeStr = chunker.split('-')[1]\n    const size = parseInt(sizeStr)\n    if (isNaN(size)) {\n      throw new Error('Chunker parameter size must be an integer')\n    }\n    return {\n      chunker: 'fixed',\n      maxChunkSize: size\n    }\n  } else if (chunker.startsWith('rabin')) {\n    return {\n      chunker: 'rabin',\n      ...parseRabinString(chunker)\n    }\n  } else {\n    throw new Error(`Unrecognized chunker option: ${chunker}`)\n  }\n}\n\n/**\n * @typedef {Object} RabinChunkerSettings\n * @property {number} avgChunkSize\n * @property {number} [minChunkSize]\n * @property {number} [maxChunkSize]\n *\n * Parses rabin chunker string\n *\n * @param  {string}   chunker - Chunker algorithm supported formats:\n * \"rabin\"\n * \"rabin-{avg}\"\n * \"rabin-{min}-{avg}-{max}\"\n *\n * @returns {RabinChunkerSettings}   rabin chunker options\n */\nconst parseRabinString = (chunker) => {\n  const options = {}\n  const parts = chunker.split('-')\n  switch (parts.length) {\n    case 1:\n      options.avgChunkSize = 262144\n      break\n    case 2:\n      options.avgChunkSize = parseChunkSize(parts[1], 'avg')\n      break\n    case 4:\n      options.minChunkSize = parseChunkSize(parts[1], 'min')\n      options.avgChunkSize = parseChunkSize(parts[2], 'avg')\n      options.maxChunkSize = parseChunkSize(parts[3], 'max')\n      break\n    default:\n      throw new Error('Incorrect chunker format (expected \"rabin\" \"rabin-[avg]\" or \"rabin-[min]-[avg]-[max]\"')\n  }\n\n  return options\n}\n\n/**\n *\n * @param {string} str\n * @param {string} name\n * @returns {number}\n */\nconst parseChunkSize = (str, name) => {\n  const size = parseInt(str)\n  if (isNaN(size)) {\n    throw new Error(`Chunker parameter ${name} must be an integer`)\n  }\n\n  return size\n}\n\nmodule.exports = {\n  parseChunkSize,\n  parseRabinString,\n  parseChunkerString\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-core/src/components/add-all/utils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/add-all/utils.js":"'use strict'\n\n/**\n * @typedef {Object} FixedChunkerOptions\n * @property {'fixed'} chunker\n * @property {number} [maxChunkSize]\n *\n * @typedef {Object} RabinChunkerOptions\n * @property {'rabin'} chunker\n * @property {number} avgChunkSize\n * @property {number} [minChunkSize]\n * @property {number} [maxChunkSize]\n *\n * @typedef {FixedChunkerOptions|RabinChunkerOptions} ChunkerOptions\n *\n * Parses chunker string into options used by DAGBuilder in ipfs-unixfs-engine\n *\n *\n * @param  {string} [chunker] - Chunker algorithm supported formats:\n * \"size-{size}\"\n * \"rabin\"\n * \"rabin-{avg}\"\n * \"rabin-{min}-{avg}-{max}\"\n *\n * @returns {ChunkerOptions}   Chunker options for DAGBuilder\n */\nconst parseChunkerString = (chunker) => {\n  if (!chunker) {\n    return {\n      chunker: 'fixed'\n    }\n  } else if (chunker.startsWith('size-')) {\n    const sizeStr = chunker.split('-')[1]\n    const size = parseInt(sizeStr)\n    if (isNaN(size)) {\n      throw new Error('Chunker parameter size must be an integer')\n    }\n    return {\n      chunker: 'fixed',\n      maxChunkSize: size\n    }\n  } else if (chunker.startsWith('rabin')) {\n    return {\n      chunker: 'rabin',\n      ...parseRabinString(chunker)\n    }\n  } else {\n    throw new Error(`Unrecognized chunker option: ${chunker}`)\n  }\n}\n\n/**\n * @typedef {Object} RabinChunkerSettings\n * @property {number} avgChunkSize\n * @property {number} [minChunkSize]\n * @property {number} [maxChunkSize]\n *\n * Parses rabin chunker string\n *\n * @param  {string}   chunker - Chunker algorithm supported formats:\n * \"rabin\"\n * \"rabin-{avg}\"\n * \"rabin-{min}-{avg}-{max}\"\n *\n * @returns {RabinChunkerSettings}   rabin chunker options\n */\nconst parseRabinString = (chunker) => {\n  const options = {}\n  const parts = chunker.split('-')\n  switch (parts.length) {\n    case 1:\n      options.avgChunkSize = 262144\n      break\n    case 2:\n      options.avgChunkSize = parseChunkSize(parts[1], 'avg')\n      break\n    case 4:\n      options.minChunkSize = parseChunkSize(parts[1], 'min')\n      options.avgChunkSize = parseChunkSize(parts[2], 'avg')\n      options.maxChunkSize = parseChunkSize(parts[3], 'max')\n      break\n    default:\n      throw new Error('Incorrect chunker format (expected \"rabin\" \"rabin-[avg]\" or \"rabin-[min]-[avg]-[max]\"')\n  }\n\n  return options\n}\n\n/**\n *\n * @param {string} str\n * @param {string} name\n * @returns {number}\n */\nconst parseChunkSize = (str, name) => {\n  const size = parseInt(str)\n  if (isNaN(size)) {\n    throw new Error(`Chunker parameter ${name} must be an integer`)\n  }\n\n  return size\n}\n\nmodule.exports = {\n  parseChunkSize,\n  parseRabinString,\n  parseChunkerString\n}\n"},"lineCount":109}},"error":null,"hash":"483ce962ec8e5f4570d0fe1c8693a25c","cacheData":{"env":{}}}