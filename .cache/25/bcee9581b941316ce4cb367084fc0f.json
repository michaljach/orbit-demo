{"id":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","dependencies":[{"name":"/Users/michaljach/Sites/golf/package.json","includedInParent":true,"mtime":1612444349509},{"name":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/package.json","includedInParent":true,"mtime":1612441378238},{"name":"cids","loc":{"line":3,"column":20},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/bitswap/unwant.js","resolved":"/Users/michaljach/Sites/golf/node_modules/cids/src/index.js"},{"name":"err-code","loc":{"line":4,"column":24},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/bitswap/unwant.js","resolved":"/Users/michaljach/Sites/golf/node_modules/err-code/index.js"},{"name":"ipfs-core-utils/src/with-timeout-option","loc":{"line":5,"column":34},"parent":"/Users/michaljach/Sites/golf/node_modules/ipfs-core/src/components/bitswap/unwant.js","resolved":"/Users/michaljach/Sites/golf/node_modules/ipfs-core-utils/src/with-timeout-option.js"}],"generated":{"js":"'use strict'\n\nconst CID = require('cids')\nconst errCode = require('err-code')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('.').NetworkService} config.network\n */\nmodule.exports = ({ network }) => {\n  /**\n   * Removes one or more CIDs from the wantlist\n   *\n   * @example\n   * ```JavaScript\n   * let list = await ipfs.bitswap.wantlist()\n   * console.log(list)\n   * // [ CID('QmHash') ]\n   *\n   * await ipfs.bitswap.unwant(cid)\n   *\n   * list = await ipfs.bitswap.wantlist()\n   * console.log(list)\n   * // []\n   * ```\n   *\n   * @param {CID | CID[]} cids - The CIDs to remove from the wantlist\n   * @param {AbortOptions} [options]\n   * @returns {Promise<void>} - A promise that resolves once the request is complete\n   */\n  async function unwant (cids, options) {\n    const { bitswap } = await network.use(options)\n\n    if (!Array.isArray(cids)) {\n      cids = [cids]\n    }\n\n    try {\n      cids = cids.map((cid) => new CID(cid))\n    } catch (err) {\n      throw errCode(err, 'ERR_INVALID_CID')\n    }\n\n    return bitswap.unwant(cids, options)\n  }\n\n  return withTimeoutOption(unwant)\n}\n\n/**\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/src/components/bitswap/unwant.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}}],"sources":{"../node_modules/ipfs-core/src/components/bitswap/unwant.js":"'use strict'\n\nconst CID = require('cids')\nconst errCode = require('err-code')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('.').NetworkService} config.network\n */\nmodule.exports = ({ network }) => {\n  /**\n   * Removes one or more CIDs from the wantlist\n   *\n   * @example\n   * ```JavaScript\n   * let list = await ipfs.bitswap.wantlist()\n   * console.log(list)\n   * // [ CID('QmHash') ]\n   *\n   * await ipfs.bitswap.unwant(cid)\n   *\n   * list = await ipfs.bitswap.wantlist()\n   * console.log(list)\n   * // []\n   * ```\n   *\n   * @param {CID | CID[]} cids - The CIDs to remove from the wantlist\n   * @param {AbortOptions} [options]\n   * @returns {Promise<void>} - A promise that resolves once the request is complete\n   */\n  async function unwant (cids, options) {\n    const { bitswap } = await network.use(options)\n\n    if (!Array.isArray(cids)) {\n      cids = [cids]\n    }\n\n    try {\n      cids = cids.map((cid) => new CID(cid))\n    } catch (err) {\n      throw errCode(err, 'ERR_INVALID_CID')\n    }\n\n    return bitswap.unwant(cids, options)\n  }\n\n  return withTimeoutOption(unwant)\n}\n\n/**\n * @typedef {import('.').AbortOptions} AbortOptions\n */\n"},"lineCount":54}},"error":null,"hash":"0fb58ee3dbf3f94a5389f21da54c92db","cacheData":{"env":{}}}